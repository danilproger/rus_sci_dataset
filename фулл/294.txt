АЛГОРИТМЫ НАВИГАЦИИ НА ВНЕШНЕЙ ПОВЕРХНОСТИ МОДЕЛИ МЕЖДУНАРОДНОЙ КОСМИЧЕСКОЙ СТАНЦИИ 

Передвижения по внешней поверхности международной космической станции космонавт осуществляет, держась за специальные поручни. Поскольку станция имеет большие размеры, для эффективного и безопасного перемещения необходимо решать задачу навигации, то есть строить оптимальный маршрут между начальным и целевым поручнями. В данной статье предлагаются алгоритмы поиска маршрутов по критерию минимальной длины или наименьшей сложности пути между двумя заданными поручнями. Рассматриваются случаи нахождения как одного, так и всех возможных маршрутов, отвечающих выбранному критерию. Поиск маршрутов осуществляется с помощью графа, в котором вершины соответствуют поручням на станции, а ребра показывают возможность перехода между соседними поручнями. Для решения задачи строится ориентированный подграф, в котором любой путь между начальной и целевой вершинами маршрута является кратчайшим (или имеет наименьшую сложность прохождения) в исходном графе. Предложенные алгоритмы можно использовать при реализации систем навигации для имитационно-тренажерных комплексов подготовки космонавтов. Применение таких систем в тренажерных комплексах позволит повысить эффективность обучения на них специалистов для выполнения работ на внешней поверхности станции. В статье проиллюстрирована система навигации в видеотренажерном комплексе, основанная на использовании описанных алгоритмов. Для отображения пути, построенного между двумя поручнями, осуществляется подсветка входящих в него поручней заданным цветом. Кроме того, затрагивается вопрос о перспективах развития тренажерных комплексов в направлении создания такой системы, которая одновременно использует технологии виртуальной реальности (шлемы виртуальной реальности, компьютерные перчатки) и систему навигации.

 Одним из важнейших инструментов для изучения космоса является международная космическая станция МКС, позволяющая проводить научные и технические эксперименты в различных областях знаний. Подготовка специалистов для работы на МКС осуществляется с помощью специальных имитационно-тренажерных комплексов и систем, основанных на использовании технологий виртуальной реальности. В таких комплексах и системах реальная обстановка заменяется на визуализируемую в масштабе реального времени трехмерную виртуальную сцену. Модель МКС содержит более 1 млн полигонов и более 358 МБ текстур . При ее визуализации с помощью системы GLView 1 моделируются источники освещения типа фара, а также мягкие и жесткие тени. Модель Земли содержит более 150 тысяч полигонов и более 1 ГБ текстур. Одной из актуальных и важных задач, возникающих при обучении космонавтов, является формирование навыков ориентации на внешней поверхности МКС. В настоящее время станция насчитывает несколько десятков модулей и имеет протяженность более ста метров. Передвигаясь по ней, космонавт может заблудиться или выбрать неэффективный маршрут, поэтому навыки ориентации очень важны для его плодотворной и безопасной работы. Для эффективного передвижения от начального положения к нужному объекту желательно знать кратчайший маршрут, то есть маршрут, содержащий наименьшее количество поручней. Прежде чем выйти в открытый космос и проводить работы в удаленных частях станции, космонавт должен выработать маршрут передвижения по поручням от его начального положения до места назначения . Этот маршрут он может выделить на виртуальной модели МКС, отмечая вручную поручни на пути с помощью указателя или используя автоматические алгоритмы. В данной статье предлагаются алгоритмы поиска маршрутов между двумя заданными поручнями, исходя из минимальной длины или наименьшей сложности пути, позволяющие реализовать навигационную систему в космическом видеотренажере. Поиск кратчайшего маршрута Под длиной маршрута будем понимать число поручней на его протяжении. Кратчайший маршрут между двумя выбранными поручнями это любой маршрут между ними, имеющий минимальную длину. Для его определения предлагается использовать неориентированный граф G, вершины которого соответствуют объектам типа поручень в виртуальной модели станции, применяемой в имитационно-тренажерных комплексах подготовки космонавтов 2. При этом любые две вершины A и B графа связаны ребром, если космонавт может непосредственно переместиться с поручня A на поручень B. Основой предлагаемого алгоритма нахождения какого-либо кратчайшего маршрута в графе G от начальной вершины V до целевой вершины V является остовное дерево G графа G с корнем в V 3, 4. Поэтому остается только пройти по всем этим ссылкам от вершины V до V и записать индексы посещенных вершин. Эти вершины и будут входить в искомый кратчайший маршрут от V до V. Для хранения графа G используем файл со следующей структурой n S, i, j, j S, i, j, j Первая строка содержит общее количество n вершин графа G. Каждая следующая строка включает последовательно символьное имя S объекта-поручня в виртуальной сцене, номер i соответствующей ему вершины графа G и список номеров вершин, связанных ребром с вершиной i. В начале работы флаг посещения и ссылку на родительскую вершину устанавливаем равными 0. Рассмотрим нахождение кратчайшего маршрута между вершинами V и V графа G. Пусть F флаг посещения вершины V, а J и P список связанных с ней вершин и ссылка на родителя соответственно. Тогда получаем следующий алгоритм Tree поиска кратчайшего маршрута между вершинами V и V в графе G. Начало. 1. Организация пустой очереди Q вершин 2. Добавление V в Q и установка F в 1 3. Проход по ссылкам P от V до V с записью в память индексов вершин, входящих в маршрут. Конец. Проиллюстрируем работу предложенного алгоритма с помощью графа G, изображенного на рисунке 1. Допустим, что необходимо построить кратчайший маршрут из вершины V в вершину V. Из рисунка видно, что G содержит три пути из V в V, при этом два из них включают по 3 ребра и один 5 ребер. Поскольку вершина V находится на более глубоком уровне дерева G от корня V, чем искомая вершина V, построение G прекращается до ее обработки. Следовательно, V не входит в G . Видно, что полученный маршрут совпадает с одним из двух имеющихся путей, содержащих минимальное число ребер. Выбор конкретного кратчайшего маршрута из нескольких возможных вариантов обусловлен порядком обработки вершин при построении остовного поддерева. В рассмотренном примере из двух вершин одного уровня глубины от корня приоритет в порядке обработки отдавался вершине с меньшим индексом. Поиск всех кратчайших маршрутов Во многих случаях необходимо не просто знать один кратчайший маршрут между двумя поручнями, а иметь выбор из различных вариантов. Для этого желательно иметь представление обо всех возможных кратчайших маршрутах между двумя вершинами графа. Использование алгоритма, предложенного ранее, не может обеспечить решение данной задачи. Однако некоторая его модификация позволит выполнить поиск всех кратчайших путей между двумя вершинами графа G, а значит, и между соответствующими поручнями на поверхности станции. Суть такой модификации алгоритма заключается в том, что вместо остовного дерева G с корнем в V будет построен ориентированный подграф G, в котором любой путь от V до V кратчайший между теми же вершинами в графе G. Фактически в G для каждой пары вершин все пути между ними будут иметь одинаковую длину. Формирование структуры G необходимо начинать с вершины V. Пусть L уровень вершины V в графе G, равный количеству ребер на пути от V до V. Для реализации описанной модификации алгоритма поиска кратчайших путей определим структуру информации о каждой вершине следующим образом имя S соответствующего вершине поручня в сцене список J вершин, связанных ребром с данной вершиной в графе G флаг F посещения уровень L вершины массив ссылок P на родительские вершины. Рассмотрим нахождение всех кратчайших маршрутов между вершинами V и V графа G. Тогда получаем следующий алгоритм GenTree поиска всех кратчайших путей между вершинами V и V в графе G. Начало. 1. Организация пустой очереди Q вершин 2. Добавление V в Q 3. В каждой строке массива M будет содержаться перечень вершин одного из кратчайших путей, начиная с V и заканчивая V. Проиллюстрируем работу предложенного алгоритма с помощью графа G, изображенного на рисунке 1. Следовательно, она не входит в G . После шага 6 получаем два кратчайших маршрута из V в V V V V V и V V V V. Например, если при прохождении проложенного маршрута существует вероятность повреждения оборудования, размещенного на поверхности станции, или в него входит труднопроходимый участок, имеет смысл выбрать более длинный, но менее сложный путь. В этом случае для нахождения оптимального пути необходимо использовать взвешенный граф G 4. В нем каждое ребро будет иметь вес, равный числовой оценке перемещения между поручнями на станции, соответствующими вершинам этого ребра. Определить путь из V в V, имеющий минимальную сложность, можно с помощью алгоритма Дейкстры 4, 5. Основная идея алгоритма Дейкстры состоит в последовательном уточнении минимального расстояния между вершиной V и всеми ближайшими вершинами до тех пор, пока не встретится вершина V. При этом в каждой обработанной вершине записывается родитель, то есть предыдущая вершина по найденному до сих пор минимальному по сложности пути. Вначале вершина V помечается и ей присваивается вес 0, а всем остальным очень большой вес. На каждом шаге выбирается неотмеченная вершина V с минимальным весом и рассматриваются все ее неотмеченные соседи V. Если вес соседа V больше суммы веса выбранной вершины V и веса ребра от нее к V, то вес V заменяется этой суммой, а родитель заменяется на V. После рассмотрения всех соседей выбранная вершина V помечается. Процесс заканчивается тогда, когда на очередном шаге выбирается вершина V. В результате получается некоторый подграф G. Для реализации алгоритма определим массив S структур, каждый i-й элемент которого соответствует вершине V и содержит следующую информацию вес d вершины, флаг-отметка F и указатель Р на родителя. Тогда алгоритм Дейкстры поиска кратчайшего пути между вершинами V и V во взвешенном графе G Dijkstra можно записать следующим образом. Начало. 1. Проход по ссылкам P от до с записью в память индексов вершин, входящих в искомый кратчайший путь. Конец. Рассмотрим в качестве примера тот же граф G, что и ранее, но с весами на ребрах. Интересно, что если применить алгоритм Дейкстры от начальной вершины V до конечной V, то получится именно этот путь. Таким образом, для алгоритма Дейкстры существенно, откуда начинать. Каждый из них будет являться одной из предыдущих вершин одного из путей минимального веса . Как уже отмечалось, возможны несколько путей минимального веса и несколько путей минимальной длины . Поэтому возникает задача найти одновременно путь минимального веса и минимальной длины. Здесь возможны несколько различных постановок задачи а поиск одного пути минимального веса среди всех путей минимальной длины б поиск всех путей минимального веса среди всех путей минимальной длины в поиск одного пути минимальной длины среди всех путей минимального веса г поиск всех путей минимальной длины среди всех путей минимального веса. Напомним, что алгоритм GenTree по графу G строил подграф G, в котором все пути из V в V имеют одинаковую минимальную длину. Аналогично алгоритм Dijkstra по графу G строил подграф G, в котором все пути из V в V имеют одинаковый минимальный вес. Если применить алгоритмы Tree и GenTree к G, будут решены задачи в и г. Система навигации Предложенные авторами алгоритмы поиска кратчайших маршрутов были апробированы при создании системы навигации для космического видеотренажера. Данный тренажер использует систему GLView визуализации трехмерных виртуальных сцен и входит в состав имитационнотренажерного комплекса подготовки космонавтов к работе на МКС. Для выбора начала маршрута необходимо навести указатель на соответствующий поручень визуализированной виртуальной модели космической станции и нажать левую кнопку мыши . Аналогично можно задать и конечный поручень пути. При наведении указателя на поручень на экране также высвечивается имя этого поручня. После выбора двух поручней между ними автоматически будут построены один или все кратчайшие маршруты. Для отображения первого построенного пути между двумя поручнями осуществляется подсветка поручней, входящих в маршрут, заданным цветом. Нажатием клавиши P на клавиатуре можно осуществлять поочередную подсветку альтернативных путей. Будущие разработки Для обеспечения большей реалистичности имитируемой окружающей обстановки и проведения более эффективного обучения специалистов в тренажерных комплексах подготовки космонавтов целесообразно применять технологию виртуальной реальности. Эта технология включает в себя использование стереовизуализации в шлемах виртуальной реальности, а также специальных компьютерных перчаток. На экраны шлема осуществляется вывод изображений, синтезированных на компьютере и аналогичных тому, что видит космонавт при работе как внутри, так и на поверхности станции. Изображения в шлеме зависят от положения наблюдателя и направления его взгляда. Поскольку определение последнего параметра является достаточно трудоемкой задачей, вместо него можно учитывать направленность головы. Эти параметры можно вычислить с использованием специальных систем трекинга. Компьютерные перчатки применяют для обеспечения взаимодействия тренирующегося человека с виртуальной средой. Они позволяют отслеживать положение, а также действия рук и пальцев. Кроме того, использование таких перчаток дает возможность реализации обратной связи . Перспективной задачей в области тренажерных комплексов подготовки космонавтов является создание системы, одновременно использующей шлемы виртуальной реальности, компьютерные перчатки и систему навигации. При этом модели рук в виртуальном пространстве должны повторять движения реальных рук и пальцев. Производя движения руками и сгибая пальцы, тренируемый космонавт сможет брать в виртуальные руки различные объекты трехмерной сцены, захватывать поручни и перемещаться по ним. Система навигации будет подсказывать правильное направление движения, подсвечивая следующий по маршруту поручень, в зависимости от текущего положения наблюдателя. Небольшая модификация предложенных алгоритмов поиска пути между двумя поручнями позволит осуществлять выбор маршрута, проходящего через заданный поручень. Кроме того, в ходе обучения система навигации сможет воспроизвести движение космонавта по выбранному пути. Итак, в данной статье были предложены и подробно рассмотрены новые алгоритмы поиска одного или всех возможных маршрутов между двумя заданными поручнями на модели МКС. На основе описанных алгоритмов была разработана система навигации для космического видеотренажера, позволяющая повысить эффективность подготовки специалистов для работы на внешней стороне станции. 