ПРОГРАММНАЯ СИСТЕМА ДЛЯ ИССЛЕДОВАНИЯ ВЫЧИСЛИТЕЛЬНОЙ СЛОЖНОСТИ РЕШЕНИЯ ЗАДАЧ НА ГРАФОВЫХ МОДЕЛЯХ 

Программная система для исследования вычислительной сложности решения задач на графовых моделях Рассматривается комплекс оригинальных программных средств «Полигон для исследования алгоритмов структурной информатики», предназначенный для экспериментального определения вычислительной сложности программных реализаций алгоритмов решения задач на графовых моделях систем. Перечислены классы решаемых задач и средства, входящие в состав комплекса. Проиллюстрирован метод исследования эффективности, основанный на выделении уровней сложности графовых моделей.

 Оценка вычислительной сложности алгоритма может быть получена теоретически либо путем вычислительных экспериментов на различных по сложности входных данных. При решении задач класса NP теоретическая оценка вычислительной сложности является асимптотической, ориентированной на наиболее трудные случаи обработки входных данных и потому далекой от оценки решения задач на практике. Актуальной проблемой развития теории вычислительной сложности алгоритмов является разработка методов получения оценок вычислительной сложности в среднем, то есть на средних по сложности входных данных. Последнее требует, в свою очередь, создания концептуальных и математических моделей определения сложности и средней сложности входных данных, а также разработки программных средств для накопления, обобщения и визуального отображения результатов экспериментов. Объектами исследований представленной работы являются программные реализации алгоритмов решения задач на графах, орграфах и орграфах с весами на вершинах и дугах. Цель исследований получение зависимости времени вычисления от параметров, характеризующих сложность обрабатываемых графов и сравнение результатов работы различных программных реализаций алгоритмов . Цель ее разработки создание среды, в которой решатели задач могли бы использоваться как для решения практических и теоретических задач, так и для анализа их вычислительной эффективности. Обычно программы, решающие задачи на графовых моделях систем, реализуются в виде отдельных приложений. В первом случае измерение времени выполнения затруднено тем, что процесс выполнения программы включает в себя не только решение задачи, но и запрос данных у пользователя и демонстрацию результатов. Поэтому можно использовать только время решения, которое такие приложения вычисляют сами . Таким образом, написание программ сильно усложняется, так как от каждой из них требуется не только решать задачу, но и проводить эксперименты на данных большого объема. Если программы написаны в виде модулей, не имеющих ИП, данная проблема не возникает, однако работать с множеством таких модулей неудобно. При создании Полигона эти соображения приняты во внимание, и система реализована в виде среды, интегрирующей модули решателей задач. Возможно также подключение модулей-приложений через специальный решатель-перемычку. Система работает с графовыми моделями, организованными в специальные базы. Разработка решателей задач сильно упрощается, так как из них вынесены все функции организации диалога с пользователем, работы с файлами или БД, демонстрации и анализа результатов. Перенесение их в основную систему не только упрощает решатели, но и дает возможность совершенствовать эти функции, не теряя совместимости старых решателей с новыми. Помимо основных модулей, решающих задачи на графах, в состав системы входят и служебные, подготавливающие данные для экспериментов. К ним относятся модули импорта графов из файлов различных форматов, модули конструктивного перечисления семейств графов, генерации семейств средних по сложности графов и случайных графов, модули порождения одних семейств графов на основе других. Эти модули реализованы по тем же правилам, что и основные решатели задач. Небольшие базы можно подготовить с помощью визуального редактора, входящего в состав Полигона. Следующим этапом подготовки исследования является выбор набора графов, который будет использоваться для экспериментов, с помощью модулей-фильтров решателей, проверяющих, удовлетворяет ли граф некоторому условию. Любой решатель, выдающий численный результат для графа, может использоваться при создании таблицы-фильтра . Использование решателей, вычисляющих структурную сложность графа, в сочетании со средствами создания фильтра на основе статистических параметров результатов позволяют реализовать новые методы отбора входных данных для исследования. Отобранные таким образом графы сохраняются в новой базе и участвуют в дальнейшем исследовании. Для запуска составляется набор решателей задач и задаются их параметры. Предварительное задание параметров всех решателей удобно для проведения длительных экспериментов, когда присутствие человека за компьютером не требуется вплоть до момента их завершения. Эту информацию можно сохранить для последующего запуска на другом наборе входных данных. Среди решателей имеются как авторские разработки, так и известные программные реализации, адаптированные для работы в Полигоне. Выдаваемые решателем результаты Полигон записывает в БД, связанную с исследуемой базой графов, вместе со временем вычисления. При этом данные содержат информацию о том, каким решателем они были получены, с какими параметрами, какие данные из БД были использованы как входные, когда был проведен эксперимент, а также описание программной и аппаратной конфигурации компьютера. Полученные результаты, накопленные в БД, анализируются с помощью различных инструментов, включенных в состав Полигона. Для анализа времени вычисления прежде всего используется модуль построения графиков. Возможно построение графиков численных данных из БД, чисел вершин и ребер графов, функций и аппроксимирующих полиномов . То, что новые графики могут быть построены на основе любых уже имеющихся, дает исследователю гибкий механизм для изучения возможных зависимостей. Например, при исследовании результатов задачи нахождения максимального общего фрагмента пары графов можно изучать зависимость времени вычисления от суммы чисел вершин исходных графов, от числа вершин максимального общего фрагмента или от более сложных параметров. В качестве альтернативы возможен экспорт данных в текстовый формат с последующим исследованием с помощью других программных средств. Результат может импортироваться обратно в Полигон. Сравнение данных, выданных новым решателем, с данными, полученными от старых, позволяет проверять его корректность и упрощает отладку новых программ. Для проведения экспериментов по оценке вычислительной эффективности алгоритмов на средних по сложности графах был разработан оригинальный метод анализа графов по их сложности. На основе метода выделены графы с низким, средним и высоким уровнем сложности. В качестве количественного значения меры сложности используется индекс структурной спектральной сложности в заданном базисе фрагментов графа 3. Для отбора графов по уровню сложности используется средство статистического анализа данных, определяющее оценку математического ожидания и создающее таблицы-фильтры, содержащие графы, значения индекса которых отличаются от нее не более чем на заданную величину . Аналогично создаются таблицы графов с высоким и низким уровнями сложности. Разработаны методы отбора графов как по их средней сложности, так и по средней сложности их фрагментов и максимальных общих фрагментов двух графов, что позволяет разрабатывать генераторы средних по сложности графов и орграфов для различных семейств. На рисунке 1 приведены примеры диаграмм трех представителей для бесконечных семейств регулярных графов степени 3 каждого уровня сложности. Индексы сложности вычислялись в базисе цепей и характеризуют протяженность и разветвленность графов. Графы низкого уровня сложности Графы среднего уровня сложности. . Графы высокого уровня сложности На рисунке 2 приведены результаты определения экспериментальных оценок вычислительной сложности для трех алгоритмов, известных из научных публикаций 4, 5. При определении оценок решалась задача поиска всех изоморфных вложений фрагмента-цикла с числом вершин 20 в регулярные графы степени 3 для трех уровней сложности графов . Исследования проводились на ЭВМ типа IBM PC . Время решения задачи измерялось в миллисекундах . В таблице приведены числа всех изоморфных вложений анализируемого фрагмента во все исследуемые графы. Экспериментальные исследования показали, что алгоритмы 3 и VF2 существенно эффективнее решают задачу, чем алгоритм VF в классе регулярных графов степени 3. На основе объемных вычислительных экспериментов с использованием программ-генераторов различных видов графов с числом вершин до 64 000 получены экспериментальные оценки вычислительной сложности решения базовых задач структурной информатики, среди которых распознавание изоморфизма графов, изоморфного вложения, определение максимального изоморфного пересечения, определение характеристик групп автоморфизмов графов, прорисовка диаграмм, определение гамильтоновых циклов, разборка графов на неизоморфные фрагменты и др. Таким образом, создано программное средство, позволяющее быстро подключать программные реализации алгоритмов решения задач структурного анализа и синтеза систем, представленных графовыми моделями, реализованные в виде EXE-модулей или DLL-библиотек, и проводить тестирование с определением экспериментальных оценок вычислительной сложности алгоритмов на широком многообразии классов графов с учетом трех уровней сложности графов. 