СРАВНИТЕЛЬНЫЙ АНАЛИЗ   ИСПОЛЬЗОВАНИЯ РЕЛЯЦИОННЫХ И ГРАФОВЫХ БАЗ ДАННЫХ   В РАЗРАБОТКЕ ЦИФРОВЫХ ОБРАЗОВАТЕЛЬНЫХ СИСТЕМ

Рассмотрены вопросы выбора варианта реализации базы данных при разработке цифровых образовательных систем. Проведен сравнительный анализ реляционного и графового подходов к хранению базовых сущностей. Продемонстрирован ряд преимуществ графовой модели в контексте удобства разработки и эффективности реализации за просов.  : графовые базы данных, реляционные базы данных, Neo4j, цифровые образовательные системы. 

В настоящее время лидирующее положение среди средств хранения данных занимают системы управления базами данных СУБД, основанные на реляционном подходе рис. 1 на трех лидирующих позициях реляционные СУБД Oracle, MySQL и MS SQL, на 4-м месте также реляционная СУБД PostgreSQL самая распространенная нереляционная СУБД MongoDB занимает 5-е место, на 6-м месте вновь находится реляционная БД DB2. Реляционный подход был сформулирован в 19691970 гг. Э. Ф. Коддом 1. Он заключается в хранении данных в таблицах с определенными между ними связями и ограничениями для поддержки целостности, корректности и неизбыточности данных. Однако за последние несколько лет начала расти доля рынка СУБД, реализующих альтернативные модели хранения данных, которые объединяют в класс нереляционных NoSQL, not only SQL. Такие модели имеют преимущество перед реляционными БД при работе со специфическими структурами данных, в частности они могут превосходить реляционные СУБД в работе со слабоструктурированными данными или с данными, явным образом связанными с визуальным представлением информации графы, диаграммы и др.. На рис. 2 представлена динамика роста популярности использования всех нереляционных СУБД независимо от модели, например, MongoDB документоориентированная СУБД, Redis СУБД, реализующая модель ключ значение, Neo4j графовая БД. Вопрос выбора подхода к организации базы данных актуален при разработке цифровых образовательных систем и сред. В последние годы в сфере образования наблюдается тенденция к индивидуализации 2, что означает организацию учебного процесса с учетом индивидуальных особенностей каждого обучающегося. В 3 показана возможность реализации такой индивидуализации с помощью специальных цифровых инструментов, которые анализируют перечень компетенций, достижений и характеристик обучающегося и генерируют его индивидуальную траекторию, представляющую собой граф. Предложенный способ генерации основан на обработке образовательных программ вуза. Сущность образовательная программа с точки зрения данных может быть представлена в виде связных ориентированных графов, описывающих зависимости между учебными дисциплинами, компетенциями, модулями и др. Авторами данной статьи было сделано предположение, что при работе с сущностями предметной области графовые базы данных могут иметь преимущество в эффективности работы и удобстве разработки в сравнении с реляционными. В данной работе рассмотрены реализации хранения данных, характерных для цифровых образовательных систем, в реляционной PostgreSQL и графовой Neo4J системах управления базами данных. Сравнительный анализ реляционных и графовых баз данных проводился в некоторых работах например, 4, нашей же целью является сравнительный анализ именно удобства использования реляционной и графовой моделей при разработке цифровых образовательных систем в контексте модели данных. Нами были проанализированы образовательные программы высшего и дополнительного образования и выявлены сущности баз данных, характерные для каждой образовательной системы. Любая информационная система, которую можно назвать образовательной, хранит данные, характерные для таких систем. Отметим, что работа посвящена разработке образовательных систем с технической точки зрения, поэтому, несмотря на различия в образовательной терминологии, некоторые разные понятия были рассмотрены с точки зрения данных как одна и та же сущность. Именно поэтому ниже приведены все подходящие термины, а в скобках вариант, выбранный в рамках данной статьи. . Содержит информацию об учебном предмете название, цель, методы обучения. Термин может также подразумевать некий обособленный раздел дисциплины, который можно изучать отдельно, например, модуль Язык SQL в курсе Базы данных., . То, что может чем владеет обучающийся по окончании образования. Если рассматривать высшее образование, то образовательными результатами являются компетенции ФГОС и связанные с ними знания, умения и навыки. Программы дополнительного образования, корпоративного образования, переподготовки могут также определять конкретные требования к сотрудникам, прошедшим обучение. . То, на что ориентировано образование на получение диплома по конкретному направлению или, в случае дополнительного или корпоративного образования, на некоторую специализацию или соответствие некоторой вакансии на рынке труда. Между выделенными сущностями можно определить следующие типы отношений, . Описывает зависимость между двумя модулями, когда изучение одного должно предшествовать изучению другого., . Описывает зависимость между двумя предметами, когда один модуль является частью другого модуля как показано выше с модулем Язык SQL в модуле Базы данных. . Компетенции знания образовательные результаты, получаемые при изучении предмета. . Компетенции знания умения навыки, которые необходимо освоить в рамках обучения по данному направлению. Структурным аспектом реляционной модели данных являются отношения таблицы 1. Для описания структуры реляционной базы данных, а также управления создание, модификация, удаление данными в уже существующем хранилище используется декларативный язык программирования Structured Query Language SQL . Таблицы реляционных баз данных можно рассматривать в двух аспектах. С одной стороны, они могут пониматься как структуры для хранения выделенных сущностей. На этом понимании основан, в том числе, подход Object-Relational Mapping объектно-реляционное отображение, когда структура таблицы понимается как некоторый класс, столбец как атрибут класса, а строка как объект класса. С другой стороны, реляционный подход к БД предполагает, что таблица хранит сами отношения между сущностями. Так, например, можно рассмотреть отношение Подписка между пользователями в социальных сетях. Подписка является не сущностью в привычном понимании, а отношением между двумя экземплярами сущности Пользователь Пользователь1 подписан на Пользователь2. Схема реляционной базы данных для модели данных представлена на рис. 3. Таблицы Module модуль, Major направление, Competence компетенции содержат сущности, описанные выше. Все связи являются отношением типа многое-ко-многим Many-To-Many, что традиционно реализуется введением так называемых промежуточных таблиц для хранения этих связей. Кроме внешних ключей, эти таблицы могут содержать дополнительные данные. Например, таблица modules-major может содержать информацию о семестрах, в которых изучается модуль для конкретной образовательной программы. Отметим, что в рамках этой статьи отдельная спецификация таких данных не требуется. Использование реляционного подхода для баз данных образовательных систем имеет несколько недостатков. Во-первых, реляционная схема не различает таблицы, хранящие сущности, и таблицы, хранящие связи между объектами. Во-вторых, визуализация результатов запросов к реляционным БД опять же выглядит как таблица, которая не является естественным способом визуализации данных, носящих графовый характер. Не уменьшая достоинств реляционных БД, для повышения качества и удобства разработки цифровых образовательных систем необходимо обратиться к другим моделям хранения данных, имеющим собирательное название NoSQL not only SQL. Они призваны не целиком заменить существующие реляционные решения, а дополнить их там, где они недостаточно гибки и удобны. Создатели нереляционных решений отмечают более высокую производительность при использовании специфических моделей данных и легкость работы с ними 5. Одна из классификаций NoSQL базы данных приведена в 6. Основываясь на модели данных, можно разделить нереляционные хранилища на 4 группы 1 Базы данных NoSQL на основе модели ключ значение Redis, MemcacheDB и т. п. 2 хранилища колонок Cassandra, HBase 3 документоориентированные базы данных MongoDB, Couchbase 4 графовые СУБД OrientDB, Neo4J. Графовые БД являются одним из наиболее популярных и актуальных подвидов нереляционных хранилищ 5. Такие БД оперируют представлениями данных в виде графов и позволяют эффективно совершать привычные для них операции. Для реализации хранения модели данных, описанной выше, была выбрана Neo4j самая популярная на сегодняшний день графовая СУБД 6. В основе ее работы лежит аппарат ориентированных графов. Узлы nodes хранят основную информацию об объектах и сгруппированы по видам с помощью специальных меток labels. Также узлы связаны друг с другом отношениями ребрами, в метках которых можно хранить данные . Для манипуляций с данными используется язык Cypher, синтаксис которого достаточно близок к современным языкам разработки. Как было отмечено ранее, представленная выше модель данных может быть описана ориентированным графом, что означает естественную возможность реализации в Neo4j. Для основных сущностей определены три метки Модуль, Направление и Компетенция. Вершины разных меток могут хранить разный набор атрибутов. Определены следующие связи между сущностями Связь Описание ПРЕДШЕСТВУЕТ Описывает зависимость между двумя модулями, когда один модуль необходим для освоения другого СОДЕРЖИТСЯ Описывает зависимость между двумя модулями, когда один модуль является составной частью другого ИМЕЕТНАПРАВЛЕНИЕ Связывает предмет и направление подготовки. Ребро также содержит свойства первый и последний семестр преподавания предмета РАЗВИВАЕТКОМПЕТЕНЦИИ Связывает предмет и компетенции. Описывает компетенции, которые являются результатом освоения предмета. Также связывает направление подготовки и компетенции. Описывает компетенции, которыми должен обладать выпускник данного направления Для сравнительного анализа удобства использования реляционного и графового подходов в контексте разработки цифровых образовательных систем обратимся к конкретным примерам типовых запросов, которые могут быть использованы при работе с такими системами., Реализация на языке SQL Реализация на языке Cypher, Для сокращения запроса считаем, что id модуля заранее известен и равен 0. Реализация на языке SQL Реализация на языке Cypher Приведенные примеры показывают, что обе модели данных эмулируют обход графа. Однако в силу своей структуры реляционная модель для прохода по графу требует явного рекурсивного прохода с операцией соединения на каждом уровне, при этом осуществляется многократный проход по одному и тому же набору записей. Графовые БД, опираясь на представление графа, естественным образом осуществляют переход от вершины к ее смежным вершинам за один шаг. Обратим внимание, что запросы 1 и 2 практически не отличаются. Это связано с тем, что Cypher позволяет указать максимальную и минимальную глубины связей, которые надо пройти. В данном случае эти значения не указаны возвращаются все предки. Помимо выигрыша в удобстве проектирования запросов к базе данных и в количестве операций, Neo4J предоставляет удобный интерфейс визуализации данных в запросах, встраиваемый автоматически в каждую БД. Так, выполняя запрос на получение предмета с названием Системное программное обеспечение, можно также получить информацию о связанных узлах рис. 4. Представленная визуализация при работе с графовой БД позволяет видеть данные в естественном для них представлении, что облегчает восприятие данных и позволяет быстрее проверять корректность запросов. Проведенный анализ позволяет говорить о преимуществе в цифровых образовательных системах в ряде случаев графовых баз данных перед реляционными в контексте проектирования запросов, скорости их выполнения и удобства работы с самой базой данных. Возможно применение графовых БД с опорой на большое количество различных связей между объектами в образовательных системах, что позволяет рассматривать такие объекты как графы. Еще раз подчеркнем, что графовая структура воспроизводима в реляционных базах данных, но для эффективной работы с графовыми данными в таких БД потребуются больше времени, более сложные запросы, а также, возможно, использование сторонних библиотек. Чем больше запрос использует графовую структуру, тем он становится сложнее и медленнее 7. В дальнейших исследованиях предполагается продолжить анализ NoSQL-средств для работы с данными в цифровых образовательных средах, а также выполнить разработку специализированных расширений для графовых баз данных, позволяющих более эффективно разрабатывать соответствующие приложения в области образования. 