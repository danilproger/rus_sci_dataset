РАЗРЕШЕНИЕ КОНФЛИКТОВ  В СИСТЕМАХ РАДИОЧАСТОТНОЙ ИДЕНТИФИКАЦИИ  С ИСПОЛЬЗОВАНИЕМ ИДЕНТИФИКАТОРОВ МЕТОК  И ПРОЦЕДУРЫ ПОСЛЕДОВАТЕЛЬНОЙ КОМПЕНСАЦИИ  КОНФЛИКТНЫХ СИГНАЛОВ 

Предлагается модификация алгоритма разрешения конфликтов, описанного в стандарте ISO/IEC 18000-6.  В отличие от стандартного алгоритма, для разрешения конфликтов используются идентификаторы меток и процедура последовательной компенсации конфликтных сигналов. Показывается, что алгоритм может быть представлен в терминах стек-алгоритма, устойчивого к ошибкам восстановления процедуры компенсации конфликтных сигналов. Исследуется влияние ошибок процедуры последовательной компенсации конфликтных сигналов  на работу алгоритма разрешения конфликта. Ключевые слова  — системы радиочастотной идентификации, идентификаторы меток, процедура последовательной компенсации конфликтных сигналов, алгоритм разрешения конфликтов.  

В настоящее время системы радиочастотной идентификации Radio Frequency Identification Devices RFID находят широкое применение в различных областях 1. В общем случае в системе имеется некоторое центральное устройство считыватель и множество меток. Считыватель должен уметь определять, какие метки находятся в его зоне действия. Для решения этой задачи считыватель посылает по радиоканалу запрос. Все метки, которые успешно приняли этот запрос, посылают ответ, содержащий идентификатор метки. В системе должны быть приняты меры, которые позволяют либо разнести по времени сигналы от разных меток, либо обеспечить успешный прием сигналов даже при их наложении. В настоящей работе рассматриваются только способы, обеспечивающие разнесение сигналов по времени с помощью некоторого алгоритма разрешения конфликта. Такие способы описываются, в частности, в стандарте ISOIEC 18000-6 2, где упоминаются два варианта алгоритма разрешения конфликта. Первый вариант основан на известном алгоритме ALOHA, второй на древовидном алгоритме разрешения конфликтов, впервые предложенном в работах 3, 4. В данной статье рассматривается второй вариант, который имеет преимущество перед первым 36. Упрощенно работу системы идентификации, функционирующую согласно стандарту ISO IEC 18000-6 при использовании древовидных алгоритмов разрешения конфликта, можно описать следующим образом. Все время функционирования системы разделено на непересекающиеся интервалы сеансы. В начале очередного сеанса считыватель посылает, на который отвечают все метки, которые находятся в радиусе действия считывателя. Если нет меток, которые отвечают на начальный запрос, или есть только одна такая метка, то сеанс заканчивается. В противном случае происходит конфликт, т. е. наложение сигналов от разных меток. Во время сеанса конфликт разрешается с помощью древовидного алгоритма разрешения конфликта. В течение сеанса считыватель передает повторные запросы, на которые могут отвечать только те метки, которые отвечали на начальный запрос. Остальные метки не могут передавать до окончания сеанса даже в том случае, если окажутся в зоне действия считывателя. Одной из характеристик системы является интервал времени от момента появления метки в зоне действия считывателя до того момента, когда считыватель идентифицирует метку, т. е. успешно примет сигнал от метки. В статье предлагается для уменьшения задержки идентификации видоизменить алгоритм разрешения конфликтов, который описан в стандарте ISO IEC 18000-6. Совместно рассматриваются следующие два направления использование при разрешении конфликта уникальных идентификаторов меток и специальная обработка сигналов на считывателе, называемая . Следует отметить, что ранее, по отдельности, оба эти направления улучшения алгоритма разрешения конфликта уже рассматривались. Идея использовать адреса абонентских устройств обсуждалась в самых первых работах, посвященных древовидным алгоритмам. Различные варианты реализации этой идеи описаны и проанализированы в работах 5, 6. Использование процедуры последовательного погашения конфликтных сигналов в древовидных алгоритмах впервые рассмотрено в публикации 7. В этой работе был описан алгоритм, реализация которого на практике связана с существенными техническими проблемами. В дальнейшем были предложены алгоритмы, которые допускают более простую реализацию 810. При описании модели системы будем использовать устоявшуюся терминологию для работ, в которых исследуются алгоритмы разрешения конфликтов в системах со случайным множественным доступом СМД. Интервал времени, который начинается в момент передачи запроса и заканчивается моментом окончания передачи ответа на данный запрос, будем называть . При этом мы абстрагируемся от детального рассмотрения последовательности событий, которые происходят в окне. Для нас важным является лишь тот факт, что каждая находящаяся в зоне действия считывателя метка к началу окна получает от считывателя некоторую информацию о предыдущем окне, и на основе этой информации метка принимает решение передавать или не передавать в этом окне. Длительность окна зависит от особенностей реализации системы идентификации и, согласно данным, приведенным в стандарте ISOIEC 18000-6, составляет порядка 4 мс. Далее будет введена модель системы, с помощью которой будут исследованы такие характеристики системы радиочастотной идентификации, как скорость идентификации и средняя задержка идентификации. Эти характеристики являются относительными. За единицу времени принята длительность окна. При этом под понимается некоторая условная величина, которая показывает среднее число меток, идентифицируемых в единицу времени при условии, что все метки постоянно находятся в зоне действия считывателя. В реальных системах перемещение меток зависит от назначения системы идентификации. Разработка математической модели, описывающей такое перемещение, является отдельной задачей. В большинстве работ, в которых исследуются алгоритмы разрешения конфликтов в системе идентификации 11, 12, процесс поступления меток в зону действия считывателя описывается пуассоновским потоком. В настоящей работе мы будем рассматривать следующую модель поступления меток. Если метка находится вне зоны действия считывателя, то к началу каждого очередного окна метка с некоторой вероятностью перемещается в зону действия считывателя и с вероятностью 1 остается вне зоны Если в некотором окне считыватель успешно принимает сигнал от метки, то считается, что произошла идентификация метки, и метка удаляется из зоны действия считывателя. Все последующее рассмотрение делается в предположении, что метка не может быть удалена из зоны действия считывателя до идентификации. это случайная величина, равная числу окон, в течение которых метка находится в зоне действия считывателя. Математическое ожидание данной случайной величины . Далее в работе метки называются, а считыватель БС. С учетом вышесказанного систему можно рассматривать как систему передачи сообщений от абонентов к БС. Данная система будет состоять из абонентов и БС. Абоненты передают сообщения на БС по восходящему каналу связи. Ответную информацию о ситуации в восходящем канале абоненты получают от БС по нисходящему каналу связи. Каждому абоненту присваивается адрес, представленный в двоичной системе счисления. Диапазон возможных адресов изменяется от 0 до 1. Будем полагать 2, где разрядность адреса. Сформулируем основные допущения модели, описывающей функционирование системы СМД. Совокупность данных допущений представлена в большинстве работ, посвященных СМД, и образует СМД. Как правило, в этих работах классическая модель модифицируется или изменением отдельных допущений, или введением новых допущений. 1. Все время работы системы подразделяется на окна. Моменты разделения окон известны всем абонентам системы. Абонент может начинать передачу только в начале окна. 2. . Все передаваемые сообщения имеют равную длину, принимаемую за единицу времени и совпадающую с длиной окна. Для таких сообщений будем использовать термин . Окну с номером далее просто окно будет соответствовать интервал времени 1, . 3 . В каждом окне абонент может различать три ситуации в канале нет передачи пакетов ПУСТО передает один абонент УСПЕХ два и более пакета передаются одновременно КОНФЛИКТ. Следуя работам Цыбакова 3, 5, для трех вышеописанных ситуаций будем использовать обозначения П, У и К. 4. . Все абоненты узнают о состоянии канала в конце текущего окна до того, как необходимо принять решения о действиях в следующем окне. 5. . Канал связи свободен от ошибок. Все абоненты получают правильную информацию о состоянии в канале. 6 . Будем полагать, что в одном окне у каждого абонента может появиться не более одного пакета. Вероятность появления пакета будем обозначать через . Тогда где случайная величина, равная числу пакетов, появившихся в окне с номером у абонента с номером среднее число пакетов, возникающих у всех абонентов в одном окне, и для всех 0 и 0, 1. Применительно к данной системе допущений далее сформулируем алгоритм, для которого будет приведено выражение для скорости алгоритма и получено значение средней задержки алгоритма. Число пакетов, передаваемых в канал в окне, образует в окне . Пустому окну соответствует 0. Если в окне передает только один абонент, то это 1. Пусть в окне возникает первоначальный конфликт кратности . Правило, в соответствии с которым абоненты, участвующие в конфликте, принимают решение о передаче пакетов, называется АРК. интервал времени, соответствующий длительности АРК в окнах. Кратность сеанса число пакетов, передаваемых в первом окне сеанса. Если 0 или 1, то сеанс длится одно окно. Каждому сеансу можно поставить в соответствие двоичное ДРК. Вершины дерева соответствуют окнам АРК. Корень дерева образует вершина, в которой наблюдается первоначальный конфликт. Концевые вершины дерева окна с ситуациями П или У. При 0 или 1 корневая вершина дерева совпадает с концевой. ДРК, в котором в первоначальном конфликте все абоненты системы передают пакеты, образует . Правило, в соответствии с которым пакеты, поступающие в систему, могут присоединиться к АРК, называется АДК. предполагает, что пакеты, поступающие в систему в течение текущего сеанса, могут быть переданы в канал только в первом окне следующего сеанса. В данной статье будет использоваться именно блокированный АДК. Данный класс алгоритмов показывает высокую эффективность при разрешении конфликтов и обеспечивает конечную задержку передачи сообщения в системе при сколь угодно большом числе абонентов. Древовидные алгоритмы были детально изучены как для схемы разбиения, использующей механизм подбрасывания монеты для разрешения конфликтов 3, 4, так и для схемы, использующей адреса абонентов 3, 4. Эти алгоритмы при разрешении конфликтов не используют дополнительную информацию физического уровня. Развитие методов цифровой обработки сигналов и методов помехоустойчивого кодирования привело к возможности использовать процедуру ПККС на физическом уровне 7. ПККС можно рассматривать как декодирование с использованием некоторой дополнительной информации. Рассмотрим пример 7, иллюстрирующий, как ПККС позволяет повысить эффективность работы древовидных алгоритмов рис. 1. Пусть в окне абоненты и одновременно передают пакеты, что приводит к их наложению. Обозначим через сигнал, принятый БС к концу окна, а через и сигналы, соответствующие пакетам данных. Сигнал формируется в результате наложения на входе приемника сигналов и и шумов. Далее при рассмотрении этого примера будем считать, что шумы в канале отсутствуют. Тогда можно записать, где знак означает операцию смешивания сигналов. После обработки сигнала БС выносит решение о том, что в окне произошел конфликт. Сигнал сохраняется БС в сигнальной памяти. Получив сигнал в конце окна 1, БС успешно выделяет сигнал . По выделенному сигналу восстанавливается пакет абонента . Далее БС выполняет процедуру ПККС и нейтрализует выделенный сигнал из сохраненной смеси сигналов . Можно записать, где знак означает операцию нейтрализации си гнала из смеси сигналов. В результате этой операции успешно восстанавливается сигнал . Таким образом, дальнейшее разрешение конфликта не требуется. В рассмотренном примере длительность сеанса сокращается на одно окно по сравнению с традиционными древовидными алгоритмами. Алгоритм, использующий ПККС, впервые был предложен в работе 7. Авторы назвали его SICTA Successive Interference Cancellation in a Tree Algorithm. При этом алгоритм был рассмотрен только для системы с бесконечным числом абонентов и неограниченной сигнальной памятью, используемой для хранения конфликтных сигналов. Наличие у БС потенциально неограниченного объема памяти для хранения конфликтных сигналов практически нереализуемо. В работах 8, 9 была рассмотрена модель алгоритма SICTA с единичной памятью, которая позволяет на практике существенно упростить процедуру ПККС. Введем новое допущение в модель системы относительно объема сигнальной памяти БС. 7. На физическом уровне БС имеется возможность сохранять только один принятый из канала связи сигнал. Устройство БС представлено на рис. 2. БС имеет единичную сигнальную память и блоки, реализующие операцию определения ситуации в канале и процедуру ПККС. Предлагаемый в данной работе алгоритм для системы с конечным числом абонентов и единичной сигнальной памятью будем рассматривать как комбинацию двух алгоритмов алгоритма работы БС и алгоритма работы абонента. Базовая станция определяет ситуацию в канале. Согласно допущению 3 классической модели, в восходящем канале связи могут быть три различные ситуации П, У, К. Если ситуация в канале У и в последнем непустом окне был конфликт, БС выполняет процедуру ПККС, используя единичную сигнальную память. После данной процедуры по обратному нисходящему каналу связи абонентам передается расширенная информация о ситуации в канале. 8 Объем обратной связи, доступной на подуровне управления доступом к среде УДС абонента, расширяется с учетом возможностей процедуры ПККС. Расширенная обратная связь определяет 5 возможных ситуаций в канале 1 П ПУСТО отсутствие передачи 2 У УСПЕХ передает один абонент 3 УН УСПЕХ и НЕ КОНФЛИКТ передает один абонент, а процедура ПККС позволяет восстановить оставшийся сигнал как пакет второго абонента или отсутствие передачи память и нейтрализуя сигнал . При этом может произойти ошибка в процедуре ПККС ввиду наличия остаточного сигнала при нейтрализации сигнала . В этом случае декодер не может правильно продекодировать сигнал и делает вывод о том, что пакет с данными искажен. БС определяет ситуацию как УК, и в сигнальной памяти сохраняется смесь сигналов и . Следовательно, возникает ложный конфликт кратности 1, который далее надо разрешать. Вышеописанная ошибка называется . Вероятность возникновения такой ошибки будем обозначать . Согласно АРК, в окне 2 повторно передается пакет . БС успешно принимает сигнал и выполняет процедуру ПККС. При этом возможна другая ошибка ПККС, когда в результате восстановления сигнала и наличия остаточного сигнала БС воспринимает ситуацию как ложный конфликт кратности 0, который разрешается в последующих окнах. БС определяет ситуацию как УК, и в сигнальной памяти сохраняется смесь сигналов и . Такую ошибку будем называть а через обозначать вероятность возникновения данной ошибки. Разрешение ложного конфликта потребует двух дополнительных пустых окон 3 и 4. Если ошибка в окне 2 не происходит вероятность события 1, БС выделяет остаточный сигнал, который не связан с полезным сигналом и формирует ситуацию УН. В этом случае сеанс завершается в окне 2. Все вышесказанное сформулируем в следующем допущении. В силу ошибок восстановления информация обратной 4 УК УСПЕХ и КОНФЛИКТ передает один абонент, а процедура ПККС позволяет восстановить оставшийся сигнал как конфликт ситуация имеет место, когда в предыдущем окне был конфликт кратности 3 и более рис. 3 5 К КОНФЛИКТ одновременно передают два и более абонента. Ситуация УН соответствует двум случаям процедура ПККС успешно восстанавливает оставшийся сигнал как пакет данных в предыдущем окне был конфликт кратности 2, рис. 4, процедура ПККС восстанавливает оставшийся сигнал как отсутствие передачи в предыдущем окне был ложный конфликт кратности 1 при возникновении ошибки в процедуре ПККС, рис. 4, . Ошибки процедуры ПККС подробнее будут рассмотрены в следующем разделе. Сигнал восходящего канала сохраняется в сигнальной памяти только при ситуациях К и УК. В реальных приемных устройствах с процедурой ПККС возможно появление ошибок, обусловленных наличием остаточных сигналов после нейтрализации принятого сигнала в исходном составном сигнале. Для примера рассмотрим ДРК между абонентами и рис. 5. После окна, в котором имела место ситуация К, в сигнальной памяти сохраняется смесь сигналов и . В окне 1 БС успешно принимает сигнал и выполняет процедуру ПККС, пытаясь восстановить сигнал, используя сигнальную связи, поступающая на подуровень УДС абонента, не точна. Значения вероятностей ошибок восстановления после нейтрализации успешно принятого сигнала и одинаковы для всех окон, в которых выполняется процедура ПККС. В работе 10 показано, что при возникновении ложного конфликта кратности 1 алгоритм SICTA со случайными паспортами зацикливается. Авторы 10 разработали алгоритм SICTA с компенсацией при успехе и конфликте, устойчивый к ошибкам восстановления. При этом для устранения эффекта зацикливания пришлось отказаться от пропуска некоторых конфликтных окон, что привело к снижению скорости алгоритма SICTA. Рассматриваемый в работе алгоритм для схемы с фиксированными паспортами свободен от проявления эффекта зацикливания, так как ДРК является конечным и алгоритм выходит из зацикливания рис. 6 при достижении концевых вершин ДРК максимальной кратности. Для обнаружения этого события служит стек уровней вершин, в котором нулевое содержимое верхней ячейки говорит о том, что вершина ДРК является концевой. Правила работы стека уровней вершин будут рассмотрены далее при описании алгоритма работы абонента. Устройство абонента представлено на рис. 7. Каждый абонент имеет свой уникальный адрес, предназначенный для разрешения конфликтов. Для хранения пакета, поступающего в течение сеанса, используется буфер, состоящий из одной ячейки. Если за время сеанса к абоненту поступает большее число пакетов, то они не обрабатываются абонентом и считаются потерянными. В момент начала нового сеанса пакет из буфера переписывается в верхнюю ячейку стека пакетов. Подобная модель буфера на две ячейки детально описана 6. В настоящей работе роль второй ячейки выполняет верхняя ячейка стека пакетов. запоминающее устройство, состоящее из log 1 ячеек. В процессе разрешения конфликта абонент перемещает пакет по стеку в соответствии с инструкциями алгоритма, т. е. всегда занята только одна ячейка стека, на которую показывает указатель стека . Если 0, то абонент передает пакет в канал. Переменная служит для определения границ сеансов. Если 0, то текущий сеанс завершен и начинается новый сеанс. Переменная хранит ситуацию, которая наблюдалась в канале в последнем непустом окне и может принимать значения К или У. Бит адреса определяет номер текущего бита адреса, используемого для разрешения конфликта. И, наконец, абонент имеет, который имеет глубину log 1 и строится на основе ДРК. Он служит для определения уровней вершин ДРК. В ячейках стека уровней вершин хранятся номера уровней, соответствующие отдельным вершинам ДРК. Подобный стек используется в работе 13 для определения концевых вершин ДРК при наличии ложных конфликтов в канале под названием терминальный стек. Отличие стека уровней вершин от терминального стека заключается в содержании ячеек стека. Если терминальный стек хранит в ячейке число абонентов, способных передавать в определенной вершине дерева, то стек уровней вершин номер уровня вершины. Кроме того, используемая в инструкциях для терминального стека операция деления на 2 заменена в стеке уровней вершин операцией вычитания. Следует отметить, что переменные и определяют движение пакета абонента по дереву стеку пакетов и являются индивидуальными для каждого абонента, в то время как переменные и являются глобальными и вычисляются всеми абонентами одинаково. Стек уровней вершин глобальный стек заполняется одинаково всеми абонентами. В начале первого окна сеанса для алгоритма задаются начальные значения переменных. Если в буфере абонента есть пакет, то он перемещается в верхнюю ячейку стека и 0, в противном случае 1. Кроме того, задаются следующие значения переменных, 1, У, 0, 1 1 1, где содержимое ячейки стека уровней вершин с номером . В верхнюю ячейку стека уровней вершин заносится номер уровня, соответствующий корневой вершине 0 . Обозначим через содержимое ячейки стека уровней вершин с номером в окне . Если 0, то это говорит о том, что вершина дерева является концевой в ДРК максимальной кратности и абонент использовал все биты адреса для разрешения конфликта. Приведем инструкции алгоритма. 1. Если К, то 0 1 1 1 0 1 2 1 1 . . . 1 1 2 . 2. Если У, или П и У или УК и 0 0 концевая вершина ДРК максимальной кратности, то 0 1 1 1 1 2 . . . 2 1 1 1 1 1. 3. Если П и К или УК и 0 0, то 0 1 1 1 1 1. 4. Если УН, то 0 1 2 1 1 3 . . . 3 1 1 2 1 1 1 1. . 1. Если пакет передавался в окне, т. е. 0, то если У, или УН, или УК, то пакет покидает стек и абонент прекращает вычисление величины 1 если К, то 1 1 . 2. Если пакет не передавался в окне и 1, то если К, то 1 2 если У или УК и 0 0 ошибка, то 1 0 если УН, то пакет покидает стек и абонент прекращает вычисление величины 1 если П и У, то 1 0 если П и К или УК и 0 0, то 1 1 . 3. Если пакет не передавался в окне и 2, то если К, то 1 1 если У или П и У, то 1 1 если УН, то 1 2 если П и К или УК, то 1 . . 1. Если пакет передавался в окне, т. е. 0 и К, или если 1, П и К, или если 1, УК и 0 0, то 1 1. 2. Во всех остальных случаях 1 . . 1. Если 0, то сеанс завершен. 2. Если 1, то если К, то 1 1 если У, или П и У, или УК и 0 0, то 1 1 если УН, то 1 2 если П и К или УК и 0 0, то 1 . . если У или УН, то 1 У если К или УК и 0 0, то 1 К если 0 0, то 1 У. Пример ДРК двух абонентов, иллюстрирующий алгоритм работы абонента, представлен на рис. 8. В окне 1 возникает ложный конфликт кратности 1, и БС формирует ситуацию УК. По содержимому верхней ячейки стека уровней вершин абонент определяет, что окно 1 соответствует вершине уровня 0, т. е. концевой вершине, и изменяет значение переменной 1 на У. Поэтому в дополнительном окне 2 процедура ПККС не выполняется, и пакет абонента успешно принимается БС. Подобный алгоритм разрешения конфликта, когда ложный конфликт кратности 0 или 1 возникал в вершине ДРК уровня 0, был детально исследован 13. Для модели абонента с двумя ячейками понятие скорости алгоритма было введено Капетанакисом 4 как отношение числа пакетов, переданных в сеансе максимальной кратности, к длительности сеанса 1 где 2 1 длина сеанса кратности . Для предложенного в статье алгоритма, учитывающего ошибки процедуры ПККС, длительность сеанса максимальной кратности можно определить по формуле 2 Подставив 2 в 1, получим 3 При По выражению 3 можно рассчитать значение параметра скорости идентификации, определение которого было дано при описании модели системы. Следует отметить, что скорость идентификации зависит только от вероятности ошибки . Если для расчета скорости предложенного в статье алгоритма можно воспользоваться методикой, описанной в работах 6, 13, то для расчета средней задержки ее применять нельзя, что связано с особенностями использования процедуры ПККС в алгоритме. Стандарт ISOIEC 18000-6 предписывает использовать для разрешения конфликтов блокированный немодифицированный стек-алгоритм НСА 3, 4. Представленные далее численные результаты для предложенного в работе алгоритма получены применительно к описанной выше модели системы путем моделирования системы в течение 10 млн окон, что позволило обеспечить точность результатов 0,01. Результаты приведены для случая, когда значения вероятностей ложных конфликтов и, возникающих при выполнении процедуры ПККС, одинаковы между собой и равны некоторому значению т. е. В табл. 1 приведены значения средней задержки при различных интенсивностях входного потока для системы, состоящей из 16 абонентов, для НСА расчет по методике 6 и предложенного в работе алгоритма при 1 процедура ПККС всегда выполняется с ошибками. Результаты моделирования показывают, что при небольшом числе абонентов 8, 16 предложенный алгоритм всегда выигрывает у НСА, в том числе и при постоянных ошибках в процедуре ПККС. В табл. 2 приведены максимальные значения вероятностей ложных конфликтов, возникающих при выполнении процедуры ПККС, при которых предложенный алгоритм имеет выигрыш по задержке у НСА при любой интенсивности входного потока и числе абонентов от 8 до 256. В данной работе предложен и исследован алгоритм разрешения конфликтов в системах радиочастотной идентификации, основанный на использовании идентификаторов меток и процедуры ПККС. Для исследования алгоритма система радиочастотной идентификации была описана моделью системы случайного множественного доступа. С использованием данной модели получено выражение для скорости идентификации число меток, идентифицируемых в единицу времени и путем моделирования определена зависимость средней задержки идентификации от интенсивности входного потока при различном числе абонентов в системе и различных вероятностях ложных конфликтов. Полученные результаты анализа показывают, что даже при существенных ошибках в работе процедуры ПККС предложенный алгоритм дает выигрыш по средней задержке идентификации по сравнению с алгоритмом, описанным в стандарте ISOIEC 18000-6. 