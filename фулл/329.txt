АЛГОРИТМ ПОИСКА БЛИЖАЙШИХ СОСЕДЕЙ 

Дается описание оригинального алгоритма поиска ближайших соседей среди множества частиц в евклидовом пространстве. Принцип работы алгоритма заключается в представлении множества частиц в виде структуры данных линейного списка, в котором ближайшие соседи находятся рядом в порядке следования номеров элементов, так что поиск очередной пары соседей осуществляется путем сопоставления очередной точки со следующими (по порядковому номеру) элементами списка. Алгоритм позволяет решить задачу поиска всех соседей среди N частиц за время O(N2k), где k2 – коэффициент концентрации частиц. В статье приводятся экспериментальные зависимости изменения значений показателя k от плотности распределения частиц в двумерном пространстве, в которых отмечается изменение значения этого показателя до 20 единиц. В описанных экспериментах алгоритм показывает наибольшую эффективность для случая с высокой концентрацией частиц: при концентрации 80 % для поиска очередной пары соседей ему потребуется в среднем 1,3 операции, при концентрации 40 % – 1,5 операции, 2,5 операции при 20 %-ной концентрации и от 3 до 4,5 операций при концентрации от 10 до 5 % соответственно. Алгоритм эффективно реализуется средствами программирования, что делает его привлекательным для использования.

 При моделировании движения жидкости на основе метода сглаженных частиц 1 наибольшее время на каждом шаге моделирования занимает поиск для каждой частицы всех соседей в радиусе взаимодействия. Известно несколько различных алгоритмов, позволяющих реализовать поиск соседей применительно к этой задаче 2. В многомерном пространстве каждая частица p может быть представлена своими координатами. Для простоты иллюстрации, но без ограничения применимости предлагаемого подхода, будем рассматривать частицы в двухмерном евклидовом пространстве. Термин частица в данном контексте заменим термином точка. Точки p и p будут являться соседями, если расстояние между ними не превышает величину радиуса взаимодействия r. Предлагаемый алгоритм позволяет закодировать множество исходных точек в виде линейного списка, в котором частицы находятся рядом со своими ближайшими соседями, так что поиск очередной пары соседей будет осуществляться путем сопоставления очередной точки со следующими элементами списка. Введем точку p, находящуюся выше и левее всех моделируемых частиц. Пусть и расстояния от точек p и p до точки p соответственно. Заметим, что для точек p и p, являющихся ближайшими соседями, будет выполняться неравенство r. То есть две соседние точки отдалены от третьей на расстояние, не превышающее радиус взаимодействия r. Точку p будем рассматривать как центр окружностей с радиусами и. Тогда p и p расположатся на окружностях. Положение каждой точки на окружности определяется углом, отсчитываемым от оси Ox, на которой лежит точка p. Очевидно, что при таком кодировании ближайшие соседи будут находиться на одной и той же или на соседних окружностях. Таким образом, для поиска ближайших соседей достаточно выполнить следующие шаги. Листинг 1. Обобщенный алгоритм поиска ближайших соседей. Упорядочение множества частиц по значениям гарантирует, что точки на одной окружности будут находиться в упорядоченном множестве рядом, то есть иметь соседние порядковые номера, а упорядочение по значению гарантирует, что эти же точки в пределах одной окружности будут упорядочены снизу вверх по дуге . На шаге 2 осуществляется поиск соседей для каждой точки p. Возможными соседями являются точки, по порядковому номеру следующие за i. Шаг 3 отвечает за выбор очередной точки p для сравнения. На шаге 4 алгоритма проверяется выполнение условия . Если условие выполняется, значит, найдена очередная пара соседних точек . В противном случае осуществляется переход к следующей точке p. В результате каждая точка p будет сравнена с каждой точкой, расположенной выше по дуге на своей окружности, и со всеми точками последующих окружностей, для которых выполняется условие . Так, на рисунке 2а точка 1 сравнивается с точками 29, а точка 5 с точками 612. Для точки 5 можно заметить, что точки 6 и 10 находятся за пределами радиуса взаимодействия . По этой же причине для точки 10 точка 12 не будет соседней, хотя они находятся на одной окружности. С учетом условия предлагаемый алгоритм выглядит следующим образом. Листинг 2. Поиск соседей с учетом углов. Чтобы реализовать этот шаг, на шаге 2 строится индекс, ключом которого является радиус точки, а значением номер позиции на упорядоченном множестве точек, где встречается первая точка с этим радиусом. Таких данных достаточно, чтобы на упорядоченном подмножестве точек реализовать поиск искомой точки, используя эффективный алгоритм бинарного поиска. Переход к трехмерной системе координат предполагает представление положения каждой точки через два угла и расстояние. То есть к углу, лежащему на плоскости XY, добавляется угол, лежащий на плоскости YZ. В этом случае упорядочение нужно производить по значениям, и, а далее дополнительно выполнять шаги 5 10 применительно к углу. Особенности программной реализации алгоритма. В алгоритме используется большое число операций с плавающей точкой. Использование округленных значений может привести к незначительному изменению последовательности шагов в листинге 2. Так, при расчете могут возникнуть ситуации, когда не выполнится условие существования треугольника ABC. Это приведет к тому, что некоторые пары соседей не будут найдены. Чтобы этого избежать, при вычислении нужно искусственно увеличивать значение r на максимальное отклонение округления . Расчет можно вынести и за пределы цикла, если в качестве использовать значение. Оценка вычислительной сложности. В предлагаемом алгоритме выделяются три крупных шага. 1. Упорядочение множества частиц. Так как на каждой итерации алгоритма моделирования жидкости методом сглаженных частиц точки не будут сильно изменять свое положение в пространстве, частицы можно считать частично упорядоченными. При использовании алгоритма быстрой сортировки вычислительная сложность этого шага оценивается как O. 2. Построение индекса начальных позиций заключается в последовательном переборе всех частиц и имеет сложность O. 3. Перебор всех потенциальных пар частицсоседей. Сложность этого алгоритма в худшем случае будет O. Рассмотрим последний шаг подробнее. Худший случай здесь когда все частицы находятся друг от друга на расстоянии, меньшем r. Однако это маловероятно при моделировании жидкости, так как из-за больших сил отталкивания ее частицы не могут находиться близко друг к другу. В общем случае количество операций алгоритма зависит не только от количества точек N, но, что важнее, от количества соседей, а количество соседей от положения точек в пространстве. На рисунке 4 показана зависимость а количества пар соседей и б количества операций алгоритма от поверхностной концентрации точек в пространстве, которая рассчитывалась как отношение общего количества точек N к площади, занимаемой этими точками. Общее количество соседних точек почти линейно зависит от их концентрации. С увеличением количества соседних точек растет количество операций, которые потребуются алгоритму для поиска всех пар соседей. На рисунке 5 показано, что с ростом концентрации точек среднее количество операций алгоритма, необходимое для поиска одной пары соседей, уменьшается и стремится к единице . При увеличении числа точек при их постоянной концентрации значение k линейно растет. В этом эксперименте частицы распределялись равномерно случайным образом в пространстве, ограниченном квадратом. При увеличении концентрации частиц в фиксированном пространстве значение коэффициента линейного тренда параметра k изменяется нелинейно, как показано на рисунке 6. Полученные значения коэффициента рассчитывались по уравнению линейной регрессии для каждого столбца таблицы. В результате сложность алгоритма является аддитивной по отношению к трем перечисленным выше шагам и зависит от положения частиц в пространстве. Перебор всех потенциальных частиц соседей является самым сложным шагом, поэтому вычислительная сложность алгоритма определяется по нему. Простота используемых структур данных и вспомогательных процедур, используемых в предлагаемом алгоритме, а также вычислительная сложность, которая в определенных случаях приближается к идеальной, делают алгоритм привлекательным для применения в задачах моделирования жидкости методом сглаженных частиц. 