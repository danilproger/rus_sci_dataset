МЕТОДИКА ОЦЕНКИ ДЛИТЕЛЬНОСТИ ИТ-ПРОЕКТОВ ДЛЯ АНАЛИЗА ИХ ИНВЕСТИЦИОННОЙ ПРИВЛЕКАТЕЛЬНОСТИ 

Описана формализованная постановка задачи оценки длительности новых проектов. Приведены формулы и алгоритм для нахождения близких проектов, основанные на использовании теории распознавания образов. Предложен метод для оценки длительности разработки на начальной стадии и приведено описание разработанного программного продукта, реализующего данный метод.

 Задача определения длительности разработки ИТ-проектов связана с вытекающим из свойств проектной деятельности парадоксом потребность в решении этой задачи бывает максимальной тогда, когда возможности ее решить минимальны. Поясним это утверждение. Согласно ГОСТу 34.601-90, первоначальный расчет длительности проекта требуется на стадии формирования требований к автоматизированным системам . Оценка целесообразности проводится на основе сопоставления затрат и эффекта от предполагаемого проекта. Затраты, в свою очередь, являются линейной функцией от длительности работ. При этом еще нет никакой информации об объеме проекта, его функциональности и сложности, поскольку полное обследование предстоит выполнить на следующей стадии. Таким образом, требуется оценить целесообразность проекта и принять решение о продолжении работ на основе практически нулевой информации об этом проекте. Далее на стадии разработки концепции АС детально обследуется объект автоматизации, разрабатываются альтернативные варианты концепции, причем для каждого варианта оцениваются необходимые на их реализацию ресурсы. Затем выбирается наиболее оптимальный вариант, для которого разрабатывается техническое задание . На данной стадии имеется полное представление об объекте автоматизации, только об общей идее проекта, границах и об архитектуре будущей АС. При этом необходимо оценить длительность будущего проекта. Более четкое представление о проекте формируется в процессе разработки ТЗ, в котором прописываются все требования к АС. Именно на этапе проектирования появляется информация, позволяющая достоверно рассчитать длительность проекта. На этих стадиях, как уже было сказано, потребность в расчете длительности проекта становится минимальной. Таким образом, при решении задач оценки длительности новых проектов сама проектная деятельность обусловливает необходимость использования методов анализа статистических данных. На взгляд авторов, наиболее оптимальным является метод распознавания образов, который, в свою очередь, входит в группу методов, использующих концепцию нейронных сетей. Для оценки длительности новый проект относят к одному из классов, полученных на основе статистических данных о выполненных ранее проектах. По мере накопления информации о выполненных проектах будет уточняться набор классов и, возможно, сужаться интервал длительности. Опишем формализованную постановку задачи оценки длительности новых проектов. Требуется на основе данных, имеющихся в распоряжении на предпроектных стадиях, получить оценку длительности нового проекта, используя современные методы распознавания образов. При этом n общее количество проектов m количество измеряемых признаков. Значения признаков нормируются и приводятся к значениям в диапазоне 0, 1. Человеко-машинная система оценки длительности проектов состоит из трех блоков обучение, распознавание, накопление данных. В процессе обучения первоначальная выборка Р разбивается на однородные подмножества так, чтобы каждый класс состоял из объектов, близких по той или иной метрике. Применительно к решаемой задаче классом будем считать совокупности проектов с близкими значениями длительности. Для перехода от непрерывной переменной, каковой является длительность, к дискретной, разобьем возможные значения длительностей на интервалы. Тогда каждому классу будет соответствовать метка, являющаяся средней длительностью проектов в полученных интервалах. Задача распознавания состоит в указании принадлежности входного образа проекта, представленного вектором признаков, к одному из предварительно определенных классов. За счет накопления статистической информации о реальной длительности выполненных проектов системой будет достигаться требуемая точность в оценке длительности новых проектов. Обучение происходит в результате выполнения шагов, представленных на рисунке 3. На первом из них выполненные проекты разбиваются на классы в зависимости от попадания их фактической длительности в определенный интервал T, где l номер класса. Построенную таким образом модель классов будем считать эталонной, или референтной, моделью. На следующем шаге анализируются выполненные проекты и изучаются общие свойства проектов, имеющих близкие значения длительности, а также определяются отличительные характеристики проектов с различной длительностью. В результате выбираются признаки, влияющие на длительность ИТ-проектов, доступных на ранних стадиях проектирования. Строится матрица М. Осуществляется нормализация признаков. Далее выбирается метрика для определения меры близости объектов, и на ее основе имеющиеся проекты разбиваются на классы. На третьем шаге проведенная классификация оценивается с точки зрения совпадения полученных классов с классами референтной модели. При неудовлетворительной классификации анализируются выбранные признаки и их веса и методом подбора получаемые классы приближаются к референтной модели. В случае совпадения полученных классов процесс обучения на данной итерации считается завершенным, системе разрешается переходить к распознаванию. По мере накопления статистических данных на последующих итерациях функционирования система будет переходить в режим обучения . Классификация проектов на основе признаков осуществлялась с использованием метода k ближайших соседей 13, при котором проект относится к тому классу, к которому принадлежит большинство ближайших к нему известных проектов . При данном методе расчета требуется правильный выбор параметра k, так как с его увеличением снижается четкость границ классов, а при уменьшении понижается достоверность. Поэтому на практике его поиск осуществляется эвристическими методами, такими как перекрестная проверка или описанный выше алгоритм обучения. Метод поиска k ближайших соседей имеет следующие достоинства 2 предназначен для работы как с количественными, так и с качественными данными автоматически улучшает точность работы при увеличении количества исторических данных логично вписывается в концепцию работы с БД, содержащими статистические данные. 1. Признаки группы разработчиков X1 опыт работы в прикладной области, навыки владения языками и инструментарием, знание одних и тех же принципов разработки, общая квалификация программистов, слаженность команды, использование программных инструментов. 2. Признаки заказчика X2 количество отделов, количество филиалов, число сотрудников, число квалифицированных ИТ-сотрудников, число сотрудников с высшим образованием, характеристика продуктовуслуг, сменяемость персонала, количество сотрудников, непосредственно отвечающих за разрабатываемое ПО. 3. Признаки проекта X3 объем обрабатываемых данных, степень требуемой документированности, похожесть на прошлые проекты, сложность продукта, необходимая надежность, требования по быстродействию, аппаратные ограничения, уровень предполагаемого пользователя, количество пользователей, требования к безопасности, поддержка различных платформ. 4. Признаки, характерные для конкретной группы продуктов X4. На данном этапе разработки выделены признаки для одной из групп ПО web-приложений. Первые три группы являются универсальными и применяются для всех проектов, а четвертая группа зависит от вида проекта. Процесс расчета оценки включает ввод данных о новом проекте в систему, оценку расстояния близости среди имеющихся и расчет предполагаемой длительности на основе статистических данных выбранного класса проектов. Поскольку данное ПО может использоваться и несколькими командами разработчиков, и для различных отраслей, для сужения области поиска перед расчетом расстояний близости выделяются проекты, предназначенные для одной отрасли. При расчете близости статистические данные проектов одной команды имеют приоритет над общими данными . Для хранения данных в системе оценки длительности разработана БД, упрощенная схема которой приведена на рисунке 5. Программный продукт реализован в виде вебприложения на интерпретируемом языке программирования PHP с использованием СУБД MySQL в качестве хранилища данных доступ осуществляется через обычный браузер. Основой для приложения выбран Zend Framework, на базе которого разработан собственный фреймворк AbsLibrary, ориентированный на работу с отображаемыми в БД объектами, избавляющий разработчика от решения технических задач и позволяющий сконцентрироваться на требуемых функциях оценки. Авторами предусмотрена возможность подстройки процесса расчета без необходимости изменять накопленные данные о проектах или перепрограммировать систему. Шкалы, введенные в формулу как группа наборов значений w, позволяют изменять степень влияния конкретных признаков в соответствии с их значимостью для проекта. Поскольку проект имеет модульную структуру, изменить метрику можно с помощью реализации дополнительного модуля, не изменяя всю систему. Предварительная обработка данных может происходить с помощью дополнительного обработчика . При оценке инвестиционной привлекательности ИТ-проекта наиболее важным и одновременно наиболее сложным для расчета показателем является длительность его разработки. Это связано с тем, что она используется при расчете многих характеристик проекта в качестве основной переменной. Однако на этапе принятия решения о начале инвестирования отсутствует большое количество информации о характеристиках проекта, на основе которых обычно рассчитывают продолжительность разработки, а доступные для этого этапа методы дают низкую точность. Поэтому авторами разработан метод, позволяющий проводить оценку длительности разработки ИТ-проекта на ранних сроках. Предлагаемый метод основан на комбинировании принципов распознавания образов, на использовании статистических данных, опосредованных экспертных оценок и механизмов обучения и самообучения. Также данный метод имеет возможность адаптивной настройки для специфических условий. На основе этого метода разработано ПО, позволяющее проводить расчет длительности ИТ-проектов. 