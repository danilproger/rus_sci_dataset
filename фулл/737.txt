ТЕМПОРАЛЬНЫЕ НЕМОНОТОННЫЕ   ЛОГИЧЕСКИЕ СИСТЕМЫ   В ЗАДАЧАХ МОДЕЛИРОВАНИЯ СИСТЕМ УПРАВЛЕНИЯ  СЛОЖНЫМИ ДИНАМИЧЕСКИМИ ОБЪЕКТАМИ 

Рассматриваются возможности использования темпоральных немонотонных логических систем на основе  линейной временной логики с часами в задачах моделирования систем управления сложными динамическими  объектами, работающих в режиме жесткого реального времени. Ключевые слова  — темпоральная логика, жесткое реальное время, система управления. 

Характерным отличием сложных динамических объектов управления является необходимость выработки решений и выполнения процедур управления в условиях жесткого реального времени, когда запаздывание реакции может привести к необратимому развитию событий и неприемлемым последствиям. Дефицит времени в таких системах является одним из основных факторов, обусловливающих неполноту используемых данных и знаний. При работе с информацией с высоким уровнем неопределенности для построения систем управления сложными динамическими объектами в условиях жесткого реального времени неизбежно применение методов, ориентированных на потоки контекстнозависимой информации. П роводя рассуждения в условиях неполноты информации, можно отказаться от ранее полученных выводов в пользу вновь полученных данных, если старая и новая информации, на основе которых выполняются рассуждения, вступают в противоречие. Для формализации такого рода рассуждений предлагается использовать немонотонные логические системы. Для представления темпоральных отношений особое значение при решении задач моделирования в динамических средах имеет возможность применять не классические, а темпоральные логики, в которых время представлено имплицитно. Неполнота информации о предмете рассуждений в динамических экспертных системах, включенных в контур моделирования динамических объектов, порождает модифицируемые пересматриваемые рассуждения. Существуют два класса таких систем экспертные системы мягкого и жесткого реального времени. В системах жесткого реального времени промедление с реакцией может приводить к необратимому развитию событий и неприемлемым последствиям, в отличие от систем мягкого реального времени, где плавное увеличение времени запаздывания приводит к постепенному ухудшению качества функционирования. Экспертные системы жесткого реального времени это, чаще всего, системы, включенные в контур управления движущихся объектов. Примерами формализмов рассуждений для экспертных систем мягкого реального времени являются представленные ниже немонотонные логические системы, разработанные на базе линейной темпоральной логики с часами 1. Темпоральная логика умолчаний была предложена как средство моделирования пересматриваемых рассуждений в интеллектуальных системах реального времени. TDLC строится аналогично обычной логике умолчаний Р. Рейтера далее DL. Отличие TDLC от DL в основном обусловлено тем обстоятельством, что в ее основе лежит TLC, а не классическая логика первого порядка. Умолчания в TDLC имеют вид где и формулы TLC. Систему логики TDLC составляют темпоральные теории с умолчаниями, где множество темпоральных умолчаний множество формул TLC множество всех предикатных символов, встречающихся в элементах множеств и назначение часов, ставящее в соответствие каждому предикатному символу из некоторую последовательность натуральных чисел локальные часы. Теории с умолчаниями в TDLC аналогичны так называемым нормальным теориям с умолчаниями, множество которых является подмножеством всех теорий с умолчаниями в DL. Как и для нормальных теорий с умолчаниями, для теорий с умолчаниями в TDLC можно показать, что они всегда имеют хотя бы одно расширение. Темпоральная логика умолчаний TDLC отличается от TDLC тем, что в ее основе лежит упрощенный пропозициональный вариант TLC, называемый TLC, а также ограничениями, наложенными на синтаксис умолчаний, в частности, теории с умолчаниями не обязательно должны быть нормальными. Умолчания в TDLC имеют вид где, темпоральные или модальные литеры. Темпоральная логика умолчаний TDLC является обобщением TDLC . Умолчания здесь имеют вид, где, любые формулы TLC . Рассмотрим темпоральный вариант логики минимальной веры и отрицания по умолчанию МВNF . Логика МВNF является бимодальной немонотонной системой, позволяющей моделировать поведение во времени разумного агента, способного к интроспективным рассуждениям и делающим выводы на основе как того, что он знает, так и того, чего он НЕ знает. МВNF базируется на TLC, в алфавит которой добавлены два эпистемических модальных оператора минимальная вера и not отрицание по умолчанию. Семантика МВNF строится аналогично семантике логики МВNF. Отличие состоит в том, что интерпретационную структуру формул здесь образует пара не обязательно различных множеств темпоральных интерпретаций в смысле TLC, а не множеств интерпретаций в смысле классической пропозициональной логики, как в оригинале. Множества интерпретаций могут трактоваться как универсальные структуры Крипке, т. е. как структуры возможных миров, в которых каждый мир темпоральная интерпретация достижим из любого другого мира. В связи с тем, что отношение достижимости в таких структурах универсально, без потери общности можно идентифицировать универсальную структуру Крипке с множеством интерпретаций. Немонотонный характер МВNF и МВNF обеспечивается посредством определения отношения предпочтения на множестве интерпретационных структур. Несмотря на то что исследования в области формализации немонотонных рассуждений активно ведутся, подходов, учитывающих специфику рассуждений в условиях жесткого реального времени, было предложено сравнительно немного. Среди них выделяется концепция активной логики, которая развивается исследователями, входящими в Activ Logic Group, University of Maryland, и является одной из наиболее хорошо известных разработок по данной теме для систем жесткого реального времени. Суть ее состоит в том, что моделируемый процесс рассуждения рассматривается как некоторая последовательность событий, которые могут быть соотнесены с моментами времени reasoning situated in time. Время, таким образом, является при проведении рассуждений во времени важным ресурсом, от состояния которого зависят результаты этих рассуждений. Примером конкретной реализации концепции активной логики является формализм, отвечающий принципам логического программирования и рассматриваемый как система, основанная на правилах и, таким образом, ближе связанный со спецификой динамических экспертных систем 2. Систему данного формализма составляют так называемые шаговые теории, представляющие собой пару, где конечное множество правил двух видов строгих и правдоподобных, а есть ациклическое отношение предпочтения, заданное на множестве . Доказательством в теории называется конечная последовательность множеств вида now, где номер элемента последовательности множество помеченных литералов множеств мнений следующих четырех типов strict q, infer q, distrusted q, reinstate q, где q любой пропозициональный литерал. Эти типы понимаются, соответственно, как литерал, выводимый строго, литерал, выводимый правдоподобно, литерал, к которому утрачено доверие, литерал, к которому восстановлено доверие. обозначает -й элемент последовательности множеств мнений в доказательстве. Последним элементом последовательности является множество мнений такое, что дальнейшие шаги вывода не приводят к изменению являющегося его подмножеством множества помеченных литералов меняется только значение в элементе now . Следствием шаговой теории является помеченный литерал любого из указанных четырех типов, представляющий собой элемент множества . Переход от текущего множества мнений к новому шаг вывода осуществляется посредством всех возможных применений специальных правил вывода четырех типов по одному для каждого из типов помеченных литералов. Эти правила не следует путать с правилами из множества по отношению к ним правила вывода играют ту же роль, что в классической логике правило Modus Ponens играет по отношению к материальной импликации. Результаты каждого шага вывода полностью определяются текущим множеством мнений. Возможность соотносить результаты рассуждения с моментами времени темпоральная чувствительность достигается посредством использования ссылок в антецедентах строгих и правдоподобных правил на литералы вида now . Построенная таким образом немонотонная темпоральная логическая система позволяет формализовать рассуждения, свойства которых удовлетворяют специфике систем жесткого реального времени, и может быть использована в качестве формализованного инструмента синтеза архитектуры системы моделирования сложного динамического объекта. Предлагаемые формализованные структуры использованы для решения задачи синтеза архитектуры системы моделирования корабельной автоматизированной системы управления. Архитектура проектируется как множество интеллектуальных агентов на основе концепции активной логики, распределенных по сети, мигрирующих по ней в поисках релевантных данных, знаний и процедур и кооперирующихся в процессе поиска решений. Каждый из интеллектуальных агентов проектируется как носитель фрагмента знаний, доступных другим агентам. Система имитационного моделирования ИМ представляет собой распределенную многоагентную систему имитационного моделирования, включающую в себя универсальную и специализированную системные компоненты 3. Специализированная системная компонента включает имитационные модели функционирования имитационные модели процессов штатное оборудование и программное обеспечение объектов технологическое программное обеспечение базы данных характеристик процессов и систем. Универсальная компонента обеспечивает распределенный интерактивный режим работы, не зависящий от состава и сложности решаемых задач, за счет распределенной обработки приложений на принципах архитектуры клиент сервер, использования объектно-ориентированного подхода, развитости интерфейсной части с прикладными системами, широких графических возможностей, а также встроенных средств удаленного мониторинга и управления. Ядром универсальной компоненты является система моделирования и интеллектуального управления, построенная на базе инструментария динамических экспертных систем жесткого реального времени. Универсальная системная компонента включает инструментальную среду разработки динамических экспертных систем, систему управления распределенными базами данных и базами знаний БЗ систему генерации имитационных моделей внешней среды и формирования сценариев действия внешней среды картографическую систему компьютерную сеть, функционирующую на основе протокола TCPIP, как средство информационного обмена и межсетевого взаимодействия с территориально удаленными испытательными стендами и объектами системы графического отображения исследуемых процессов на базе проекционных систем и мультимедиапроекторов систему многоагентного интеллектуального управления сложными объектами с использованием сетевых протоколов высокопроизводительных вычислений и многозвенных моделей межсетевого взаимодействия. Основные функции системы многоагентного интеллектуального управления загрузка сценариев, подготовленных для моделирования. Обеспечивается возможность одновременной загрузки и параллельного выполнения нескольких сценариев их количество ограничивается только объемом памяти компьютера и его производительностью отображение одного или нескольких параллельно выполняющихся процессов моделирования динамическое отображение поведения объекта на реальной карте интерактивное изменение параметров движения и координат объектов динамическое связывание моделей систем, участвующих в работе информационная поддержка всех динамических процессов моделирования регистрация и накопление в протоколе моделирования основных событий. В протокол заносятся описания исходной и конечной ситуаций, все действия по управлению и изменению параметров работы систем. Система генерирует графическую среду проектирования моделей процессов, объектно-ориентированную подсистему имитации для функционирования моделей и создает инструментарий для установки и измерения временных, точностных и других показателей эффективности процессов. Система автоматически оживляет разработанную модель, облегчая визуализацию исполнения любых процессов. При этом обеспечивается автоматическая фиксация метрик анализируемых процессов. Эта возможность позволяет проводить эксперименты с различными организационными и техническими структурами, сравнивая их по временным, точностным и количественным характеристикам. Кроме того, используется широкий спектр средств проведения факторного анализа, с помощью которого достаточно быстро можно определить, как добавление ресурсов в ключевых точках процесса повлияет на его исполнение. Система использует ряд базовых компонент, на основе которых строится модель процессов. К ним относятся сценарии, блоки, инструменты, ресурсы, рабочие объекты. Сценарии управляют механизмами моделирования дискретных событий и позволяют определить одновременное исполнение нескольких моделей. Блоки выполняют такие операции над объектами, как создание объектов, исполнение функций, установление и разрыв ассоциаций между объектами, удаление объектов. Инструменты позволяют получать и отображать в числовой и графической форме данные о выполнении моделируемых процессов, а также вводить в заданных точках модели необходимые значения параметров. Ресурсы служат для ограничения исполняемых операций на основе объема и состава наличных ресурсов. Рабочие объекты проходят через блоки модели и обрабатываются ими, аккумулируя результаты работы в каждой точке моделируемого процесса. Выполняемые приложения не представляют собой единый блок. Они структурируются с помощью модулей и рабочих пространств на легко управляемые части и организованы в виде БЗ, совместно используемых в различных приложениях. В системе введены три вида переменных собственно переменные, параметры и простые атрибуты. Параметры получают значения в результате работы машины вывода или выполнения какой-либо процедуры. Переменные представляют собой измеряемые характеристики объектов ИМ и поэтому имеют специфические черты время жизни значения и источник данных. Время жизни значения переменной определяет промежуток времени, в течение которого это значение актуально, по истечении этого промежутка переменная считается не имеющей значения. В отличие от переменных, параметры всегда имеют значение, так как они либо заданы в качестве начальных значений, либо повторно вычислены механизмом вывода. Поскольку системе может потребоваться текущее значение переменной, для каждой из них определен источник данных сервер данных. Источником данных для переменной могут служить машина вывода, подсистема ИМ или внешний источник данных базы данных, штатное оборудование, имитационные модели и т. п.. Параметры получают новые значения после выполнения специальных операторов в заключениях правил или процедур. Вся БЗ условно разделена на три части имитационная модель, интерфейс как пользовательский, так и с внешними системами и вспомогательные классы, объекты и функции. База знаний для экспертных систем жесткого реального времени строится на основе методов формализации темпоральных рассуждений, позволяющих формализовать проводимые в условиях жесткого дефицита времени немонотонные рассуждения о свойствах изменяющейся внешней среды. Методы формализации рассуждений в экспертных системах жесткого реального времени обеспечивают эффективное решение задач моделирования поведения объекта. Дефицит времени в таких системах является основным фактором, обусловливающим неполноту и ненадежность используемых знаний и данных. В технологии экспертных систем жесткого реального времени в настоящее время отсутствует необходимая база для формализации корректных темпоральных рассуждений, проводимых при решении задач формирования темпоральных БЗ в условиях жесткого дефицита времени, которое отведено на выработку управляющих решений. Дефицит времени часто оказывается причиной неполноты и ненадежности имеющейся информации, что, в свою очередь, ведет к невозможности при решении задач проводить абсолютно надежные общезначимые рассуждения, а вместо этого заставляет прибегать к рассуждениям, имеющим предположительный характер. Следует выделить гибридную модель представления знаний, объединяющую характеристики продукционных моделей с нетрадиционными логическими моделями, и сравнительные оценки вычислительной сложности предлагаемых темпоральных рассуждений. Гибридная модель представления знаний для экспертных систем жесткого реального времени объединяет продукционные модели представления знаний с нетрадиционными логическими моделями, в частности, с немонотонной темпоральной логикой умолчаний. Такое объединение должно позволить оптимизировать соотношение между выразительными возможностями и сложностью вычислений. Гибридные модели для экспертных систем жесткого реального времени должны допускать использование операторов как традиционного отрицания из классической логики, так и отрицания по умолчанию. Формализм TDLCprod может служить основой для формирования темпоральных БЗ для экспертных систем жесткого реального времени при поступлении новой информации из внешней среды. В отличие от известных аналогичных алгоритмов он способен учитывать специфику систем реального времени, в частности, асинхронное поступление входной информации от сенсоров. В экспертных системах жесткого реального времени знания хранятся в двух типах файлов базы знаний и библиотеки знаний БиЗ. В файлах БЗ хранятся знания о приложениях определения всех объектов, объекты, правила, процедуры и т. п. В файлах БиЗ хранятся общие знания, которые могут быть использованы более чем в одном приложении, например определение стандартных объектов. Файлы БЗ имеют расширение kb knowledge base, а файлы БиЗ kl knowledge libraries. Файлы БЗ можно путем замены расширения преобразовать в БиЗ и обратно. В целях обеспечения повторной используемости приложений реализовано средство, позволяющее объединять ранее созданные kbи kl-файлы с текущим приложением. При этом система автоматически выявляет и выводит на дисплей конфликты в объединяемых знаниях. Знания структурируются следующими способами иерархия классов, иерархия модулей, иерархия рабочих пространств. Каждая из указанных иерархий может быть показана на дисплее структуры данных. Данные представляются в виде классов объектов определений объектов, имеющих определенные атрибуты. Классы наследуют атрибуты от суперклассов и передают свои атрибуты подклассам. Каждый класс исключая корневой может иметь конкретные экземпляры класса. Использование механизма множественного наследования позволяет легко произвести новый класс и решить проблему конфликтов между именами атрибутов. Все, что хранится в БЗ и чем оперирует система, является экземпляром того или иного класса. Все синтаксические конструкции тоже являются классами. Для сохранения общности даже базовые типы данных символьные, числовые, булевские и истинностные значения нечеткой логики представлены соответствующими классами. Описание класса тоже экземпляр специального класса включает ссылку на суперкласс is-а-иерархия и перечень атрибутов, специфичных для класса part-of-иерархия. Система не является единым блоком. Она структурируется с помощью модулей и рабочих пространств на легко управляемые фрагменты. Несмотря на то что функции модулей и рабочих пространств похожи, между ними есть существенные различия. Приложение может быть организовано в виде одной БЗ или в виде нескольких БЗ, являющихся модулями. Модули приложения организованы в древовидную иерархию с одним модулем верхнего уровня. Модули следующего уровня состоят из тех модулей, без которых не может работать модуль предыдущего уровня. Рабочие пространства являются контейнерным классом, в котором размещаются другие классы и их экземпляры, например объекты, связи, правила, процедуры и т. д. Каждый модуль БЗ может содержать любое количество рабочих пространств. Рабочие пространства образуют одну или несколько древовидных иерархий с отношением is-a-part-of является частью. С каждым модулем ассоциируется одно или несколько рабочих пространств верхнего нулевого уровня, каждое из этих рабочих пространств является корнем соответствующей древовидной иерархии. В свою очередь, с каждым объектом определением объекта или связи, расположенным в нулевом уровне, может быть ассоциировано рабочее пространство первого уровня, связанное с ним отношением является частью, и т. д. Различие между модулями и рабочими пространствами состоит в следующем. Модули разделяют приложение на отдельные БЗ, совместно используемые в различных приложениях. Динамические модули аналог библиотек динамического связывания могут программно подгружаться и вытесняться из оперативной памяти во время исполнения и одновременно использоваться несколькими приложениями. Рабочие пространства выполняют свою роль при исполнении приложения. Они содержат в себе и в своих подпространствах различные сущности и обеспечивают разбиение приложения на небольшие части, которые легче понимать и обрабатывать. Весь процесс разбивается на подпроцессы, и с каждым подпроцессом ассоциируется свое подпространство. Рабочие пространства могут устанавливаться в активное или неактивное состояние т. е. сущности, находящиеся в этом пространстве и в его подпространствах, становятся невидимыми для механизма вывода. Механизм активации деактивации рабочих пространств используется при наличии альтернативных групп правил, когда активной должна быть только одна из альтернативных групп. Кроме того, рабочие пространства используются для задания пользовательских ограничений, определяющих поведение приложения для различных категорий пользователей. Построенная в статье немонотонная темпоральная логическая система позволяет формализовать рассуждения, свойства которых удовлетворяют специфике систем жесткого реального времени, и обеспечивает более эффективную реализацию по сравнению с большинством существующих логик. Предлагаемые формализованные структуры использованы для решения задачи синтеза архитектуры комплекса моделирования корабельной автоматизированной системы управления. 