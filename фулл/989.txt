УПРАВЛЕНИЕ   В СОЦИАЛЬНО-ЭКОНОМИЧЕСКИХ СИСТЕМАХ РЕШЕНИЕ ЗАДАЧИ РАСПРЕДЕЛЕНИЯ РЕСУРСОВ  ПРИ ВЫПОЛНЕНИИ АДМИНИСТРАТИВНЫХ РЕГЛАМЕНТОВ 

Рассматриваются проблемы повышения эффективности системы государственного управления, одной из  которых является распределение ресурсов в процессе исполнения государственных функций и предоставления  государственных услуг. Для решения данной проблемы предлагается применение оптимизационной модели,  направленной на эффективное распределение выполняемых работ между исполнителями. При этом используются  методы теории массового обслуживания и алгоритмы поиска оптимального значения целевой функции. Ключевые слова  — административный регламент, функциональная безопасность, распределение ресурсов. 

Современная нормативно-правовая база 1, 2 требует от органов власти исполнения государственных функций и предоставления государственных услуг строго в соответствии с требованиями административных регламентов АР, делая тем самым АР ключевым элементом системы государственного управления, от эффективности выполнения которого зависит эффективность всей системы государственного управления. В настоящее время информационная система государственного управления является критической социотехнической системой, неэффективная работа которой связана с невозможностью выполнять функции, закрепленные нормативно-правовыми актами и законами, что ухудшает социально-экономическое развитие. Поэтому на функциональную безопасность информационной подсистемы системы государственного и муниципального управления напрямую влияет выполнимость АР, которая в свою очередь выражается в невыполнении требований АР. Рассмотрим структуру АР. Выделяются следующие составляющие АР 3 область применения, которая ограничивается набором соответствующих нормативных регуляторов функциональные цели субъекты выполнения регламента, в интересах которых осуществляется регламент и или которые охватываются функциональной целью объекты действия регламента процессы и операции регламента. Главное назначение АР заключается в интеграции совокупности процессов и операций, реализуемых субъектами действия над существующими объектами в интересах, определенных нормативными регуляторами и инструкциями, для достижения заданной цели 3. Поэтому если рассматривать АР как алгоритмический процесс, реализующий государственную услугу, то его основу будут составлять процессы и операции, закрепленные в нормативно-правовом акте АР рис. 1. Типовая структура АР предполагает наличие описания административных процедур, каждая из которых достигается путем выполнения определенной последовательности задач 0, где предикат наличия элемента системы принимает значение истина, если существует в системе. При этом сам АР будет характеризоваться последовательностью процедур 0. Каждая задача предполагает совершение определенных операций субъектов над объектами, т. е. Субъект-пользователь инициирует выполнение первой задачи последовательности, в результате чего запускается процесс выполнения АР. При этом субъекты и объекты выступают в качестве ресурсов, необходимых для перехода от одной задачи к другой 4. Основные проблемы, препятствующие выполнению требований АР, можно разделить на две группы связанные с логической противоречивостью описания процессов АР возникающие в процессе выполнения АР. Решение проблем логической противоречивости связано с правильным выбором методов и средств моделирования информационных процессов, подходящих для описания АР. Построение адекватной информационной модели АР позволит выявить противоречия в описании до его реализации в виде совокупности информационных процессов, исключая появление в системе ряда угроз функциональной безопасности. Однако проблемы, возникающие в процессе выполнения, являются следствием либо отсутствия, либо неправильного распределения ресурсов системы субъектов и объектов и требуют решения оптимизационных задач. Решение одной из таких задач предлагается ниже. Как уже было отмечено, выполнение некоторой задачи связано с наличием в системе соответствующего субъекта и объекта, которые можно определить как необходимые требования для . Однако стоит отметить, что система государственного управления является динамичной системой, и поэтому соблюдение условий и зависит от того, заняты ли и в момент времени, где время начала выполнения задачи где предикат, принимающий значение истина в момент времени . При этом, как показывает практика, каждый объект АР уникален и соответствует только одной задаче. Поэтому решение задачи обеспечения функциональной безопасности выполнения АР состоит в согласовании множества объектов необходимых и существующих в системе Иная ситуация обстоит с субъектами. Каждый субъект в системе государственного управления функционально может выполнять несколько задач АР. . Рассмотрим процедуру решения задачи оптимального распределения субъектов-исполнителей, входящих в группу с общим количеством субъектов-исполнителей, где каждый из субъектов-исполнителей функционально может быть задействован в выполнении задач из группы с общим количеством задач . Учитывая, что процесс выполнения задач непрерывный, а процесс поступления задач на выполнение случайный, то АР можно рассматривать как сеть узлов массового обслуживания, где каждый узел это субъект-исполнитель, который представляет собой систему массового обслуживания типа 1, выполняющую поток заявок, соответствующий задаче . Каждая выполненная задача в свою очередь инициирует выполнение следующей задачи, поэтому, согласно теореме Брке, исходящий поток с входящим потоком с параметром и показательным распределением интенсивности обслуживания является пуассоновским потоком с тем же параметром 5. Для определения интенсивности обслуживания задачи необходимо в качестве исходных данных использовать среднее время выполнения для каждой из выполняемых задач отдельно взятой организации 1 В случае если субъект выполняет несколько задач, то интенсивность обслуживания отдельной задачи определяется с учетом всех входящих потоков, т. е. 2 где вероятность появления заявки из потока, определяемая отношением потока к сумме всех потоков, выполняемых субъектом 3 Среднее время обслуживания для 1 будет определяться следующим образом 5 4 В случае если одну задачу один поток выполняет несколько субъектов, то система массового обслуживания будет, где число субъектов. Среднее время обслуживания 5 где число заявок, ожидающих в очереди среднее значение определяется по формуле 6 где Просчитав для каждой задачи среднее время выполнения и сравнив его с максимальным временем, определенным нормативными регуляторами АР, можно сказать, что если, то задача не выполняется с заданными условиями, т. е. не соблюдаются требования функциональной безопасности. Результат представим в виде коэффициента 7 Данный показатель характеризует загруженность субъекта-исполнителя при выполнении задачи и позволяет оценить запас времени, который доступен для решения других задач из группы . Решение любых задач распределения ресурсов требует выбора определенного критерия в качестве целевой функции, на получение оптимальных значений которого и будет направлена задача. Необходимо отметить, что государственное управление не имеет формализуемой целевой функции. С этим и связано отсутствие интегрального показателя качества государственного управления, на повышение которого могла быть направлена задача распределения ресурсов. Поэтому в качестве целевой функции необходимо использовать показатель, который характеризует, насколько сбалансировано распределение исполнителей между задачами АР. В качестве такого показателя целесообразно использовать дисперсию величины каждой из задач АР 8 Таким образом, данная задача распределения ресурсов субъектов между задачами АР схожа с классической задачей распределения ресурсов между поставщиками и потребителями и состоит в определении величин, определяющих поставку -субъекта -задаче и принимающих значение 1 либо 0. При этом для каждой из задач АР выполняется условие 1, а величина минимальна. Стоит отметить, что данная задача имеет сложную целевую функцию, которая зависит не только от входных данных, но и от сложности взаимосвязей субъект-задача внутри системы. Поэтому для вычисления оптимального значения целевой функции необходимо отказаться от градиентных методов методов, использующих значения градиентов или высших производных непрерывных функций, предназначенных для оценки шага и скорости приближения к точке оптимума в итерационных процессах и применить один из безградиентных методов либо алгоритм открытого поиска. Подобные алгоритмы основаны на оценках критерия качества по множеству точек, расположенных вокруг текущей точки, и выборе одной из них, где критерий принимает наименьшее из всех оцениваемых значений 6. Теперь рассмотрим процедуру распределения задач между субъектами-исполнителями. Приведем технологическую матрицу, характеризующую распределение ресурсов в системе табл. 1. В левом столбце приведены все задачи группы, в верхней строке все субъекты группы . Для каждой задачи указывается поток заявок и среднее время выполнения . При этом сумма каждой строки должна быть больше 0, так как для любой из задач должен быть определен исполнитель 9 Решение алгоритма открытого поиска заключается в поиске значения вектора, которое обеспечивало бы минимальное значение целевой функции за 2 шагов размещение с повторениями. На каждом шаге определяется соответствие системе неравенств 9. Если вектор не удовлетворяет условиям неравенства, то идет переход к следующему шагу, в противном случае вычисляется вектор, по выражениям 13, далее вычисляется вектор, выражения 46, затем вектор, и проводится проверка на соответствие условию 1 выражение 7. Если любое из 1, то идет переход к следующему шагу, иначе вычисляется значение выражение 8. После этого выбирается значение вектора, соответствующее минимальному значению 10 Алгоритм открытого поиска позволяет получить все оптимальные значения вектора, однако из-за большого количества шагов решения данный метод является слишком трудоемким. В работе 7 проведен подробный анализ безградиентных методов оптимизации для решения задачи подбора технических средств охраны. Рассматриваемая в работе задача, так же как и решаемая авторами данной статьи, имеет множество дискретных решений и сложную целевую функцию, в связи с чем был выбран генетический алгоритм ГА. Рассмотрим применяемые в настоящее время различные модели ГА. Классическим каноническим ГА принято считать алгоритм Джона Холланда 8, который имеет следующие характеристики целочисленное кодирование особей хромосом одинаковая длина всех хромосом в популяции постоянный размер популяции пропорциональный отбор одноточечный кроссовер битовая мутация формирование следующего поколения из потомков текущего поколения. Помимо классического ГА существуют и другие модели гибридный, Genitor, CHC ГА и др. Они различаются принципами отбора и формирования нового поколения особей, операторами мутации, кодированием генов и т. д. В Genitorмодели созданной Д. Уитли 9 используется специфичная стратегия отбора. Вначале производится оценка особей начальной популяции. Далее выбираются случайным образом две особи, которые скрещиваются, причем получается только один потомок, который оценивается и занимает место наименее приспособленной особи. После этого снова случайным образом выбираются две особи, и их потомок занимает место особи с самой низкой приспособленностью. Таким образом, на каждом шаге в популяции обновляется только одна особь. В работе 10 утверждается, что при помощи Genitor-модели поиск гиперплоскостей происходит лучше, а сходимость быстрее, чем у классического ГА. В CHC-модели, характеризующейся отсутствием мутаций, используется популяция небольшого размера, отбор особей в следующее поколение ведется и между родительскими особями, и между их потомками. После нахождения некоторого решения алгоритм перезапускается, и лучшая особь копируется в новую популяцию, а оставшиеся особи являются сильной мутацией мутирует примерно треть битов в хромосоме существующих, и поиск повторяется. Другой специфичной чертой является стратегия скрещивания все особи разбиваются на пары, причем скрещиваются только те пары, в которых хромосомы особей существенно различны. При скрещивании используется так называемый HUX-оператор разновидность однородного кроссовера, но в нем к каждому потомку попадает ровно половина битов хромосомы от каждого родителя. Использование гибридного алгоритма позволяет объединить преимущества ГА и классических методов. На каждом поколении каждый полученный потомок оптимизируется этим выбранным классическим методом, после чего продолжаются обычные для ГА действия. Стоит отметить, что такой метод ухудшает способность алгоритма к поиску решения с помощью отбора гиперплоскостей, однако на практике гибридные алгоритмы показывают успешные результаты 11. Это связано с тем, что обычно велика вероятность того, что одна из особей попадет в область глобального максимума и после проведенной оптимизации окажется решением задачи. Параллельные ГА предназначены для снижения преждевременной сходимости к локальному оптимуму, стимуляции разнообразия и поиска альтернативных решений той же проблемы. Они основаны на разбиении популяции на несколько отдельных подпопуляций, каждая из которых будет обрабатываться ГА независимо от других. Кроме того, разнообразные миграции индивидов порождают обмен генетическим материалом среди популяций, которые обычно улучшают точность и эффективность алгоритма. Наиболее распространенными из параллельных ГА являются островная модель и ячеистый алгоритм . Несмотря на очевидные преимущества параллельных ГА, для решения поставленной задачи будем использовать классический алгоритм, так как в рамках данной работы необходимо проверить адекватность разработанной математической модели распределения ресурсов при выполнении АР, которая в свою очередь заключается в наличии сходимости целевой функции. Получение приемлемых результатов с помощью алгоритма Холланда позволяет применять и другие модели ГА для решения задачи распределения ресурсов АР. Теперь рассмотрим каждый из этапов решения задачи. Вначале случайным образом выбираются значений вектора начальная популяция из особей, каждое из которых соответствует системе неравенств 9 и условию 1. Далее генерируется промежуточная популяция набор особей, получивших право размножаться. Для генерации промежуточной популяции используется, заключающийся в том, что каждая особь попадает в популяцию с вероятностью, пропорциональной ее приспособленности. Для данной задачи чем меньше значение, тем больше вероятность попадания в промежуточную популяцию 11 Далее особи в случайном порядке разбиваются на пары, и производится обмен случайными отсеченными частями К полученному в результате отбора и скрещивания новому поколению применяется оператор мутации, который инвертирует каждый бит популяции с вероятностью 1 . Далее из полученных особей выбираются только те, что соответствуют системе неравенств 9 и условию 1, после чего цикл повторяется снова. цикл отборскрещиваниемутация может продолжаться бесконечное число шагов, поэтому критерием останова является получение сходимости целевой функции за число шагов. При этом оптимальному значению вектора будет соответствовать наиболее приспособленная особь из последнего поколения 12 В случае если ни на одном из шагов не обеспечивается выполнение любого из условий, то распределение ресурсов в системе невозможно ввиду их недостаточности, и решение данной проблемы возможно только путем перераспределения функциональных обязанностей, расширяя при этом группу . Приведем пример работы ГА с использованием скрипта ga.m, входящего в пакет среды MatLab, для распределения семи задач между пятью субъектами-исполнителями. В качестве исходных данных будем использовать значения, удовлетворяющие условию 1 1 2 1 0.5 0.4 2 1 0.2 0.4 0.1 0.5 0.05 0.3 0.8 0.8 3 1.2 5.6 1.9 3.3 3.5. Для подсчета дисперсии величины для среды MatLab написан специальный скрипт gaexample.m, который также проверяет полученные промежуточные значения на соответствие условию 1, и в случае отсутствия такого соответствия присваивает целевой функции значение 100, в противном случае выводит значение дисперсии . В качестве начальной популяции использовалось значение вектора, при котором целевая функция отлична от 100 10 30 30 18 30 12 7 0.082326984378338. В результате расчета получены следующие численные значения ----------------------------------------------------------------------------Optimization running. Objective function value 0.004034869320015893 10 19 2 25 2 18 7. Полученное значение вектора соответствует матрице табл. 2. 