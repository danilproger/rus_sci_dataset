МЕТОДЫ И ИНСТРУМЕНТЫ РЕАЛИЗАЦИИ ПРЕДМЕТНО-ОРИЕНТИРОВАННЫХ КОМПОНЕНТОВ ОБУЧАЮЩИХ СИСТЕМ 

Предлагаются методы и инструменты реализации интерактивных модулей, интегрированных в существующие системы управления обучением и обеспечивающих расширение функциональных возможностей обучающих систем. Интерактивные модули, осуществляющие поддержку в решении задач, являются предметно-ориентированными. Для их разработки определяющее значение имеет моделирование предметной области. Авторами рассмотрены подходы к построению предметной области на базе объектно-ориентированного анализа и онтологий. На основе объектно-ориентированного анализа в Сибирском федеральном университете были разработаны ПО редакторов для курса программирования (построения блок-схем алгоритмов) и преобразователь алгебраических и логических выражений для алгебры и математической логики, а также простейший редактор химических формул. Предметная область этих разделов дисциплин достаточно четко очерчена, поэтому позволяет представлять решения задач в форме, доступной для машинной обработки. Уделено внимание проблеме переносимости разрабатываемых интерактивных модулей в различные системы управления обучением. Для этого рассмотрены спецификации, применяемые в электронном обучении. Спецификация IMS Learning Tools Interoperability определяет методы равностороннего взаимодействия интерактивных обучающих средств с сертифицированными IMS-системами управления обучением. Спецификация SCORM (Sharable Content Object Reference Model) – эталонная модель переносимых объектов контента. В качестве примера интерактивного модуля, реализуемого на основе спецификаций, разработан редактор-преобразователь логических и алгебраических выражений. Интеграция существующих и разрабатываемых систем, выявление общих принципов взаимодействия и построения предметно-ориентированных компонентов позволят упростить разработку ПО для поддержки процесса обучения. Публикация в единой информационно-образовательной среде теоретического материала и размещение поддержки в решении задач представляются главными целями разработки систем управления обучением.

 Информационные обучающие системы входят в число самых востребованных видов ПО. Гибкость ключ к будущему обучающих систем. Одним из эффективных элементов процесса обучения естественно-научным дисциплинам является решение задач. Именно этот элемент процесса обучения при разработке обучающих систем требует особенно тщательного учета специфических особенностей изучаемых дисциплин. То есть решение проблемы в общем виде невозможно, однако представляются актуальными попытки разработки инструментов для решения конкретного круга задач в терминах, максимально приближенных к данной предметной области. При этом речь идет только о типовых задачах, которые в дальнейшем служат базой для решения творческих задач, пока не поддающихся автоматизированной обработке. Таким образом, при выборе средств для решения какой-либо задачи необходимо применять специализированные инструменты, ориентированные на конкретную предметную область и предоставляющие средства для решения задач именно в этой области. В качестве предметно-ориентированных компонентов выступают тематические редакторы и подсистемы, реализующие интерпретацию и проверку корректности представленных решений 1, 2. Требования, предъявляемые к предметно-ориентированным компонентам, имеют двойственную природу. С одной стороны, разрабатываемые инструменты должны быть удобными для обучаемого, решающего задачу, доступными, чтобы упростить процесс его работы, сделать ее более понятной. С другой стороны, представляемое решение должно быть максимально формализованным, содержать точную и полную информацию, чтобы вычислитель мог интерпретировать представленное решение и автоматически проверять его корректность. Процесс формализации решения задачи сводится к описанию решения на неком формальном языке, который поддерживает систему знаков, однозначно понимаемую и человеком, и компьютером, следовательно, имеет свои синтаксические, семантические или прагматические аспекты. Введение формального языка приводит к необходимости однозначного перевода описания на одном языке в описание на другом и к необходимости их эквивалентной интерпретации. Если при обучении возникает необходимость работать с множеством предметных областей, соответственно, требуется и множество входных языков, отражающих специфику предметной области. Достоинство этих языков в возможности концентрироваться исключительно на области предметных знаний пользователя, чтобы тот не затрачивал дополнительные усилия на изучение предлагаемых инструментов. Недостатком же является необходимость разработки новых предметно-ориентированных языков и, следовательно, соответствующих компиляторов или интерпретаторов, что само по себе трудоемко. Для разработки предметно-ориентированных компонентов определяющее значение имеет моделирование предметной области. Модель предметной области обеспечивает специалисту в данной предметной области и разработчику программного инструментария единый язык, а пользователю дает возможность представлять решение задачи на языке, близком к предметной области. Модель также должна содержать определение системы знаков и их смысловое значение, то есть семантическую составляющую, что позволяет проводить машинную интерпретацию представленных решений. Введение формального языка приводит к необходимости однозначного перевода описания на одном языке в описание на другом и к необходимости их эквивалентной интерпретации. Для моделирования предметной области широко применяются объектно-ориентированный подход и онтологическое моделирование. При использовании объектно-ориентированного подхода предметная область представляется как набор объектов, обладающих определенными свойствами. Построить систему с применением объектноориентированного подхода означает проанализировать проблему и найти объекты, охватываемые системой. Рациональность использования этой методологии кроется в тщательном анализе поведения, взаимосвязей и характеристик объектов предметной области. Общие характеристики, черты и поведение этих объектов затем моделируются и реализуются как классы в объектно-ориентированном языке программирования. Объектно-ориентированная система изначально строится с учетом ее эволюции. Ключевые элементы объектного подхода наследование и полиморфизм обеспечивают возможность определения новой функциональности с помощью создания производных классов. Потомки наследуют характеристики родительских классов без изменения их первоначального описания и добавляют при необходимости собственные структуры данных и методы. Объектно-ориентированный подход позволяет описывать динамически изменяющиеся предметные области. Онтологический подход основан на идее концептуального моделирования. Онтология определяется как совокупность множеств концептов предметной области, отношений между концептами и множеств функций интерпретации, заданных на концептах иили отношениях онтологии. Онтологии отражают свойства, структуру и поведение данных предметной области. На практике в большинстве случаев онтологии представляются как словари, описывающие понятия с использованием терминологии, принятой в данной предметной области. Как правило, онтология предметной области содержит таксономию понятий. При построении онтологии предметной области решаемых задач предполагается, что определенные виды задач можно решить с использованием одной и той же модели предметной области. Для обеспечения машинной интерпретируемости имеющихся данных на первый план выступает семантика ресурсов, повышающая достоверность данных о конкретной области. Существующие методологии создания онтологий достаточно трудоемки, для этой цели применяют языки спецификации онтологий, специальные инструментальные среды, где в режиме диалога строится онтология, что является непростой задачей. На сегодняшний день нет достаточно гибких стандартных решений моделирования предметной области. Основные трудности в решении проблемы распознавания свободно конструируемых ответов и сообщений на языках, близких к предметной области, сводятся к ограничению языка общения путем четкой формулировки требований к условию задач, к исходным данным и результатам. Такие редакторы могут использоваться как для систем поддержки процесса обучения решению задач по спектру дисциплин, так и для научных исследований в этих предметных областях. При проектировании тематических редакторов в Сибирском федеральном университете использовался объектно-ориентированный подход, поскольку библиотека примитивов это набор объектов, обладающих определенным набором общих свойств, а также собственными уникальными характеристиками. Предметная область этих разделов дисциплин достаточно четко очерчена, поэтому позволяет представлять решения задач в форме, доступной для машинной обработки. Столь же важной проблемой является обеспечение переносимости разрабатываемых интерактивных программных модулей и их взаимодействия с различными системами управления обучением. Пока еще нет для этого общепринятых правил. Однако используется ряд спецификаций, в соответствии с которыми можно разрабатывать учебные модули, доступные для интеграции с системами управления обучением. Эти спецификации обладают определенными ограничениями и недостатками, поэтому их редко используют. К ним можно отнести спецификацию IMS Learning Tools Interoperability, в которой строго определены методы равностороннего взаимодействия обучающих программных средств с сертифицированными IMS учебными программными платформами 3. Возможно, со временем эта спецификация обеспечит универсальный метод интеграции учебных модулей с системами управления обучением. Другим примером является сборник стандартов и спецификаций в сфере электронного обучения SCORM 4. Для интеграции в систему управления обучением SCORM-совместимый учебный материал должен быть заранее собран в архив с определенной структурой, что накладывает ограничение на внедрение интерактивных модулей, лишая их возможности дальнейшего редактирования и добавления заданий. В качестве примера интерактивного модуля, реализуемого таким образом, можно привести разработанный в Сибирском федеральном университете редактор-преобразователь алгебраических выражений. На рисунке 2 показана схема интеграции интерактивного модуля с системой управления обучением. Интеграция существующих и разрабатываемых систем, выявление общих принципов взаимодействия и построения предметно-ориентированных компонентов позволят упростить разработку ПО для поддержки процесса обучения. Публикация в единой информационно-образовательной среде теоретического материала и размещение поддержки в решении задач представляется главной целью разработки систем управления обучением. 