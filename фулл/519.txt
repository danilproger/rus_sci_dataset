ПРИМЕНЕНИЕ МЕТОДОВ ГЛУБИННОГО ОБУЧЕНИЯ   ДЛЯ ОБНАРУЖЕНИЯ ВТОРЖЕНИЙ  

  Приведены результаты применения глубоких нейронных сетей для детектирования вредоносной активности   в сетевом трафике. В процессе исследования реализованы два вида нейронной сети: рекуррентный автоэнкодер и генеративно-состязательная сеть. Приведены результаты исследования на наборе данных CICIDS2017.  

 Выявление вредоносной активности в сетевом трафике является актуальной задачей, к решению которой существует несколько подходов 1. Классический подход состоит в написании шаблонов, по которым в сетевом трафике детектируется вредоносная активность. Данный подход является высокоэффективным, но не позволяет обнаруживать атаки, для которых отсутствует шаблон. Современные подходы базируются на том, что детектирование вредоносного трафика является частным случаем классической задачи классификации, которая в настоящее время успешно решается с помощью машинного обучения, в частности, нейронных сетей. Однако простые алгоритмы машинного обучения являются эффективными только при правильном ручном извлечении признаков из исходных данных. А извлечение необходимых признаков во многих случаях само по себе является не тривиальной задачей. Применение методов позволяет автоматически выявлять признаки, которые необходимы для дальнейшей классификации. А для выявления высокоуровневых признаков используют методы глубинного обучения 2. Цель работы исследовать возможность построения универсального классификатора сетевого трафика на основе глубокой нейронной сети. Для обучения нейронной сети был сформирован набор данных CICIDS2017, который является публично доступным и предназначен для исследований в области кибербезопасности и обнаружения вторжений. Набор данных CICIDS2017 распространяется в виде файлов 2-х форматов PCAP и CSV. Первые хранят дампы трафика, охватывающие пять дней сетевой активности, вторые содержат описание для каждого сетевого потока статистические признаки и класс, к которому принадлежит поток. Поток это последовательность сетевых пакетов, у которых совпадают следующие поля IP источника, IP получателя, порт источника, порт получателя и протокол. Для каждого потока выделяется более 80 признаков . Общие данные о наборе CICIDS2017 представлены в табл. 1. В качестве глубокой нейронной сети был выбран рекуррентный автоэнкодер 2 как нейронная сеть, предназначенная для обработки последовательностей различной длины. Обучение нейронной сети проходило на TCP пакетах из дампов трафика. Архитектура рекуррентного автоэнкодера представлена в табл. 2. Общие данные о CICIDS2017 General Information about CICIDS2017 Класс Вредоносность Количество потоков Benign 2 358 036 DoS Hulk 231 073 Port Scan 158 930 DDoS 41 835 DoS GoldenEye 10 293 FTPPatator 7 938 SSHPatator 5 897 DoS Slow Loris 5 796 DoS Slow HTTP Test 5 499 Botnet 1 966 Web Attack Brute Force 1 507 Web Attack XSS 652 Infiltration 36 Web Attack SQL Injection 21 Heartbleed 11 Архитектура рекуррентного автоэнкодера Recurrent Autoencoder Architecture Слой Число нейронов Функция активации Dropout Энкодер GRU 128 ReLU 0.2 GRU 64 ReLU 0.2 Декодер GRU 128 ReLU 0.2 GRU 256 Softmax 0 Размерность входного слоя 256 Оптимизатор 10 Функция ошибки MSE Размер пакетов batch size 64 Количество эпох 100 Для более равномерного последующего нормирования входных значений каждому нейрону на вход подается 1 байт пакета. А выбранный размер входного слоя 256 является предположительно оптимальным с точки зрения качества работы сети и сложности вычислений. При обучении рекуррентный автоэнкодер представлял собой модель, в которой ожидаемый вектор устанавливался таким же, как и исходный. А обучение происходило исключительно на легитимном трафике. Идея заключалась в том, что обученный таким образом рекуррентный автоэнкодер должен восстанавливать аномальный трафик с ошибки. рассчитывается как значение близости исходного TCP пакета и восстановленных данных. Для того чтобы определить, является ли пакет вредоносным, необходимо ввести параметр порог ошибки восстановления. Таким образом, корректируя значение порога ошибки восстановления можно настраивать точность выявления вредоносной активности. Однако во время обучения на сконструированном рекуррентном автоэнкодере не удалось получить точность восстановления более 60 . Предметная область изображения, звук, текст в существенной степени влияет на процесс обучения признакам. Например, сверточные нейронные сети в рамках задачи распознавания изображений используют иерархии объектов и базируются на особенностях работы зрительной коры головного мозга 3. Для сетевого трафика такой концепции на данный момент не выработано. Отсутствие концепции обучения признакам и недостаточная мкость модели стали причинами низкой точности восстановления. Сетевой трафик в наборе CICIDS2017 представляет собой совокупность потоков, в свою очередь, поток это совокупность сетевых пакетов. Для обучения нейронной сети в качестве входных данных могут быть использованы сетевые пакеты или потоки в зависимости от того, какие классы атак необходимо детектировать. Достоинства и недостатки двух подходов можно проследить на примере обнаружения конкретных типов атак. Атаки класса Brute Force сложно выявить инспекцией только отдельных сетевых пакетов. Ключевой особенностью таких атак является отправка множества однотипных пакетов за небольшой промежуток времени. Вредоносные и легитимные пакеты в данном случае слабо различимы. Такие атаки, как SQL Injection или XSS, ключевая информация для детектирования которых содержится внутри полезной нагрузки, сложно детектировать на уровне потоков. При работе с сетевыми потоками информация заключенная внутри полезной нагрузки, теряется. Вероятно, статистические признаки сетевого потока не позволяют закодировать достаточно много информации. Один поток может содержать сотни и тысячи сетевых пакетов, каждый из которых имеет собственные уникальные признаки. При агрегировании сетевых пакетов до уровня потоков теряется часть информации. Это то же самое, что взять предложения из некоторого текста и заменить вектором метаданных, который кодирует количество слов и символов в предложении. Таким образом, перспективным можно считать подход, при котором для различных классов атак реализуется свой метод обнаружения, основанный на особенностях представления данных и применимости определенного типа нейронной сети. Это означает, что необходимо отказаться от идеи универсального классификатора и сосредоточить внимание только на определенной группе атак. Например, классы атак, представленные в CICIDS2017, можно разделить на две группы и использовать рекомендуемые типы нейронных сетей в соответствии с табл. 3. Рекомендуемые типы нейронных сетей для CICIDS2017 Recommended Types of Neural Networks for CICIDS2017 Классы атак Типы нейронной сети Данные для обучения DoS, DDoS, Port Scan, FTPPatator, SSHPatator, Bot, Web Attack Brute Force, Infiltration, Heartbleed Автоэнкодер и генеративно-состязательная сеть 4 Сетевые потоки Web Attack SQL Injection и XSS Seq2Seq автоэнкодер Сетевые пакеты На основе предложенного подхода была разработана нейронная сеть, которая объединяет в себе вариационный автоэнкодер Variational Autoencoder, VAE и генеративно-состязатель ную сеть Generative Adversarial Network, GAN. Сети такого типа были предложены в 5 и имеют название VAEGAN. Обучение реализованной нейронной сети происходило без учителя, на легитимных сетевых потоках из набора CICIDS2017. В качестве тестовых данных были выбраны легитимные сетевые потоки, которые не входили в тренировочный набор, и сетевые потоки всех типов вредоносной активности. Общая информация о тестовой выборке представлена в табл. 4, архитектура реализованной VAEGAN сети в табл. 5. Общая информация о тестовой выборке General Information about Test Dataset Класс Вредоносность Количество потоков Benign 1 000 Port Scan 1 000 DDoS 1 000 DoS 1 000 FTPPatator 1 000 SSHPatator 1 000 Botnet 1 000 Web Attack Brute Force 1 000 Web Attack XSS 652 Infiltration 36 Web Attack SQL Injection 21 Heartbleed 11 Архитектура VAEGAN VAEGAN Architecture Слой Число нейронов Функция активации Dropout Энкодер E Dense 64 LeakyReLU 0.2 0.2 Dense 32 LeakyReLU 0.2 0.2 Dense 32 LeakyReLU 0.2 0.2 Декодер G Dense 32 LeakyReLU 0.2 0.2 Dense 32 LeakyReLU 0.2 0.2 Dense 64 LeakyReLU 0.2 0.2 Dense 80 Tanh 0 Дискриминатор D Dense 64 LeakyReLU 0.3 0.2 Dense 64 LeakyReLU 0.3 0.2 Dense 32 LeakyReLU 0.3 0.2 Dense 1 Sigmoid 0 Оптимизатор 0.001, 0.5 Размер пакета batch size 64 Размерность входного слоя энкодера и дискриминатора 80 Размерность кода 20 Начальная инициализация весов Xavier normal В VAEGAN вариационный автоэнкодер получает на вход вектор признаков для сетевого потока и учится восстанавливать максимально похожий вектор на выходе. Дискриминатор принимает на вход восстановленный и исходный векторы и учится предсказывать, какой вектор является настоящим, а какой восстановленным. Выявление вредоносной активности реализовано на основе подхода, представленного в 6. Для того чтобы определить, является ли сетевой поток вредоносным, вычисляется значение аномальности 0.1 0.9, где сетевой поток, восстановленный вариационным автоэнкодером сетевой поток, ошибка на -м слое дискриминатора, ошибка вариационного автоэнкодера. Поток считается вредоносным, если значение превышает установленный порог. Корректировать точность выявления вредоносной активности можно, регулируя значение порога аномальности. Полученные результаты представлены на рисунке. Каждая точка на этом рисунке отображает значение аномальности для сетевого потока. Красная линия установленный порог. В результате полученная точность составила 0,983, полнота 0,889, значение F-меры 0,933. Процент правильной классификации по классам представлен в табл. 6. Результат работы VAEGAN The VAEGAN Results Класс Правильно классифицированные потоки, Benign 88,2 Port Scan 98,3 DDoS 100 DoS 100 FTPPatator 100 SSHPatator 99,7 Botnet 63,9 Web Attack Brute Force 98,6 Web Attack XSS 48,3 Infiltration 100 Web Attack SQL Injection 4,8 Heartbleed 100 В настоящее время многие задачи классификации успешно решаются с помощью глубоких нейронных сетей. В работе был сконструирован рекуррентный автоэнкодер для задачи классификации сетевого трафика. Использование нейронной сети данного типа было обусловлено тем, что исходными данными являлись последовательные сетевые пакеты различной длины. Однако не было заложено никакой концепции обучения признакам. В результате точность восстановления оказалась низкой. При анализе полученных результатов были рассмотрены ключевые особенности сетевого трафика в рамках задачи классификации. Это позволило сделать предположение о неэффективности универсального классификатора и предложить подход, повышающий точность обнаружения вредоносного трафика. На основе сформулированного подхода на легитимных сетевых потоках была обучена VAEGAN сеть. В результате удалось получить высокую точность выявления сетевых потоков для выделенных классов атак. Низкий процент детектирования оказался для атак SQL Injection, XSS и Botnet, для успешного выявления которых требуется инспекция полезной нагрузки и применение рекомендуемого в табл. 3 типа нейронной сети. 