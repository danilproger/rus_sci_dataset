ПОДХОД К ПОСТРОЕНИЮ КРИПТОСХЕМ НА ОСНОВЕ  НЕСКОЛЬКИХ ВЫЧИСЛИТЕЛЬНО ТРУДНЫХ ЗАДАЧ  

Предлагается подход к построению криптосхем, основанных на двух вычислительно трудных задачах, который обеспечивает формирование подписи небольшой длины. Определены требования к выбору системных параметров криптосхем и личных ключей пользователя. Разработанный способ построения криптосхем обладает  свойством универсальности и может быть применим для построения протоколов различного типа, таких как  протокол открытого распределения ключей, протокол аутентификации с нулевым разглашением секрета.  Ключевые слова  — электронная цифровая подпись, протокол открытого шифрования, протокол обмена ключами, задача дискретного логарифмирования, задача факторизации. 

В основе криптосистем с открытым ключом ОК, например протоколов электронной цифровой подписи ЭЦП, лежит некоторая трудная математическая задача, которая определяет верхнюю границу безопасности соответствующей схемы. Криптосистемы такого типа используются для защиты и аутентификации информации в информационно-телекоммуникационных системах при условии, что неизвестны алгоритмы взлома криптосхемы и вероятность появления в обозримом будущем практически реализуемых прорывных решений используемой трудной задачи является достаточно малой. В настоящее время на практике наиболее широко используются две трудные задачи 1 задача факторизации ЗФ целых чисел специального вида и 2 задача дискретного логарифмирования ЗДЛ по простому модулю т. е. в простом конечном поле. Данные задачи независимы, и вероятность появления прорывного решения каждой из них в обозримом будущем имеет достаточно низкое значение. Для повышения безопасности алгоритмов ЭЦП, достигаемого за счет снижения вероятности взлома путем применения качественно новых прорывных решений используемых трудных задач, в работах 13 предложены схемы ЭЦП, взлом которых требует одновременного решения ЗФ и ЗДЛ. В этих криптосхемах используется ЗДЛ по простому модулю, имеющему специальную структуру 1, где и 512-битовые простые числа и четное число небольшого размера, а в качестве основания дискретных логарифмов выбирается число, имеющее порядок . Параметры и являются элементами секретного ключа, а значения, и, где mod элемент секретного ключа, составляют ОК. Один из элементов подписи вычисляется по модулю, поэтому суммарный размер ЭЦП превышает 1024 бит. Данный подход применяется для построения протоколов слепой ЭЦП 35, открытого шифрования и открытого согласования ключей 6. Однако предложенные в работах схемы характеризуются сложностью построения и большой длиной вырабатываемой подписи. В настоящей работе предлагается подход к построению криптосхем различного типа, основанных на трудности одновременного решения ЗФ и ЗДЛ по простому модулю. Использование данного подхода обеспечивает снижение размера подписи в схемах ЭЦП и устраняет громоздкость построения криптографических протоколов других видов. Для построения криптографических протоколов предлагается использовать ЗДЛ по трудно разложимому модулю для решения которой необходимо выполнить факторизацию составного модуля и решить ЗДЛ по простым модулям, являющимся делителями числа или применить один из общих методов дискретного логарифмирования метод больших и малых шагов, переборный метод, метод Полларда 7, используемых для решения ЗДЛ в любых конечных группах. Следует отметить, что общие методы становятся вычислительно нереализуемыми при сравнительно малых порядках конечной группы, равных примерно значению 2 . Однако существование специальных методов решения ЗДЛ по простому модулю таких как метод вычисления индексов 7, обладающих субэкспоненциальной сложностью, требует использования в криптосхемах чисел, имеющих достаточно большой размер, не менее 1024 бит. Появление прорывных специализированных методов решения ЗДЛ и ЗФ в обозримом будущем оценивается достаточно малыми значениями вероятности, тем не менее снижение вероятности взлома криптосхем в результате применения прорывных решений является важным моментом для криптосхем, применяемых на практике. Если криптосхема устроена таким образом, что для ее взлома требуется решить обе указанные задачи, то вероятность ее взлома существенно снижается, так как в этом случае необходима одновременная реализация двух маловероятных событий. Получение точных оценок рассматриваемых вероятностей проблематично, однако существенность указанного снижения вероятности взлома, основанного на прорывных решениях трудных задач, достаточно очевидна. Следует отметить, что необходимость решать две трудные задачи практически не приводит к повышению стойкости криптосхем, поскольку при взломе криптосхемы задачи решаются независимо друг от друга. Однако если сложности решения ЗФ и ЗДЛ по простому модулю примерно равны, то появление прорывного решения одной из этих задач не приводит к снижению стойкости заданной криптосхемы. Известно, что ЗФ составного модуля и ЗДЛ по простому модулю имеют субэкспоненциальную сложность, причем сложности решения этих задач примерно одинаковы, если размеры чисел и равны и делители числа имеют примерно одинаковый размер. Если делители числа имеют различный размер, то сложность ЗФ определяется делителем меньшего размера 8. Идея предлагаемого подхода состоит в построении криптосхем с использованием трудности ЗДЛ по трудно разложимому модулю, для которого выполняется следующее условие размер минимального делителя модуля в 2 раза меньше разрядности второго делителя . В этом случае сложность решения ЗФ примерно равна сложности ЗДЛ по простому модулю . Построение криптосхем выполняется по аналогии с известными криптосхемами, основанными на трудности ЗДЛ по простому модулю, с учетом того, что значения оснований дискретных логарифмов следует выбирать таким образом, чтобы их нельзя было бы использовать для выполнения вычислительно осуществимых алгоритмов факторизации модуля . В криптосхемах, создаваемых в рамках предложенного подхода, используется ОК, представляемый тройкой чисел, где вычисляется по формуле mod . Личным секретным ключом ЛСК пользователя является тройка чисел, где простое 1024-битовое число, простое 512-битовое число случайное число, меньшее, чем порядок числа по модулю, который обозначим как число . Требования к генерации элементов секретного ключа рассмотрены в работе 9, где показано, что число с достаточно малым значением порядка требование малого порядка генератора группы необходимо для построения схем ЭЦП с малым размером подписи может быть использовано для факторизации числа, если числа, и не удовлетворяют одному из следующих двух требований. 1. Простые числа и имеют следующую структуру 1 и 1, где и два больших четных числа, содержащих большой простой делитель. Параметр имеет размер не менее 160 бит и не является секретным. 2. Простые числа и представляются в виде 1 и 1, где и два больших четных числа, содержащих большой простой делитель. Значение порядка числа равно . Каждое из чисел и имеет размер не менее 80 бит, а параметр является дополнительным элементом секретного ключа. Генерация ОК и ЛСК в соответствии с одним из этих требований может быть легко выполнена 9, поэтому указанные требования не препятствуют практическому применению криптосхем на основе ЗДЛ по модулю специальной структуры. В этом разделе описаны протоколы ЭЦП, слепой подписи, коллективной подписи, а также протоколы открытого шифрования, открытого распределения ключей. Системные параметры и ключи пользователя, открытый и закрытый, формируются согласно требованиям, определенными в предыдущем разделе. Генерация подписи к сообщению выполняется следующим образом. 1. Сформировать случайное число и вычислить параметр mod 2. Используя некоторую специфицированную хэш-функцию, вычислить ее значение от сообщения с присоединенным к нему числом, . Параметр является первым элементом подписи. 3. Вычислить второй элемент подписи mod . Проверка подлинности подписи, к сообщению выполняется по ОК владельца подписи следующим образом. 1. Вычислить значение 2. Вычислить значение Если то подпись признается подлинной. Протокол слепой подписи используется в тех случаях, когда пользователь желает получить подпись к сообщению таким образом, чтобы подписывающий не мог впоследствии при получении и соответствующей подписи идентифицировать этого пользователя. Протокол слепой подписи построен на основе алгоритма ЭЦП, описанного в предыдущем подразделе, и реализуется по аналогии со способом, впервые предложенным в работе 10, следующим образом. 1. Пользователь инициирует взаимодействие с подписывающим лицом. 2. Подписывающий генерирует случайное число и вычисляет значение параметра которое затем отправляет пользователю. 3. Пользователь генерирует случайные числа и ослепляющие параметры, не превосходящие и вычисляет значения, и после чего отправляет подписывающему значение 4. Подписывающий вычисляет значение такое, что т. е. и направляет пользователю. 5. Пользователь вычисляет второй элемент подписи к сообщению по формуле Процедура проверки подписи выполняется так же, как и в схеме ЭЦП. Подлинность подписи доказывается путем подстановки значения на вход процедуры проверки подлинности При этом проблема анонимности решена, поскольку произвольная подпись, сформированная подписывающим, может быть сопоставлена с любой слепой подписью Действительно, если выполняются равенства mod и то верны и следующие сравнения т. е. при равновероятном случайном выборе ослепляющих параметров и подпись, с равной вероятностью могла быть порождена из любой слепой подписи, формировавшейся когда-либо подписывающим. Следует отметить, что в данном протоколе приемлемы два варианта построения модуля . В первом варианте параметр не является составным и входит в состав ОК пользователя, поскольку его раскрытие не может быть использовано для разложения модуля. Во втором варианте параметр является составным и является частью ЛСК пользователя. В этом случае вместо формул и можно использовать формулы и соответственно. В остальном описание протокола не меняется. В последних двух формулах значение является спе цифицируемым параметром протокола и превосходит на единицу значение разрядности параметра . Протокол коллективной ЭЦП необходим в случаях, когда несколько пользователей должны одновременно сформировать подпись к документу. В настоящей работе предлагается протокол коллективной ЭЦП, аналогичный протоколам с формированием общего параметра рандомизации 11, 12, однако системные параметры, протокола, генерируемые доверительным центром, и ОК и ЛСК пользователей, где 1, 2, вычисляются с учетом требований, определенных в предыдущем разделе. Протокол коллективной ЭЦП включает следующие шаги. 1. Участники протокола вычисляют коллективный ОК ... mod . 2. Каждый -й пользователь формирует случайное число и вычисляет значение и рассылает его остальным пользователям. 3. Пользователи вычисляют общий рандомизирующий параметр ... mod и первый элемент коллективной подписи, . 4. Каждый -й пользователь вычисляет свою долю во втором элементе коллективной подписи mod, и рассылает ее остальным пользователям. 5. После этого пользователи вычисляют второй элемент коллективной подписи, по формуле ... mod . Проверка подлинности коллективной подписи, к сообщению выполняется следующим образом. 1. Вычислить коллективный ОК ... mod и значение 2. Вычислить значение Если то подпись признается подлинной. Используя в качестве прототипа протоколы, описанные в работах 1315, легко разработать протокол коллективной слепой подписи, в котором общая тройка значений, и генерируется доверительным центром. Используя ОК некоторого пользователя, можно послать секретное сообщение этому пользователю по открытым каналам связи. Для этого сообщение следует зашифровать по ОК, применяя следующий алгоритм, построенный по аналогии с алгоритмом открытого шифрования Эль-Гамаля 16. 1. Сгенерировать случайное число . 2. Вычислить число mod . 3. Используя ОК получателя, вычислить значение mod . 4. Зашифровать сообщение путем умножения сообщения на значение, играющее роль разового ключа шифрования mod . 5. Отправить получателю криптограмму в виде пары чисел, . Получатель криптограммы, используя свой ЛСК, выполняет процедуру дешифрования сообщения, которая описывается следующими шагами. 1. Вычислить разовый общий секретный ключ mod . 2. Используя расширенный алгоритм Евклида, вычислить значение, обратное значению по модулю . Легко показать, что число является взаимно простым с модулем, поэтому обратное значение существует и легко вычисляется с помощью расширенного алгоритма Евклида. 3. Расшифровать сообщение путем умножения значения на целое число mod . Корректность описанной схемы шифрования легко доказать самостоятельно. Для реализации протокола открытого распределения необходимо участие доверительного центра, который генерирует системные параметры протокола, отвечающие требованиям, определенным в предыдущем разделе. Пользователи генерируют случайный ЛСК в виде числа и вычисляют свой ОК по формуле mod . Протокол включает стандартные шаги схемы Диффи Хеллмана. 1. Пользователь А вычисляет общий секретный ключ с удаленным пользователем В по ОК последнего и своему ЛСК по формуле 2. Пользователь В вычисляет общий секретный ключ с пользователем А по ОК последнего и своему ЛСК по формуле В результате этих шагов оба пользователя получают одно и то же значение, которое известно только им, и для этого не потребовалось использовать защищенный канал связи. Если атаку на протокол проводить с участием доверительного центра, то она окажется эффективной в случае появления прорывного решения ЗДЛ по простому модулю. Таким образом, стойкость протокола к таким атакам примерно равна его стойкости к атакам без участия доверительного центра, однако его безопасность существенно выше, если учесть вероятность взлома в результате появления прорывных решений трудных задач. Протоколы с нулевым разглашением используются в процедурах строгой аутентификации удаленных абонентов телекоммуникационных систем. Пользователь, подлинность которого устанавливается, называется . Пользователь, который проверяет подлинность доказывающего, называется . Термин подчеркивает, что при обмене информацией между доказывающим и проверяющим не происходит какой-либо утечки информации о ЛСК доказывающего. Рассмотрим протокол с нулевым разглашением на основе сложности ЗДЛ по составному модулю, в котором ОК вычисляется по формуле mod . Доказывающий в ходе протокола показывает, что он знает ЛСК, соответствующий его ОК. Протокол состоит из многократного выполнения следующего раунда. 1. Доказывающий выбирает текущий разовый секрет, вычисляет значение mod которое играет роль разового ОК, и передает его проверяющему. 2. Проверяющий случайным образом выбирает значение бита и направляет его доказывающему случайный запрос проверяющего. 3. Доказывающий направляет проверяющему ответ в виде числа, вычисляемого по формуле mod, и направляет его проверяющему. Проверяющий проверяет выполнимость соотношения mod . При положительной проверке делается заключение, что доказывающий знает значение . Нарушитель может дать правильный ответ с вероятностью 0,5, поэтому протокол включает в себя многократное выполнение описанного раунда, при котором достигается приемлемо малая вероятность обмана 2, где число повторенных раундов. С целью уменьшить большое число интерактивных шагов можно использовать трехшаговый протокол с нулевым разглашением, в котором ОК доказывающего является набор из значений, 0, 1, 2, 1, вычисленных по формуле Набор чисел, 0, 1, 2, 1, составляет ЛСК доказывающего. Протокол включает три следующих шага. 1. Доказывающий выбирает случайное число такое, что 1, вычисляет значение mod и посылает его проверяющему значение называется . 2. Проверяющий отправляет доказывающему запрос в виде случайной равновероятной -битовой строки, в которой каждый бит с вероятностью 0,5 равен 1. 3. Доказывающий вычисляет ответ на запрос по формуле и направляет его проверяющему. Проверяющий считает ответ положительным, если выполняется соотношение Легко показать, что вероятность обмана проверяющего в этом протоколе составляет 2 . Описанный трехпроходный протокол с нулевым разглашением может быть преобразован в схему ЭЦП, пригодную для практического использования, по аналогии с построениями, выполненными в работе 17. В таком преобразовании рассматривается следующий сценарий формирования цифровой подписи. Подписывающее лицо генерирует конкретное значение фиксатора . Затем в зависимости от фиксатора и подписываемого документа он вычисляет значение запроса, после чего формирует ответ на запрос. Пара чисел, включающая запрос и ответ, является цифровой подписью к документу. Для того чтобы подделка подписи была практически невозможной, схема ЭЦП строится таким образом, чтобы после вычисления значения запроса изменить значение фиксатора без изменения запроса было вычислительно трудно. Это требование может быть достигнуто путем задания запроса как значения стойкой хэш-функции, вычисляемой от значения фиксатора с присоединенным к нему сообщением. В этом значение запроса зависит от каждого бита фиксатора и каждого бита подписываемого документа, и без знания ЛСК формирование подписи становится вычислительно невыполнимым. Согласно описанному способу преобразования трехпроходного протокола с нулевым разглашением в протокол ЭЦП, алгоритм генерации ЭЦП включает следующие шаги. 1. Подписывающий выбирает случайное число 1, вычисляет значение фикатора mod . 2. Затем, используя специфицированную хэшфункцию, он вычисляет значение, которое может быть рассмотрено как случайный запрос со стороны документа. 3. Подписывающий вычисляет ответ на запрос по формуле который является вторым элементом цифровой подписи к документу . Проверка подлинности ЭЦП, состоит в проверке выполнимости соотношения которое является проверочным соотношением в исходном протоколе с нулевым разглашением. Процедура проверки подписи включает следующие шаги. 1. Вычисляется значение фиксатора 2. Вычисляется значение хэш-функции 3. Сравниваются значения и . Если то подпись, считается подлинной. В противном случае подпись отклоняется как ложная. Нарушитель, который пытается подделать подпись, не может вычислить правильный ответ на запрос, формируемый по значению документа, поскольку ему неизвестен ЛСК. Однако он может попытаться сгенерировать случайные значения запроса и ответа и вычислить по формуле значение фиксатора, которое вместе со значениями и будет удовлетворять проверочному соотношению. С вероятностью 2 будет выполняться соотношение, и подпись, пройдет процедуру проверки как подлинная подпись. Однако чтобы такая атака с вероятностью 50 привела к удачной подделке подписи, потребуется сформировать примерно 2 вариантов подписи, поэтому при 80 атака вычислительно невыполнима в настоящее время. Недостатком данной схемы ЭЦП является большой размер ОК, который составляет не менее 1536 122 880 бит. Сокращение размера ОК можно достигнуть приемом, который состоит в том, что генерируется ЛСК в виде случайного числа, по которому вычисляется значение mod, а значения, 1, 1, определяются формулой Тогда в описанной схеме ЭЦП 2 mod и выражение принимает вид mod, а выражение приводится к виду где битовая строка запроса рассматривается как двоичное число. Заменяя обозначение на, можно перейти к схеме ЭЦП, описываемой следующими шагами. 1. Подписывающий выбирает случайное число 1, вычисляет значение фиксатора mod . 2. Затем он, используя специфицированную хэш-функцию, вычисляет первый элемент подписи в виде значения, которое рассматривается как двоичное число 3. Подписывающий вычисляет ответ на запрос по формуле mod, который является вторым элементом цифровой подписи к документу . Процедура проверки подписи, включает следующие шаги. 1. Вычисляется значение фиксатора 2. Вычисляется значение хэш-функции 3. Сравниваются значения и . Если то подпись, считается подлинной. В противном случае подпись отклоняется как ложная. То есть получен протокол ЭЦП, описанный в первом подразделе. Его вывод из протокола с нулевым разглашением может быть использован как формальное доказательство его стойкости. Примеры такого доказательства приведены в работе 17. Во всех криптографических протоколах и алгоритмах, описанных в предыдущем разделе, составной модуль может быть сформирован доверительным центром. Для некоторых криптосхем это условие является обязательным протоколы коллективной подписи, открытого распределения ключей, коллективной слепой ЭЦП, для других альтернативным вариантом реализации протоколы обычной и слепой подписи, алгоритм открытого шифрования, протокол с нулевым разглашением. Следует отметить, что в криптосхемах последнего типа генерация трудно разложимого модуля самими пользователями является предпочтительным вариантом использования, поскольку в этом случае устраняются атаки с участием недобросовестного доверительного центра. При этом параметры и являются уникальными для каждого пользователя и должны быть включены в состав ОК, чтобы предоставить к ним доступ другим пользователям. В результате размер ОК увеличивается. При индивидуальной генерации модуля и числа значение может оставаться секретным. Для последнего случая можно использовать как простое 160-битовое значение, так и составное значение, равное произведению двух 80-битовых простых чисел и . В случае генерации модуля и числа доверительным центром последний должен также вычислить и сделать общедоступным значение порядка числа, поэтому вариант составного числа является неприемлемым. Это связано с тем, что значение выбирается сравнительно малого размера, поэтому его можно разложить на множители, использование которых дает возможность достаточно просто факторизовать модуль . В рассмотренных криптосхемах размеры их параметров выбирались с учетом обеспечения минимально приемлемой стойкости, оцениваемой как 2 модульных умножений. Для обеспечения более высокого уровня стойкости размер параметров должен быть соответствующим образом увеличен. В предложенных схемах ЭЦП обеспечивается достаточно малый размер подписи 240 бит. Производительность криптосхем примерно в 2,25 раза меньше производительности аналогичных известных криптосхем, использующих вычисления по простому 1024-битовому модулю. Однако, поскольку последние обладают высоким быстродействием, то это снижение производительности не является существенным для практического применения. В данной работе описан и обоснован подход к построению криптосхем на основе трудности ЗДЛ по трудно разложимому модулю. Показано, что в рамках предложенного подхода повышается безопасность криптосхем по сравнению со схемами, использующими ЗФ или ЗДЛ по простому модулю. Производительность разработанных схем снижается незначительно. По сравнению с ранее известными подходами к синтезу криптосхем, основанными на трудности одновременного решения ЗФ и ЗДЛ по простому модулю, предложенный подход обеспечивает существенное сокращение размера подписи в протоколах обычной, коллективной и слепой ЭЦП. Кроме того, он может быть использован для разработки других типов криптографических протоколов, взлом которых требует одновременного решения ЗФ и ЗДЛ по простому модулю. В предложенных криптосхемах применяется циклическая подгруппа мультипликативной группы кольца вычетов по составному модулю. Значительный интерес представляет синтез криптосхем, построенных на нециклических подгруппах, а именно мультипликативных подгруппах с двухмерной цикличностью, т. е. подгруппах, базис которых содержит два элемента и, имеющих один и тот же простой порядок . В последнем случае элемент ОК вычисляется по формуле mod, где значения и являются элементами ЛСК. Применение нециклических подгрупп такого типа описано в работах 1820 для построения протокола слепой ЭЦП со сравнительно малым размером подписи, основанной на трудности задачи факторизации. Однако использование таких подгрупп для построения алгоритмов и протоколов, основанных на сложности одновременного решения ЗФ и ЗДЛ, не рассматривалось и представляет собой предмет отдельного обсуждения. Работа выполняется при финансовой поддержке РФФИ проект 12-07-31164 мола. 