СТРУКТУРА ЦИФРОВОГО ОРГАНИЗМА В САМООРГАНИЗУЮЩИХСЯ ПРОГРАММНЫХ СИСТЕМАХ 

Введено понятие самоорганизующейся программной системы. Предложено описание структуры цифрового организма в терминах теории нумераций.

 Самоорганизацией называется способность систем к самоупорядочению в ответ на неспецифические внешние воздействия благодаря внутрисистемным взаимодействиям. Выраженным проявлением самоорганизации может служить образование функционально упорядоченных пространственно-временных структур. Применительно к программным системам способность к самоорганизации может означать способность к самовосстановлению после сбоев и повреждений способность к самообучению и адаптации саморазвитие и самоконструирование программных систем вплоть до появления программ с совершенно новыми, ранее не ожидавшимися проектировщиком, но полезными свойствами. Полностью самоорганизующаяся программная система это система, которая образуется в результате процессов самоорганизации, проходящих в специальным образом устроенной среде. В такой системе процессы самоорганизации присутствуют на всех последующих этапах жизненного цикла, так как система не изымается из породившей ее среды. Программная система, полученная путем самоорганизации, отличается от полностью самоорганизующейся системы тем, что по достижении ею какого-либо состояния, удовлетворительного с точки зрения проектировщиков или конечных пользователей, она извлекается из среды, в которой была получена, и в дальнейшем процессы самоорганизации в ней не происходят, система фиксируется в состоянии как она есть. Главными вопросами создания самоорганизующихся программных систем являются определение принципов построения сред, в которых могут происходить процессы самоорганизации определение правил, регулирующих процессы самоорганизации и задающих критерии оптимальности решения. Самоорганизация и модели искусственной химии В 1 выделены два вида самоорганизации когерентная и континуальная . Первый вид самоорганизации связан с упорядочением на уровне макросистем путем согласования параметров микросистем. Примерами такой самоорганизации служат когерентность излучения в лазере, образование ячеек Бенара, коллективное поведение живых организмов и программных агентов. Второй вид самоорганизации связан с упорядочением на уровне микросистем, когда благодаря взаимодействию разнородных компонентов образуются целостные системные объекты. Средой для такого вида самоорганизации служат кинетические континуумы веществ и процессов, то есть множества химических реакций. Именно этот вид самоорганизации привел к появлению сначала биомолекул, а затем и живых организмов. Самоорганизация синкретического типа является более сильным видом самоорганизации, так как приводит к появлению принципиально новых структур. Для исследования процессов такой самоорганизации можно использовать модели искусственной химии подраздела теории искусственной жизни. Целью разработки модели алгоритмической химии AlChemy У. Фонтана 2 было исследование возникновения новшеств, в первую очередь, появление в модели новых структур и правил. Правила преобразования структур соответствовали реакциям, а сами структуры молекулам. Фонтана обратил внимание на взаимную двойственность как молекул и реакций, так и данных и программного кода. Молекулы это пространственные структуры, которые определяют функциональность как множество возможных реакций. Аналогично программы задают последовательности действий по обработке данных, но символьная запись программы может рассматриваться как данные. Данные и программы можно обобщенно рассматривать как функции от нуля и большего числа аргументов. Функции в модели AlChemy рассматриваются как молекулы. Реакция в AlChemy представляет собой композицию функций, записанных наязыке. Двойственность данных и программ была использована в моделях искусственной химии Tierra и Avida 3. В этих моделях вводится понятие цифрового организма как строки псевдоассемблерных команд, которая может рассматриваться либо как данные и переписываться другими организмами, либо как набор инструкций процессора виртуальной ЭВМ. Структурная модель цифрового организма Для белковой жизни важное значение имеют молекулы нуклеиновых кислот ДНК и РНК, участвующие в матричных процессах и являющиеся носителями наследуемой информации. Эти молекулы представляют собой цепочки оснований, группы которых кодируют аминокислоты, входящие в состав синтезируемых белков, определяющих как структурные, так и функциональные свойства организма, или его фенотип. При этом синтезируемые белки могут инициировать или, напротив, запрещать синтез других белков, то есть управлять реакциями. По аналогии для задания свойств цифрового организма, входящего в состав сообщества самоорганизующихся программных агентов, автором в 4 было предложно использовать кодовую числовую последовательность. При этом номер позиции в кодовой последовательности определяет кодируемое свойство, поведенческое или структурное, а код, содержащийся в позиции, определяет значение переменной состояния или программную реализацию некоторой полиморфной макрооперации или поведенческого блока. Таким образом, цифровой организм в модели 4 обладает генотипом и фенотипом. Кодовая последовательность, определяющая генотип организма и задающая первичную структуру цифровой ДНК, получила в модели 4 название суперхромосомы. Коды значений переменных и программных реализаций поведенческих блоков можно рассматривать как номерные множества нумераций 5. Если для представления нумераций использовать БД, то номерные множества будут соответствовать ключам, на основе которых можно получить программные реализации поведенческих блоков и значения переменных состояния, то есть синтезировать фенотип цифрового организма. Нумерацией здесь и далее будем называть взаимнооднозначное отображение множества номеров на множество нумеруемых объектов v N Obj, N N. Рассматривая структуру суперхромосомы, будем различать локусы, или элементарные участки суперхромосомы номера, или индексы локусов значения, находящиеся в локусах суперхромосомы. Структура суперхромосомы может быть определена как множество локусов, упорядоченных по индексу 4 Здесь Loc не более чем счетное множество всех локусов, которые могут входить в состав структуры суперхромосомы. Индексы локусов будем определять с помощью функции Ind LocN, N N. Элементы множества Items можно обобщенно рассматривать как функции или аналоги молекул в модели AlChemy, а сам цифровой организм как совокупность молекул и реакций 6. Можно построить функцию, ставящую в соответствие каждому элементу программы индекс локуса в структуре суперхромосомы и являющуюся композицией функций и ind На рисунке 1 приведена коммутативная диаграмма для функций Pos, Locus, ind. Каждому параметру состояния можно поставить в соответствие множество всех его возможных значений, а каждому блоку поведения множество всех его возможных программных реализаций. Каждое множество Y является элементом одного из булеанов, то есть подмножеством либо Val, либо Code. Используя отображение Pos и функции ind, заданные на всех множествах Y, свяжем индекс локуса с множеством индексов возможных значений или программных реализаций соответствующего элемента программы . Каждое множество значений функции индексирования дополняется особым элементом Null, означающим, что для элемента программы не определены значение или реализация. Отображение Dom позволяет определять множество значений для каждого локуса суперхромосомы по индексу локуса. Структура суперхромосомы описывает общий принцип организации цифровой ДНК для всех программных агентов данной модели, то есть задает шаблон. Конкретный экземпляр цифровой ДНК, то есть сама суперхромосома, отражает состояние генома конкретного агента в определенный момент времени. В общем случае, а ситуации, когда это неверно, являются аномальными. Но основной операцией следует считать сборку цифрового организма на основе кодовой последовательности и БД. Для реализации операции сборки необходим отдельный системный процесс, который будет одновременно контролировать отсутствие аномалий и проверять на основе заданной системы правил допустимость присутствия в вычислительной среде цифрового организма с закодированными в цифровой ДНК свойствами. Реализация предложенной модели цифрового организма может быть выполнена с использованием различных средств языков скриптового типа, XML или языков типа СС. В заключение можно сделать следующие выводы. Совместное применение результатов теории искусственной жизни и теории нумераций позволяет создать модель программной системы, в которой возможны процессы самоорганизации когерентного и континуального типов, что свидетельствует о прогрессивной эволюции и появлении программных агентов с совершенно новыми свойствами. Необходимо подчеркнуть, что процессы самоорганизации должны происходить только в среде виртуальной ЭВМ, множество команд которой полностью отличается от множества команд реально используемого физического процессора. Только такой подход гарантирует управляемость процессов самоорганизации и их безопасность, так как имеется возможность непосредственного анализа генотипа цифровых организмов и исключения выполнения программных агентов с нежелательными свойствами. 