ИССЛЕДОВАНИЕ ВЕРОЯТНОСТНО-ВРЕМЕННЫХ  ХАРАКТЕРИСТИК ПРОТОКОЛА РАСПРЕДЕЛЕНИЯ  КЛЮЧЕЙ ЗАЩИЩЕННОЙ IP-ТЕЛЕФОНИИ 

Разработана математическая модель криптографического протокола распределения ключей IP-телефонии  Zimmermann Real-time Transport Protocol в виде вероятностного графа. Представлены теоретические зависимости вероятностно-временных характеристик данного протокола от параметров канала связи: задержки пакетов  и вероятности битовых ошибок. Выполнено сравнение полученных теоретических оценок с результатами экспериментального моделирования. Ключевые слова  — ключ, криптографический протокол, канал с ошибками, среднее время выполнения, вероятность успешного завершения, ZRTP, IP-телефония. 

В отличие от традиционной телефонии, использующей коммутацию каналов аналоговых или цифровых, IP-телефония это технология, обеспечивающая передачу речевого сигнала с применением коммутации пакетов в IP-сетях. В IPтелефонии, как правило, применяются протокол Real-time Transport Protocol RTPReal-time Transport Control Protocol RTCP 1 для передачи голоса и один из протоколов сигнализации Session Initiation Protocol SIP 2, H.323, Media Gateway Control Protocol MGCP или H.248 для установления и поддержания соединения. Наибольшее распространение в настоящий момент получил протокол SIP, отличающийся простотой реализации, гибкостью и расширяемостью. При вызове вначале отрабатывает протокол SIP, позволяющий установить соединение между корреспондентами. Как только корреспондент снимает трубку, начинает работу протокол RTP RTCP. Сценарии установления соединений представлены на рис. 1, а схема обмена сообщениями на рис. 2, . В силу общедоступности используемых каналов передачи голосовой информации особую актуальность приобретает обеспечение конфиденциальности VoIP. Для этих целей разработаны протоколы обеспечения безопасности IP-телефонии, которые можно разделить на 3 категории протоколы защиты сигнализации Secured SIP протоколы защиты медиаинформации SRTP протоколы генерациираспределения ключей для протоколов защиты медиаинформации Multimedia Internet KEYing MIKEY, Session Description Protocol Security SDES, ZRTP, Datagram Transport Layer Security DTLS . Протокол Secured SIP работает по аналогии с протоколом HyperText Transfer Protocol Secure HTTPS, когда между корреспондентом и сервером организовывается туннель с использованием сертификатов и открытого ключа Secure Sockets Layer SSL. Все SIP-сообщения сигнализация передаются по этому туннелю. Для обеспечения безопасности передачи речи широко используется защищенный протокол реального времени SRTP 3, который выполняет функции криптографической защиты шифрование и аутентификацию сообщений совместно с одним из протоколов, реализующих генерацию и распределение ключей. Проблемы безопасности протокола ZRTP и его прототипа алгоритма Диффи Хелмана DiffieHellman, DH исследованы в работах 4, 5. Однако влияние его на характеристики своевременности предоставления связи не изучалось. Данная работа содержит результаты исследования вероятностно-временных характеристик одного из наиболее перспективных протоколов генерации ключей протокола ZRTP 6, 7. Поскольку протокол ZRTP работает сразу после завершения работы протокола сигнализации, время установления защищенного соединения увеличивается на величину времени выполнения протокола ZRTP. Пример установления соединения в защищенном режиме представлен на рис. 2, . При работе по идеальному каналу связи протоколы SIPZRTP будут иметь фиксированное время выполнения, равное сумме времен, необходимых для каждой итерации протокола, но при наличии задержек и ошибок в канале связи время выполнения будет случайной величиной. Поскольку время установления соединения в телефонной связи является нормированной величиной, задача оценки вероятностно-временных характеристик протокола ZRTP по каналам с задержками и ошибками является актуальной задачей, которая решается в данной статье. Протокол ZRTP реализует функции генерации ключевых параметров SRTP сессии, аутентификации корреспондентов, обеспечения конфиденциальности обмена сообщениями протокола, защиты от атаки вторжения посередине Man In The Middle MITM. Эти задачи решаются последовательно рис. 3. Особенностью протокола является передача сообщений протокола внутри RTP-пакетов при сохранении их совместимости с RTPAVP Audio and Video Payload профилем. В этом случае ZRTPнесовместимым устройством ZRTP-пакеты просто отклоняются и не влияют на установленное соединение, которое будет продолжено в незащищенном режиме. Параметры сообщений представлены в табл. 1 7. Протокол требует операции определения сторон инициатора и отвечающего респондента, поэтому она выполняется на первой фазе протокола, когда корреспонденты обмениваются сообщениями Hello. Эти сообщения содержат информацию о поддерживаемых партнерами протоколах для определения возможности использовать SRTP поддерживаемых алгоритмах хеширования, алгоритмах шифрования, типах аутентификационных тегов, протоколах согласования ключей и др. Предусмотрена повторная передача сообщения Hello до 20 раз, после чего принимается решение о невозможности продолжать выполнение протокола ZRTP и устанавливать сессию в защищенном режиме. Повторная передача данного сообщения производится с задержкой переменной величины 50, 100, 200 мс, причем, начиная с четвертой передачи, задержка имеет постоянную величину 200 мс. Каждое принятое сообщение Hello подтверждается ответным сообщением HelloACK. Для перехода протокола в следующую фазу оба корреспондента должны получить сообщение Hello и хотя бы один из корреспондентов должен получить сообщение HelloACK. Корреспондент, получивший сообщение HelloACK, принимает на себя роль инициатора сессии. Перед началом второй фазы каждый из корреспондентов генерирует свое случайное число и производит вычисление DH первый корреспондент mod второй корреспондент mod, где и случайные числа, закрытые ключи инициатора и респондента для алгоритма Диффи Хелмана. После этого корреспонденты подготавливают сообщение DHPart1DHPart2 и формируют параметр как укороченную до 256 бит хешфункцию от конкатенации DHPart1DHPart2 и сообщения Hello корреспондента DHPart1 or DHPart2 Hello Параметр предназначен для проверки правильности аутентификации и подтверждения выбора инициатора. Он передается в составе сообщения Commit Инициатор первым посылает сообщение Commit В том случае если оба устройства выбирают роль инициатора и одновременно посылают сообщение Commit, сравнивается значение хеша . Тот, у кого значение будет больше, принимает роль инициатора. Протоколом предусмотрена повторная передача данного сообщения до 10 раз, после чего также принимается решение о невозможности продолжать выполнение протокола ZRTP и устанавливать сессию в защищенном режиме. Повторная передача сообщения Commit производится с задержкой, величина которой имеет переменное значение 150, 300, 600, 1200 мс, причем, начиная с четвертой передачи, задержка имеет постоянную величину 1200 мс. Каждое принятое сообщение Commit подтверждается сообщением DHPart1, после приема которого передача Commit прекращается. В результате обмена открытыми сообщениями DHPart1 и DHPart2 формируются секретные ключи для SRTP-сессии. При этом для защиты от атаки MITM-протокол позволяет использовать данные предыдущих соединений. Для этого используется специальная таблица в памяти устройств, поддерживающих ZRTP-протокол, индексированная по ZID респондента. Оба корреспондента используют полученные открытые ключи и для расчета результирующего ключа обмена Диффи Хелмана. При обмене в сообщениях передаются рассчитанный ранее и хеш-функции значений регистров данных, распределенных в предыдущей сессии. Корреспонденты сверяют полученные в сообщениях значения регистров данных, распределенных в предыдущей сессии, со значениями, рассчитанными локально. Протоколом предусмотрена повторная передача сообщения DHPart2 до 10 раз, после чего также принимается решение о невозможности продолжать выполнение протокола ZRTP и устанавливать сессию в защищенном режиме. Повторная передача сообщения DHPart2 производится с задержкой, величина которой имеет переменное значение 150, 300, 600, 1200 мс, причем, начиная с четвертой передачи, задержка имеет постоянную величину 1200 мс. Каждое принятое сообщение DHPart2 подтверждается сообщением Confirm, после приема которого передача DHPart2 прекращается. Для подтверждения успешного формирования секретных ключей происходит обмен сообщениями Confirm1 и Confirm2, которые содержат зашифрованное с помощью Advanced Encryption Standard в режиме Cipher FeedBack AES CFB сообщение, передающее несколько флагов и параметров, включая время действия нового сгенерированного ключа, а также некоторые служебные флаги и опциональные цифровые подписи. Для шифрования используются ключи, рассчитанные на предыдущей фазе протокола. Протокол считается завершенным, когда респондент отправляет сообщение Conf2ACT или первый SRTP-пакет с верным тегом аутентификации. Исследуя работу протокола ZRTP в канале связи с ошибками, имеет смысл оценивать такие характеристики протокола, как зависимость среднего времени выполнения от вероятности ошибки в канале связи и вероятность успешного завершения протокола. Анализ проводится для дискретного канала без памяти, параметром которого является вероятность ошибки . Для анализа вероятностно-временных характеристик ВВХ протокола целесообразно использовать апробированный метод вероятностных графов 8. Граф, описывающий переход из начального состояния протокола ZRTP в состояние завершения первого этапа первой фазы при неограниченном числе передач одного сообщения Hello, имеет вид, представленный на рис. 4, . Производящая функция такого вероятностного графа где вероятность перехода из первого состояния во второе время, необходимое для перехода. При расчете времени перехода от одной вершины графа к другой необходимо учитывать как время передачи сообщения протокола передачи, так и задержки, вызванные ожиданием перед передачей сообщения, которые также зависят от номера итерации, при этом производящие функции переходов имеют вид, где вероятность успешного приема сообщения респондентом время передачи сообщения, которое определяется длиной передаваемого сообщения и скоростью передачи, где вероятность неуспешного приема сообщения респондентом время ожидания перед повторной передачей сообщения. Тогда производящая функция графа Однако в протоколе с конечным числом передач в графе см. рис. 4, добавляется третье состояние неуспешного завершения рис. 4, . Определим производящую функцию, учитывающую конечное число повторов, равное . Поскольку общая производящая функция имеет вид то производящая функция перехода из точки в точку записывается как В случае с одинаковым временем задержки повтора сумма 1 первых членов может быть также определена как 1 Тогда производящая функция перехода из точки в точку Среднее время перехода из точки в точку определяется соотношением 2 Рассмотрим случай, когда времена ожидания при повторе сообщения будут разными. Производящая функция при этом будет иметь вид Поскольку при переменном времени эта производящая функция не является геометрическим рядом, к ней не применимо соотношение 1. Пусть времена выполнения повторов 1 1 разные, одинаковые. Тогда производящая функция перехода из точки в точку определяется выражением 3 Составим полный вероятностный граф для первой фазы протокола ZRTP с переменным временем ожидания рис. 5 и определим следующие параметры время формирования и передачи сообщения Hello корреспондентом А время ожидания при передаче сообщения Hello, которое выжидает корреспондент между повторными передачами сообщения размер пакета, передаваемого по каналу связи вероятность битовой ошибки в канале связи. При определении производящей функции передачи одного сообщения Hello первой фазы протокола учтем следующие особенности повтор сообщения Hello производится только 20 раз, причем будет изменяться по закону Также введем допущение, что доставка сообщения Hello не подтверждается сообщением HelloACK. При таких условиях производящая функция первой фазы протокола передачи одного сообщения Hello будет иметь вид 4 где производящая функция ветви безошибочной передачи сообщения Hello при первой передаче сообщения скорость канала связи производящая функция, определяющая ветвь безошибочной передачи сообщения Hello при первой повторной передаче производящая функция, определяющая ветвь безошибочной передачи сообщения Hello при -й повторной передаче сообщения производящая функция, определяющая ветвь безуспешной передачи сообщения после 20 повторных передач сообщения, где отражает вероятность, что сообщение Hello не было передано за 20 попыток. Для составления полного вероятностного графа работы протокола ZRTP рис. 6 воспользуемся диаграммой взаимодействия см. рис. 3. Для получения необходимых оценок в соответствии со статьей 8 граф разбивается на ветви, характеризующие успешное и неуспешное выполнение протокола в каждой фазе и затем упрощается для определения полной производящей функции протокола. Производящая функция упрощенного графа рис. 7 используется для оценки среднего времени успешного завершения протокола. Производящая функция всего графа имеет вид Производящая функция ветви успешного завершения протокола имеет вид 5 Производящая функция ветви неуспешного завершения протокола имеет вид На первом и втором этапе первой фазы протокола ZRTP, при передаче Hello от корреспондента А к корреспонденту Б и при передаче Hello от Б к А, сообщения имеют одинаковые параметры, поэтому передача сообщений для обоих этапов может быть представлена в виде одинаковых функций где производящая функция передачи сообщения с номером По аналогии определяются производящие функции для следующих фаз протокола и описывают передачу сообщений второй и третьей фазы протокола, а именно передачу CommitDH1 и DH2Confirm1 сообщений. Общая максимальная длина сообщений CommitDH1 и DH2Confirm1 составляет соответственно 5600 и 5280 бит. В связи с тем, что в фазах 2 4 определены иные времена ожидания, используется производящая функция ветви ожидания перед повторной передачей сообщения в случае недоставки на предыдущей попытке Аналогично определяется производящая функция для четвертой фазы протокола, когда передаются сообщения Confirm2 Confirm2ACK общим размером 1632 бит. Для расчета среднего времени успешного завершения протокола в соответствии с 2 необходимо вычислить первую производную производящей функции ветви успешного выполнения протокола 5 в точке 1 Для вышеописанной модели был произведен расчет для работы протокола в каналах связи с разным значением вероятности ошибок и при различных величинах задержки пакетов. График зависимости среднего успешного времени выполнения протокола ZRTP представлен на рис. 8, а в канале с малой вероятностью ошибки на рис. 8, . Вероятность успешного завершения определяется соотношением График зависимости вероятности успешного завершения протокола от вероятности ошибок в канале представлен на рис. 9. Целью эксперимента является оценка влияния потери пакетов в канале передачи данных и задержки данных при передаче на качество речи, а также оценка среднего времени работы и вероятности успешного завершения протокола ZRTP. Экспериментальная установка рис. 10 состоит из трех компьютеров, управляемого коммутатора, маршрутизатора на базе ОС FreeBSD. Маршрутизатор выполняет роль имитатора канала передачи данных, воспроизводя различные состояния канала связи, и позволяет задавать величины двух параметров канала связи процента потерянных пакетов, передаваемых через порт маршрутизатора, а также задержки для передаваемых пакетов. Для тестирования использовались персональные компьютеры. На компьютере ПК1 установлено ПО Wireshark, позволяющее перехватывать и анализировать пакеты, передаваемые между ПК2 и ПК3. Для реализации этой цели на управляемом коммутаторе включается функция зеркалирования портов. На ПК2 и ПК3 устанавливаются программы VoIP-клиент Phoner и VoIP-шлюз Zfone. Программа Phoner была выбрана в качестве VoIP-клиента, так как она имеет встроенную, настраиваемую поддержку ZRTP-протокола. Эта опция позволяет включатьвыключать встроенный модуль ZRTP при проведении тестов. Zfone программа, созданная Филипом Циммерманом, разработчиком протокола ZRTP. Фактически данная программа играет роль шлюза для RTP-пакетов, преобразуя их в SRTP, а также позволяет выполнять ZRTP-протокол между корреспондентами для генерации ключей. В случае выключения опции поддержки ZRTP на Phoner и запуска программы Zfone ZRTP-протокол будет выполняться средствами программы Zfone, что позволит сравнить поведение протокола ZRTP в реализациях двух разных разработчиков. Перед измерением на интерфейсе маршрутизатора устанавливались настройки процент потерянных пакетов, задержка для передаваемых пакетов. На ПК3 в программе Phoner был включен режим автоподнятия трубки с воспроизведением тестовой записи. При звонке с ПК2 на ПК3 на ПК2 автоматически включалась запись разговора и сохранялась тестовая запись в том виде и с тем качеством, с которым она была доступна пользователю. Измерение проводилось в следующей последовательности 1 устанавливались требуемые величины потери пакетов и задержки канала передачи данных на маршрутизаторе 2 выполнялась проверка точности установки задержки и потери пакетов утилитой ping 3 включался сетевой снифер на ПК1, совершался звонок ПК2ПК3, сохранялся дамп и запись звонка 4 по дампу определялось время работы ZRTP. Как отмечалось ранее, работа протокола ZRTP может быть организована одним из двух способов 1 параллельно с RTP, т. е. до окончания работы ZRTP RTP-трафик передается в открытом виде. По окончании работы ZRTP голосовой трафик передается зашифрованным в SRTP 2 до RTP как только между абонентами включается голосовой канал, ZRTP начинает работать, при этом блокируется передача RTP. Разговор между абонентами начинается по окончании ZRTP с использованием SRTP. Программа Zfone реализует второй способ, поэтому работу ZRTP можно оценить также по голосовым диаграммам. В качестве источника эталонного речевого сигнала рис. 11 на одном из компьютеров был включен автоответчик, который диктует фразу . На втором компьютере производилась запись принятого речевого сигнала. Голосовые дорожки при передаче тестового звука по схеме компьютер-компьютер с учетом работы протокола ZRTP показаны на рис. 12, . Результаты измерений для различных задержек и потери пакетов в канале связи приведены в табл. 2. Для устранения случайных погрешностей в таблицу вносились средние значения измеряемого времени по результатам 20 измерений. Очевидно, что в каналах связи с задержками время выполнения протокола может возрастать до нескольких секунд. Например, для канала связи с задержкой 300 мс время выполнения протокола составляет около 3 с. При этом время начала защищенной передачи голоса между абонентами сдвигается на величину, равную времени работы протокола. На рис. 13 представлены результаты сравнения времени выполнения протокола, полученные на основании теоретического анализа и экспериментальной оценки. Исследование показывает, что среднее время работы протокола ZRTP определяется в основном величиной задержки сообщений в канале связи. Зависимость среднего времени работы протокола ZRTP от вероятности битовых ошибок в каналах хорошего и удовлетворительного качества слабо выражена, но существенно возрастает при увеличении вероятности ошибок свыше 1 10 . Результаты экспериментальной оценки среднего времени работы протокола ZRTP подтверждают теоретические расчеты. Вместе с тем они несколько превышают расчетные величины, что обусловлено упрощениями, введенными при построении математической модели. Среднее время работы протокола ZRTP в каналах с задержкой более 200 мс превышает 1,5 с и в зависимости от используемого режима защищенной IP-телефонии приводит либо к потере соответствующего фрагмента речевого сообщения, либо к передаче этого фрагмента речи в незащищенном режиме. Таким образом, имеются существенные предпосылки для совершенствования протокола ZRTP с целью снизить зависимости времени работы протокола от задержки в канале. 