ВАРИАНТ АЛГОРИТМА НАХОЖДЕНИЯ ОШИБОК ДЛЯ БЧХ-КОДОВ 

Описывается вариант алгоритма нахождения позиций ошибок при декодировании двоичных кодов БЧХ. Предлагается процедура, основанная на операциях над полиномами, являющаяся альтернативой процедуре Ченя и последующему инвертированию ошибочных битов. 

 Одним из эффективных способов помехоустойчивого кодирования данных является использование линейных циклических кодов, в частности, кодов БЧХ 13. Порождающий полином этого кода, имеющий степень r, обозначается через g. Его коэффициенты лежат в конечном поле GF. Предположим, что они являются корнями полинома g 3. Пусть требуется передать сообщение m . Поставим ему в соответствие полином. Рассмотрим процесс кодирования данных на передающей стороне. В случае возникновения ошибок в канале связи принятый вектор можно записать как, где через обозначен вектор ошибок длины n. Пусть количество ненулевых компонентов вектора ошибок равно v t. Перепишем многочлен ошибок следующим образом. Под локатором ошибки будем понимать примитивный элемент поля GF в степени, равной номеру позиции ошибки. Тогда множество локаторов ошибок можно записать как. На приемной стороне необходимо выполнить декодирование вектора с целью устранения произошедших ошибок. Рассмотрим процедуру декодирования. Ключевым уравнением декодирования называется уравнение вида S S x mod x, где многочлен значений ошибок 3. В данной статье предлагается процедура, альтернативная методу Ченя 1, 3 и последующему исправлению ошибочных битов. Рассмотрим ее более подробно. Очевидно, что корнями полученного полинома являются корни и локаторного полинома, и полинома локаторов ошибок. В общем случае возможно частичное или полное пересечение множеств их корней. Очевидно, что каждый из полиномов не может иметь два и более одинаковых корней. Из этого следует, что максимальная кратность корней полинома L равна двум. Рассмотрим возможные варианты. Другими словами, в разложении L на множители присутствует . Исходя из, следует, что символ на позиции i восстановленного кодового слова. Это означает, что множитель встречается один раз при факторизации L. Решение о передаваемом символе в любом из этих случаев принимается следующим образом. Это означает, что не делит L. Очевидно, что при таком условии передавался нулевой бит, так как. Описанное свойство полинома L удобно использовать в процессе декодирования. Далее приведен один из возможных алгоритмов, обладающий наименьшей сложностью. Рассмотрим предлагаемый алгоритм. Шаг 1. Если он равен нулю для некоторого i, то корень кратности два. В этом случае, как было отмечено ранее,. Шаг 2. Выявим корни кратности один. Для всех i, для которых был получен ненулевой остаток на предыдущем шаге, необходимо выполнить его деление на . Деление нацело в этом случае является признаком корня кратности один. Следовательно, для таких i. Все остальные символы кодового слова равны нулю, так как для оставшихся i элемент не является корнем полинома L. Рассмотрим пример работы алгоритма. Пусть используется БЧХ-код над полем GF. Выполняем шаг 1 предлагаемого алгоритма. Таким образом, d 0. Выполняем шаг 2. Следовательно, для перечисленных i являются корнями кратности один. Для всех остальных i символы. Легко заметить, что данный алгоритм основан исключительно на операции деления полиномов над конечным полем и операции сравнения. Таким образом, при программной реализации алгоритма достаточно иметь библиотеку для работы с полиномами. При аппаратной реализации деление полиномов может осуществляться с помощью линейных регистров с обратной связью, что обеспечивает невысокие аппаратные затраты. 