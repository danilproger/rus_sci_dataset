НЕСТАЦИОНАРНЫЕ МОДЕЛИ СТРАТЕГИЙ ИСПЫТАНИЙ  ПРОГРАММНЫХ СРЕДСТВ ПРИ ВЕРОЯТНОСТНЫХ  ПАРАМЕТРАХ ОБНАРУЖЕНИЯ ОШИБОК 

Постановка проблемы:  современные стандарты разработки программных средств требуют планировать сроки и  ресурсы, необходимые для успешной реализации проектов. Важным аспектом проектов являются работы по обеспечению заданных показателей качества разрабатываемых программных средств. Моделирование процессов испытаний  программных средств позволяет планировать ресурсы и финальное качество на  ранних этапах реализации проектов.  Известные модели испытаний программных средств не учитывают вероятностный характер нахождения и исправления ошибок. Модели строятся на результате двоичной классификации модулей программных средств на потенциально  приводящие к отказу с вероятностью, равной единице, и надежные.  Цель исследования:  усовершенствование существующих моделей испытаний программных средств с учетом вероятностного характера процессов поиска и устранения ошибок.  Результаты:  разработаны три динамические модели процессов (стратегий) испытаний  программных  средств, в которых предусматривается возможность использования вероятностей обнаружения ошибок для каждого  программного модуля. Для всех стратегий испытаний построены модифицированные размеченные графы и системы  дифференциальных уравнений. Найдены численные решения систем дифференциальных уравнений, вероятностные  показатели процессов испытаний: вероятности пребывания системы во всех состояниях, функции распределения времени обнаружения и устранения ошибок, математические ожидания случайных величин, количество обнаруженных  и устраненных ошибок. Проведено сравнение стратегий по показателям качества. Разработаные модели позволяют  использовать оценки надежности для каждого модуля в отдельности. Это повышает точность моделирования процессов  отладки программ и позволяет учитывать состоятельность (мощность) тестов, искать пути повышения характеристик  надежности программных средств путем формирования тестов, обнаруживающих ошибки с высокой вероятностью. Ключевые слова  — модель, программные средства, ошибка, вероятность, стратегия испытаний, граф. 

Сокращение сроков и затрат на разработку программных средств ПС и обеспечение их качества надежности могут быть достигнуты не только за счет применения более совершенных технологий, сред разработки и средств автоматизации тестирования отладки, но и путем грамотного и эффективного планирования проведения работ и разделения ресурсов при разработке испытании ПС. Для решения поставленных задач могут быть использованы средства математического моделирования надежности ПС и процессов их разработки испытаний. К настоящему времени создано большое количество различных моделей для оценивания и предсказания надежности ПС на различных этапах их жизненного цикла. Подробный обзор и описание таких моделей приведены в работах 14. С методической точки зрения эти модели надежности подразделяют на три класса эмпирические, статистические и вероятностные. В рамках каждого класса модели надежности могут отличаться применимостью на различных фазах и стадиях жизненного цикла ПС и определяемыми показателями надежности. Эмпирические модели являются наиболее простыми. Они основаны на анализе накопленной информации о функционировании разработанных ПС модель М. Холстеда, модель фирмы IBM. В то же время эмпирические модели достаточно грубы. Часто ошибки в расчетах различаются примерно на порядок с фактическими результатами. Кроме того, эти модели оперируют только с понятием корректности ПС, определяемой числом программных ошибок, но не отражают динамики вычислительного процесса при эксплуатации средств вычислительной техники. В статистических моделях оценка числа ошибок в ПС связывается с числом ошибок в ней пропорциональными соотношениями, определяемыми простыми статистическими методами на основе интуитивных допущений. При этом не формулируется никаких предположений о законах распределения случайных величин, а источником информации является только исследуемое ПС модели Миллса, Коркорэна, Бейзина, Б. Руднера и др.. Основная область их использования завершающие стадии фазы разработки ПС. Наиболее представительная группа моделей вероятностные. В нее включены наиболее сложные модели, описывающие случайные процессы обнаружения и проявления программных дефектов или ошибок. Они основаны на описании случайных процессов появления ошибок и характеризуют процесс отладки. В состав параметров моделей входит исходное спрогнозированное число ошибок, и поэтому модели описывают только свойство корректности. Обобщенная вероятностная модель основана на том, что в зависимости от времени отладки или испытаний скорость выявления ошибок уменьшается модели Дж. Муса, Л. И. Волкова, Э. Нельсона, Джелинского Моранды, Ямады Охбы Осаки, -образные модели роста надежности и др.. Следовательно, все эти модели в совокупности обладают рядом недостатков, ограничивающих их использование модели не обладают достаточной общностью описывают процессы обнаружения, но не устранения ошибок, что делает невозможным их применение собственно для планирования испытаний модели, представленные в работах 2, 3, не учитывают вероятностный характер обнаружения ошибок и состоятельность мощность используемых тестов. Целью настоящей работы является разработка динамических моделей процессов стратегий испытаний тестирования и исправления ошибок ПС, в которых предусматривается возможность учитывать вероятностные параметры обнаружения ошибок при тестировании программ или состоятельность используемых тестов. Названные параметры обнаружения ошибок и состоятельность используемых тестов могут быть определены, к примеру, с помощью подходов, рассмотренных в работе 5. При задании исходных данных для динамических моделей процессов испытаний ПС распространенным подходом является использование собранной статистики уже завершенных проектов. Для учета особенностей конкретного проекта широко применяются различные программные метрики, характеризующие программный продукт его структуру, сложность, интерфейсы, факторы разработки и др.. Так, с точки зрения современного объектно-ориентированного программирования целесообразно использовать наборы метрик Чайдамбера Кемерера и Бансия Дэвиса 68 длина наибольшего пути иерархии наследования, взвешенное количество методов класса, количество классов-наследников и др.. Значения метрик собираются из документов проектирования диаграмм универсального языка моделирования UML. На основе полученных метрик решается задача классификации модулей. Так, вероятность наличия ошибки в модуле можно оценить с помощью логистической регрессии и выразить формулой 6, 7 1 где значение метрики сложности коэффициент, который находится методом максимального правдоподобия. По принятому в работах 2, 3 подходу модели строятся на результате двоичной классификации модулей ПС на классы потенциально приводящих к отказу 1 и надежных 0. Новизна предлагаемых моделей заключается в отказе от двоичной классификации модулей и использовании в них оценки надежности для каждого модуля. В работе 9 рассмотрена нестационарная модель операции по испытанию отдельного программного модуля, содержащего единственную ошибку, которую с определенными вероятностями можно найти и исправить или отсутствие которой можно подтвердить. На базе этой модели предложены четыре обобщенные модели процессов стратегий испытаний ПС, детальное описание и экспериментальное исследование из которых получила только одна базовая модель с одновременным поиском и исправлением ошибок тестирование во время исправления ошибок не приостанавливается. Рассмотрим три стратегии распределения времени и ресурсов между этапами тестирования и исправления найденных ошибок. Распределения временных интервалов между моментами обнаружения ошибок во время тестирования описываются экспоненциальными законами. Предполагается, что ПС могут содержать не более ошибок, которые обнаруживаются с интенсивностями, зависящими от номера ошибки и значений соответствующих вероятностей их обнаружения. В случае подтверждения отсутствия ошибки осуществляется переход по соответствующим дугам с интенсивностями 1, 1, 1 . На рис. 13 используются обозначения Время устранения всех обнаруженных ошибок распределено по экспоненциальному закону с интенсивностью . . Этап тестирования продолжается, пока не будут определены все отсутствующие и обнаружены имеющиеся ошибки. Затем выявленные ошибки исправляются. Представим процессы обнаружения и исправления ошибок марковским процессом с дискретным множеством состояний и непрерывным временем. Диаграмма размеченный граф состояний и переходов таких процессов представлена на рис. 1. Состояния, такой системы в каждый момент времени будем характеризовать количеством обнаруженных, но еще не исправленных ошибок и числом устраненных сумма отсутствующих и исправленных ошибок, 0, 1, . Вероятности пребывания системы в этих состояниях обозначим . Переход системы из состояния, в состояние 1, означает, что при тестировании была обнаружена 1-я ошибка. Переход из состояния, в состояние, 1 означает, что при тестировании подтверждено отсутствие ошибки. Для последних состояний в каждом столбце графа переход системы из состояния, в состояние 1, 1 означает, что была исправлена 1-я обнаруженная ошибка. В таком представлении общее число состояний системы вычисляется по формуле 1 22. 2 Процессы в рассматриваемой марковской цепи описываются системой из дифференциальных уравнений 3 где функция Хэвисайда 0, 1, 0, 1, Для каждого момента времени должно соблюдаться условие нормировки вида Задав начальные условия к системе уравнений в виде можно найти численное решение соответствующей задачи Коши для произвольного значения времени Используя решение предложенной системы 3, можно получить ряд важных вероятностных показателей процесса испытаний и состояния ПС так же, как и для базовой модели. Вероятность того, что в процессе испытаний было найдено ровно ошибок, представляет собой сумму найденных, но не исправленных и устраненных ошибок 4 Тогда математическое ожидание числа найденных ошибок вычисляется по формуле 5 Вероятность того, что в процессе испытаний было устранено исправлено или отсутствовало ровно ошибок, может быть вычислена по формуле 6 Математическое ожидание числа устраненных ошибок 7 Соответственно, среднее число ошибок, не обнаруженных к моменту времени, и среднее число ошибок, не устраненных к моменту времени, определяются по формулам 8 9 Вероятность безотказной работы в течение интервала после испытаний в течение времени 10 Функция распределения времени устранения не менее ошибок 11 Модель позволяет оценить время отладки, которое требуется, чтобы устранить ошибок с заданной вероятностью, как 12 . Этап тестирования продолжается, пока не будет обнаружена ошибка или не определено отсутствие очередной ошибки. После обнаружения ошибки тестирование приостанавливается, ошибка исправляется. После исправления ошибки или ее необнаружения вновь начинается тестирование. Диаграмма размеченный граф переходов, представляющая данную стратегию отладки, представлена на рис. 2. Количество состояний такой системы 2 1. Система дифференциальных уравнений 2 примет соответствующий вид 13 где 0, 1 0, 1, Отметим, что при этой стратегии, кроме однородного показательного распределения интервалов времени исправления найденных ошибок постоянно, допускается процесс, при котором зависит от номера обнаруженной ошибки, что и отражено на рис. 2 и в системе дифференциальных уравнений 13. Характерной особенностью процессов отладки ПС является наличие в них ошибок, исправление которых является условием для отыскания и устранения последующих ошибок. Для моделирования таких процессов испытаний необходимо рассмотреть стратегию, отличную от стратегии 1 наличием двух и более пакетов ошибок стратегия 3. Не нарушая общности рассуждений, ограничимся двумя пакетами ошибок. Обоснуем это допущение ссылками на источники. Так, в работах 1, 10 все дефекты в программах делятся на явные и неявные, а все ошибки делятся на первичные и вторичные. При отладке и тестировании программ обычно сначала обнаруживаются вторичные ошибки, т. е. последствия и результаты проявления некоторых исходных дефектов, которые следует квалифицировать как первичные ошибки по причине вложенных аномалий. Локализация и корректировка первичных ошибок приводят к устранению ошибок, первоначально обнаруживаемых в результатах функционирования программ 10. В модели Ямады Нарихиса Охтера 1 ошибки также делятся на два вида. К ошибкам первого вида относятся легко обнаруживаемые ошибки. К ошибкам второго вида относятся трудно обнаруживаемые ошибки. . Этап тестирования продолжается, пока не будет обнаружено или подтверждено отсутствие первичных ошибок вместе взятых ошибок первого, блокирующего пакета. После этого тестирование приостанавливается, обнаруженные первичные ошибки полностью исправляются с интенсивностями . Затем таким же образом отладка продолжается для вторичных ошибок второго пакета, а исправление найденных ошибок осуществляется с интенсивностями . Размеченный граф, моделирующий стратегию 3 отладки, представлен на рис. 3. Количество состояний такой системы 1 22 1 22 1. 14 Система дифференциальных уравнений, описывающих данный размеченный граф, в общем виде может быть представлена как 15 Базовую модель 9 можно рассматривать в качестве стратегии 0, так как тестирование и исправление ошибок в этом случае идет параллельно тестирование во время исправления ошибок не приостанавливается. Предложенные модели позволяют не только рассчитать показатели надежности ПС, представленные формулами 412 для каждой стратегии в отдельности, но и выработать практические рекомендации по организации испытаний программ с целью улучшить характеристики процессов поиска и устранить ошибки. Этого можно достичь сравнением и выбором лучшей для заданного показателя качества стратегии испытаний. Для иллюстрации таких возможностей моделей приведем результаты расчета некоторых показателей процесса испытаний и состояния ПС. Для всех моделей стратегий расчет выполнен при следующих исходных данных. Предполагается, что изначально в ПС содержится 10 ошибок со средними длительностями интервалов времени тестирования, соответственно равными 0,3 0,3 0,3 0,7 0,7 1 2 3 5 10 ч. Длительность интервала времени исправления ошибок равна 3 ч. Значения вероятностей обнаружения ошибок, 0, 1, указываются непосредственно на графиках и в таблицах, так как этот параметр для данной работы наиболее интересен. На рис. 4, представлены графики функций распределения времени устранения не менее 5, 10 ошибок для моделей стратегий 1, 2, 3 соответственно. С их помощью можно оценить время отладки которое требуется для устранения заданного количества ошибок с заданной вероятностью по формуле 12. Время исправления всех ошибок не зависит от выбора стратегии отладки, но зависит от значения вероятностей обнаружения ошибок, 0, 1, Пример такой оценки приведен в табл. 1. Проведено сравнение стратегий по среднему числу неустраненных ошибок рис. 5, при значениях вероятностей их обнаружения 1 0,8 0,5, 0, 1, соответственно. Эти графики могут использоваться для расчета числа не устраненных в программе ошибок к моменту времен с момента начала отладки. Пример такого расчета приведен в табл. 2. Представленные результаты дают наглядную картину того, как соотносятся между собой рассмотренные стратегии отладки ПС по приведенным показателям и как влияют на эти показатели значения вероятностей обнаружения ошибок. Окончательный выбор модели для оценивания характеристик надежности исследуемых ПС производится как с учетом особенностей конкретной стадии их жизненного цикла, так и с учетом вычислительных, экономических, временных, квалификационных и других возможностей пользователей и разработчиков. Обратим внимание на устойчивость решения построенных дифференциальных уравнений марковского процесса. Решение уравнений для всех вариантов стратегий, как и в работах 1113, выполнялось методом Рунге Кутты. При этом обеспечивались достаточно приемлемые характеристики устойчивости решения, обусловленные тем, что при используемом методе нумерации состояний соответствующие матрицы состояний являются нижними треугольными. Особенности программной реализации численно-аналитического метода решения систем дифференциальных уравнений для моделей нестационарных систем обслуживания, в том числе с позиций обеспечения устойчивости, рассматриваются в статье 14. Использование в предложенных моделях оценки надежности для каждого модуля, с одной стороны, повышает точность моделирования процессов отладки ПС. С другой стороны, достоинством предложенных моделей, в отличие от известных, является то, что они позволяют учитывать состоятельность мощность тестов, используемых для отладки ПС, т. е. предполагают различную степень доверия к различным тестам. Это, в свою очередь, позволяет искать пути повышения характеристик надежности ПС путем формирования тестов, обнаруживающих ошибки с высокой вероятностью. Предложенные модели целесообразно использовать для оценивания текущего уровня показателей процесса испытаний состояния надежности ПС и прогнозирования динамики их изменения в процессе испытаний на различных этапах жизненного цикла. На этапе проектирования могут быть получены первые грубые прогнозы показателей процесса испытаний и состояния ПС на основе рассчитанных к этому моменту характеристик сложности проекта и статистики о процессе обнаружения и исправления ошибок, собранных ранее при разработке подобных проектов. Такая оценка может быть уточнена позже на этапе испытания ПС, когда уже получены более точные данные о вероятностях обнаружения, распределении интервалов времени обнаружения и исправления программных ошибок. Предложенные нестационарные модели позволяют выбрать наилучшую стратегию испытаний ПС исходя из наличия или отсутствия необходимых ресурсов, времени и статистических данных, распределить работы групп тестеров и разработчиков. 