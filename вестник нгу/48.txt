АДАПТАЦИЯ СТРУКТУРЫ МЕНЮ УСЛУГ   ДЛЯ РАЗЛИЧНЫХ ТИПОВ ПОЛЬЗОВАТЕЛЕЙ   С ПРИМЕНЕНИЕМ ОНТОЛОГИЧЕСКОГО МОДЕЛИРОВАНИЯ    

Статья посвящена решению проблемы адаптации больших древовидных и линейных меню мобильных и интернет-услуг для различных типов пользователей на основании их интересов, социального статуса, а также иных параметров. Разработана программная система, строящая оптимальное меню услуг для классов пользователей, разделенных по социально-экономическим и физическим параметрам, с использованием модифицированного алгоритма построения оптимального графа USSD-меню. В работе используется онтологический подход для формального представления понятий данной предметной области, извлечения, представления и обработки знаний. Для адаптации интерфейсов используются модели пользователей, представляющие описания их потребностей, целей, интересов. Формализация поведения пользователей осуществляется при помощи онтологической модели мобильных и интернет-услуг. Каждого пользователя можно отнести к определенной модели на основании его физических и социальных параметров. Программа, реализующая адаптацию меню, состоит из двух модулей: модуль получения частот вызова услуг на основе запросов к онтологии и модуль оптимизации графа меню. Алгоритм оптимизации меню работает с языком описания графов DOT. : онтология, онтологическое моделирование, атомарные диаграммы, извлечение знаний, порождение знаний, иерархические меню, адаптация меню, анализ потребностей, задача оптимизации, пользовательские интерфейсы. 

Статья посвящена адаптации иерархических меню для различных типов пользователей. Решается проблема адаптации больших древовидных и линейных меню мобильных и интернет-услуг на основании интересов пользователей, их социального статуса, а также иных параметров. В работе используется онтологический подход для формального представления понятий данной предметной области, извлечения, представления и обработки знаний. Оптимизация интерфейсов проводится с помощью модифицированного алгоритма построения оптимального графа USSD-меню. Формализация поведения пользователей осуществляется при помощи онтологической модели мобильных и интернет-услуг. Информационные технологии глубоко проникли в нашу жизнь. С развитием сети Интернет и увеличением ее доступности бизнес начал двигаться в сторону автоматизации своих процессов и предоставления своих услуг в удаленном режиме клиенту нет необходимости приходить в офис или точку продаж, достаточно открыть приложение на компьютере или телефоне, нажать несколько кнопок и радоваться совершению покупки. Оплата ЖКХ, замена паспорта, заказ еды, бронирование отелей вс осуществляется через глобальную паутину путем взаимодействия пользователей с меню услуг. Более того, в последнее время крупные сети кафе и ресторанов начали внедрять электронные меню человеку не нужно звать официанта, чтобы заказать обед у него на столе есть планшет с установленным приложением ресторана, в котором все блюда разбиты на категории, а также есть дополнительные опции, вроде регулирования количества сахара и различных добавок. Гостю заведения необходимо просто выбрать то, что ему нравится, и ожидать, когда подадут блюда. Очевидно, что у разных людей разные интересы. Для одного клиента нужные услуги могут быть на верхнем уровне меню, а для другого спрятаны где-то глубоко. Соответственно, компания может потерять покупателя, который не смог найти требуемую ему услугу или товар, а покупатель, блуждая в лабиринтах программы, теряет свое время на бесполезный поиск. Аналогично с контекстной рекламой. Например, вегетарианцу нет смысла демонстрировать акцию о скидке на стейки или человеку со средним доходом турпутевки за 2 миллиона рублей. Таким образом, чтобы избежать перечисленных проблем или свести их к минимуму, существует необходимость адаптации меню для конечного пользователя. Адаптация это оптимизация с учетом пользовательской модели, которая представляет собой набор параметров, описывающих целевого пользователя его возраст, бюджет, социальный статус, интересы, географическое расположение и т. п. Области использования адаптации меню достаточно широки и разнообразны USSD-сервисы интернет-каталоги товаров электронные меню ресторанов меню порталов туристических услуг и услуг бронирования меню образовательных порталов диалоговые меню чат-ботов интерфейсы программ. В настоящее время уже существуют работы, которые используют онтологический подход к определению потребностей пользователей или других параметров, на основании которых можно определить наиболее релевантные предложения для каждого пользователя. Например, формульное описание диагнозов по симптомам на основании историй болезней 1 или определение предпочтений абонентов мобильных сетей по их характеристикам 2. В данной работе предложены алгоритм получения частот использования услуг на основании модели пользователя и алгоритм оптимизации иерархических меню по полученным частотам, который является модифицированным алгоритмом оптимизации USSD-меню 3. Алгоритм получения частот использования услуг основан на онтологическом подходе для формального представления понятий данной предметной области, извлечения, представления и обработки знаний 46. Для адаптации интерфейсов используются модели пользователей, представляющие описания их потребностей, целей, интересов 10. Формализация поведения пользователей осуществляется при помощи онтологической модели интернет-услуг 8 9 11. Меню услуг это направленный ациклический граф, вершины которого представляют элементы меню, а ребра задают пути между этими элементами. Первый уровень меню множество вершин графа со степенью захода 0. Разделы меню узлы графа. Услуги множество вершин графа с нулевой степенью исхода. Элемент меню элемент множества раздел меню, услуга. Переход по меню ветвь между двумя элементами меню. Выделяются три типа иерархических меню. 1. Линейное меню рис. 1, меню, в котором все услуги имеют степень захода, равную нулю. Другое название такого меню лента услуг. В чистом виде встречается редко, но в любом иерархическом меню можно выделить по крайней мере одно линейное меню для каждого раздела. 2. Древовидное меню моноиерархическое меню рис. 1, меню, в котором любой элемент, не принадлежащий первому уровню, имеет степень захода, равную 1. Является частным случаем мультииерархического меню. 3. Мультииерархическое меню рис. 1, меню, в котором любой элемент, не принадлежащий первому уровню, имеет степень захода, равную натуральному числу. Примером такого меню является любое древовидное меню с разделом Избранное, в котором услуги из этого раздела имеют степень захода, равную двум. Адаптация меню это оптимизация меню для конкретного портрета пользователя на основании его параметров. Для того чтобы дать определение оптимизации меню, необходимо определить целевую функцию. Пусть количество заказов -й услуги пользователем, количество услуг в меню. Тогда обозначим общее количество заказов услуг пользователем . Пусть минимальное количество переходов в меню нажатий клавиш или кликов мышкой для заказа -й услуги. Тогда обозначим общее количество нажатых пользователем клавиш . Функция подвергается минимизации. Но в задаче удобней работать с заказа каждой услуги, а не с заказов. Именно поэтому вводим величину вероятность вызова -й услуги. И вместо функции проводим минимизацию функции . Несложно доказать, что минимизация влечет за собой минимизацию . Действительно, где const, откуда следует, что обе функции имеют экстремумы в одних и тех же точках. Задачей оптимизации меню, предоставляющего услуг, назовем минимизацию функции ., где вероятность вызова -й услуги, а минимальное количество нажатий клавиш, необходимое для заказа -й услуги. Для минимизации сумм нам необходимо определить параметр для каждой услуги. В данной работе применяется теоретико-модельный подход для определения вероятностей строится онтологическая модель предметной области на основе ключевых понятий этой предметной области, ее законов и постулатов, а также множества прецедентов. Для описания прецедентов портреты пользователей и статистика заказа услуг. Таким образом, получаем следующие этапы адаптации меню 1 получение информации о пользователях и составление их портретов на основе полученных характеристик 2 построение векторов вероятностей заказа услуг для конкретного портрета пользова теля 3 оптимизация меню с помощью алгоритма оптимизации на основании вероятностей заказа услуг. Самый простой способ адаптировать меню услуг под определенного пользователя это изучить историю его заказов этих услуг. Соответственно чем больше заказов определенной услуги, тем больший вес она будет иметь в итоге, и тем ближе к началу меню ее расположит алгоритм оптимизации. Но здесь есть две важные проблемы. Во-первых, у пользователя такой истории может не быть а тем более достаточно подробной, чтобы для каждой услуги можно было вычислить частоту ее использования. Во-вторых, история теряет актуальность список услуг и портрет пользователя постоянно меняются. Поэтому для более релевантной адаптации меню следует найти способ получения более актуальной и полной информации о пользователях и услугах. И на основании этой информации можно будет составить список характеристик пользователя и услуг и построить онтологическую модель для определения вероятностей использования определенных услуг определенными пользователями. В наше время, наверно, почти не осталось людей, которые не имеют аккаунтов в социальных сетях ВКонтакте, Одноклассники, Facebook, к которым присоединились Twitter и Instagram. С развитием рынка смартфонов и беспроводного Интернета пользователи все больше и больше времени проводят в соцсетях. Вместе с этим соцсети оказываются отличным описанием профиля пользователей. Можно посмотреть личную информацию о человеке пол, возраст, место жительства, интересы, количество друзей и подписчиков, его сообщества, добавленную музыку, фотографии и т. п. Самая популярная социальная сеть в России и СНГ ВКонтакте. Именно поэтому она была выбрана в качестве целевой платформы для получения информации о пользователях. ВКонтакте предоставляет публичный программный интерфейс VK API, с помощью которого можно программно получить подробную информацию о пользователях в виде JSON-объектов рис. 2. В работе с помощью VK API были получены параметры для нескольких тысяч обезличенных пользователей, каждому из которых был приписан уникальный id для последующей идентификации. Среди параметров были город, образование, место работы, стаж работы по сумме лет, интересы по ключевым словам, книги, фильмы, музыка, количество друзей, количество подписчиков, количество фотографий, сообщества. Есть один важный параметр, который невозможно напрямую получить с помощью социальных сетей, уровень дохода. Однако его можно приблизительно вывести с помощью информации об образовании, месте жительства, месте работы и стаже работы. Также в работе уровень дохода не исчисляется абсолютными величинами, а выражается фиксированным набором значений, аппроксимирующим определенные интервалы чисел очень маленький, маленький, ниже среднего, средний. Таким образом, используя социальные сети, можно построить достаточно полный портрет пользователя и список характеристик, на основании которых можно адаптировать меню под пользователя с определенным портретом. В работе целевой предметной областью был выбран рынок туристических услуг. Во-пер вых, туризм всегда актуален, во-вторых, предложения имеют очень широкий ценовой спектр и спектр интересов, в-третьих, туристический рынок имеет очень богатую классификацию услуг билеты на самолеты и поезда, аренда автомобилей, отели, визы, гиды, переводчики, круизы... Для построения и структурирования знаний о предметной области рынка туристических услуг была определена онтологическая модель, состоящая из четырех уровней набор ключевых понятий предметной области, универсальные общие утверждения, эмпирические данные и оценочные знания. На первом уровне онтологической модели описываются понятия предметной области, а также даются определения этим понятиям. Для предметной области рынка туристических услуг описываются такие понятия, как рейс, отель, лоукостер, виза, отель, достопримечательность, культура, религия, тур местный, внутренний, внешний, санаторий, туроператор, бронирование, сезон, попутчик, гражданство, страховка, хостел, город и т. п. На втором уровне онтологической модели представлены знания о предметной области, т. е. строится формальное описание всех объектов, которые были выделены на первом уровне онтологической модели, а также принципов и закономерностей. Ключевым моментом является то, что все описываемые знания являются достоверными лишь на данный момент, в будущем они могут меняться. Таким образом, онтологическая модель поддерживает актуальность. Для описания знаний выбран формат обмена данными JSON рис. 3, так как он хорошо читается и удобно сериализуется. Каждый объект может иметь внутри себя множество свойств трех типов характеристику, другой объект и массив объектов. Характеристика это такой тип свойства, который может принимать значения из конечного множества. Например, характеристика класс обслуживания может принимать значение из множества Первый класс, Бизнес-класс, Премиальный-экономический класс, Экономкласс. Центральный объект онтологической модели предметной области рынка туристических услуг Услуга. Он обладает четырьмя характеристиками название, тип услуги, стоимость и дата. Характеристика Тип услуги, как будет описано далее, требуется алгоритму подсчета вероятностей заказов услуг. Она может принимать два значения простая услуга и контейнер. Все остальные объекты наследуют эти характеристики и имеют свои уникальные. Особняком стоит объект Тур, который и сам является услугой, и внутри себя содержит массив услуг, при этом его стоимость равна сумме стоимости входящих в него элементов. Эмпирические данные это данные, описывающие прецеденты предметной области, иными словами, это история взаимодействия пользователей с системой, предоставляющей услуги. Формальное описание каждого прецедента задается в виде фрагмента атомарной диаграммы 7. Атомарная диаграмма модели это множество атомарных предложений, т. е. предложений вида,...,..., где,..., константы, а предикат. В нашем случае каждое атомарное предложение имеет следующий вид Человек с характеристиками Доход 70000, Город Новосибирск, ... заказал услугу с характеристиками Название Рейс в Санкт-Петербург, Авиакомпания S7, Стоимость 10000, .... Таким образом мы получаем описание всех профилей пользователей. Вероятностные знания можно получить двумя способами взять из каких-либо внешних источников или провести анализ эмпирических данных нашей онтологической модели и сопоставить их с универсальными знаниями. Информация, получаемая в результате анализа эмпирических данных, подразделяется на два уровня уровень данных и уровень знаний. Уровень данных это информация, полученная полностью автоматическим способом на основе разбора ассоциативных правил и вычисления частот использования услуг по определенному алгоритму. На уровне знаний информация не может быть получена в полностью автоматическом режиме. Необходимо вмешательство эксперта, который анализирует информацию, полученную на уровне данных, и делает финальные выводы. Однако по информации, полученной на уровне данных, можно получить знания об интересах каждого пользователя, если ввести аксиому о том, что чем выше вероятность заказа услуги в прошлом, тем она выше и в будущем. Таким образом, построив алгоритм вычисления вероятностей заказа услуг, можно будет проводить адаптацию меню на основе этой информации. На втором уровне онтологической модели были описаны все туристические услуги. Каждая услуга имеет набор характеристик. Характеристики потребителей, в свою очередь, были получены путем анализа аккаунтов в соцсетях. Итак, имеем следующее пользователя определяют характеристики пользователя, и, в свою очередь, услугу определяют характеристики услуги. Поэтому, определив частоту, с которой каждая характеристика с названием и значением, фигурирующая у пользователей, и каждая характеристика, принадлежащая услугам, встречались вместе в атомарном предложении, можно для каждого пользователя вычислить вероятность заказа любой услуги. Из рассуждений, описанных выше, можно построить алгоритм, который выглядит следующим образом. 1. Для всех возможных характеристик потребителей составляется вектор весов каждой характеристики услуг по всем ее значениям на основании анализа эмпирических данных, а именно подсчета связей Характеристика x пользователя Характеристика y услуги для всех x, y, i, j, где x и y названия характеристик, а x и y значения из множества значений. Пример для анализа берем характеристику Город Новосибирск. Из всех атомарных предложений выбираются те, где пользователи имеют характеристику Город Новосибирск, и для каждой характеристики услуг подсчитываются ее вхождения в атомарные выражения. Таким образом, для каждого значения каждой характеристики пользователя получается список весов значений характеристик услуг Компания S7 Компания Аэрофлот ... Город Новосибирск 40 40 Город Томск 35 32 ... Стоимость 610 тыс. Стоимость 1115 тыс. ... Город Новосибирск 39 12 Город Томск 47 11 ... 2. Для конкретного потребителя составляется список частот услуг следующим образом. A. По очереди выбирается каждая услуга и ее характеристики образуют список. B. Для каждой характеристики из списка подсчитывается ее вес по частотам, полученным в п. 1. Вес услуги это среднее арифметическое весов ее характеристик. C. После того как посчитан вес для каждой услуги, эти веса делятся на общую сумму весов всех услуг. D. Дополнительно. Если тип услуги контейнер например, услуга Тур, то шаг 2 выполняется рекурсивно для всех услуг, входящих в массив, и считается их среднее арифметическое. В результате получаем вероятность выбора каждой услуги. Следует отметить, что шаг 1 алгоритма выполняется всего один раз, а при каждом новом заказе услуги просто пересчитываются некоторые значения, которые относятся к характеристикам данной услуги. Шаг 2 выполняется многократно для каждого пользователя отдельно. Более того, с определенной периодичностью следует пересчитывать и для одного и того же пользователя, чтобы предложения услуг не теряли свою актуальность. Таким образом, мы построили онтологическую модель предметной области рынка туристических услуг и с помощью нее для каждого пользователя вычислили вероятность заказа каждой услуги. Алгоритм оптимизации иерархических меню получает на вход список пар название услуги вероятность использования услуги. Пусть свободный узел графа это узел графа, который не имеет родителей. Таким образом, алгоритм оптимизации получает на вход список свободных узлов, которыми являются пары название услуги вероятность использования услуги. Пусть максимально возможное количество ветвей узла, которое задается пользователем. Если обратиться к исследованиям в области когнитивной психологии, то найдем оптимальное значение 7 2. Однако в действительности оптимальное значение зависит от задачи. Пусть количество оставшихся свободных узлов на -м шаге итерации алгоритма. Выбирается свободных узлов с наименьшей вероятностью использования услуги. Затем создается родитель этих узлов, значение частоты которого является суммой частот его прямых потомков. Далее его потомкам присваиваются идентификаторы от 1 до, сами потомки удаляются из списка свободных узлов, поскольку у них появился родитель, а их родитель добавляется в этот список рис. 4. Имя родителя во время работы алгоритма задается случайным образом например, по первым буквам имен его потомков и в алгоритме роли не играет. В любом случае после процесса оптимизации меню для всех новых узлов название определяется человеком. Далее все шаги повторяются до тех пор, пока количество текущих свободных узлов не станет равным максимальному количеству ветвей на узле . Эти свободные узлы и образуют корневые порталы меню. В итоге получается оптимальная структура меню, а именно такая структура, где чем выше вероятность использования определенной услуги, тем эта услуга будет находиться ближе к корню меню. Каждая услуга в полученном меню строго определяется последовательностью переходов в графе, т. е. последовательностью кликов мышки или нажатий клавиш, которые должен сделать пользователь, чтобы вызвать ее. В чистом виде приведенный алгоритм может в определенных ситуациях не строить оптимальное меню. Проблема заключается в том, что на последнем шаге алгоритма иногда останется менее, чем свободных узлов. Это происходит в тех случаях, когда количество услуг в меню будет иметь такое значение, что 1, где число шагов, за которое алгоритм построит меню. В этом случае на первом уровне меню количество ветвей будет меньше максимального рис. 5, когда ожидаемый результат работы алгоритма недостаток ветвей возможен только на последнем уровне. Для того чтобы решить эту проблему, перед первым шагом алгоритма следует оценить число свободных узлов, которое останется на последнем шаге, и, если оно окажется меньше, на первом шаге за максимальное количество элементов на узле вместо принять, получившееся в результате оценки рис. 6. Таким образом, количество ветвей ниже максимального окажется именно на последнем уровне меню, что вполне допустимо, и, более того, является достаточно частой ситуацией, так как почти всегда количество услуг имеет кратность, отличную от количества подменю рис. 7. Для тестирования адаптации меню с помощью Json-генератора были созданы 913 услуг, а также построена история о 30 000 заказах услуг. Эти услуги были разбиты на следующие категории билеты на самолет, отели, круизы, визы, сувениры, гиды, переводчики, аренда автомобилей. Каждая категория была разбита, в свою очередь, еще на несколько подкатегорий. Тестирование проводилось на полной выборке из 30 000 заказов услуг, а также на выборках случайных 10 000 и 20 000 заказов из полной выборки. Программа тестировалась в двух режимах режим пагинации и режим дерева. В первом режиме категории меню разбивались на страницы, а во втором режиме строилось мультииерархическое меню. Сокращение количества нажатий клавиш пользователем для выбора требуемой услуги составило от 29 до 35 рис. 8. В настоящей работе решается задача адаптации структуры меню услуг для различных типов пользователей. Разработан алгоритм составления векторов вероятностей услуг на основе построения онтологической модели предметной области. Построена трехуровневая модель предметной области рынка туристических услуг. Характеристики пользователей были получены с помощью анализа профилей социальной сети ВКонтакте программным модулем, использующим публичный программный интерфейс VK API. Разработаны два алгоритма оптимизации меню в зависимости от его структуры режим построения пагинации для линейного меню и режим построения дерева для древовидных меню. Если для алгоритма используется уже ранее построенное меню, в котором нельзя удалять переходы, то алгоритм поддерживает построение мультииерархического меню. Онтологическая модель реализована программно на языке OWL в редакторе Protege с маппингом в базу данных MongoDB для более удобных операций над данными на уровне кода. В качестве языка программирования выбран C, а в качестве платформы для приложения ASP.NET MVC. Для работы с графами на языке C использовалась библиотека QuickGraph, поддерживающая язык описаний DOT. Тестирование адаптации было проведено на меню услуг, состоящим из 913 элементов, в двух режимах пагинации и построения дерева. Среднее сокращение количества времени выбора услуги пользователем составило 2935 . В дальнейшем планируется модифицировать алгоритм построения частот использования услуг. 