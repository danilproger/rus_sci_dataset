ВЫБОР АЛГОРИТМА ПРЕОБРАЗОВАНИЯ, ОБЕСПЕЧИВАЮЩЕГО ИЗМЕНЕНИЕ СТРУКТУРЫ ИЗОБРАЖЕНИЯ 

Рассматривается проблема выбора эффективного алгоритма преобразования видеоинформации в видеосистемах встраиваемого класса, обеспечивающего ее конфиденциальность при передаче и хранении. Предлагается модификация алгоритма VEA, позволяющая повысить защищенность информации в условиях атак по перехваченной преобразованной информации и выбранному исходному изображению и обеспечивающая эффективное уничтожение структуры передаваемой видеоинформации. The authors studys the choice of an effective algorithm for the transformation of videoinformation in embidded video systems that ensures its confidentiality on keeping and transmission. A modification of the VEA algorithm is proposed. This modification increases the protection level of the information against the interception attacks and ensures an efficient destruction of the transmitted information.

Для решения задачи обеспечения конфиденциальности передаваемой и хранимой информации традиционно используется специальное преобразование, устойчивое к различного типа атакам. В контексте данной задачи наиболее эффективными и опасными являются атаки по парам исходное преобразованное изображение и по выбранному исходному изображению. Кроме того, следует отметить необходимость предотвращения атак, связанных со спецификой исходной информации, изображения, которое изначально содержит характерные фрагменты контуры и тем самым уже по умолчанию предполагает возможность атаки по парам исходное преобразованное изображение. Задача выбора алгоритма преобразования осложняется спецификой видеосистем встраиваемого класса существенными ограничениями на свободные вычислительный ресурс и объем оперативной памяти. Все преобразования условно разделяют на два типа потоковые и блоковые. К потоковым преобразованиям относятся системы, использующие ключевые последовательности, генерируемые регистрами сдвига, и системы хаотичного преобразования CVEC. Такие системы обеспечивают высокую скорость обработки информации, однако они неустойчивы к атакам с использованием перехваченных образцов обработанного и исходного изображения 14. Системы блокового преобразования, в свою очередь, можно разделить на системы полного и частичного преобразования. Системы частичной обработки видеоинформации, использующие так называемые методы селективного преобразования, делятся на системы, учитывающие структуру видеоформата и ориентированные на обработку форматов сжатого изображения 16, 812, и системы, предназначенные для обработки несжатой информации 13. Рассмотрим особенности этих подходов на примере нескольких наиболее известных алгоритмов. 1. Video Encryption Algorithm by Okao and Nahrstedt 8. Основной идеей алгоритма является изменение статистических свойств видеоформата MPEG. Преобразование представляет собой аналог одного раунда сети Фейстейла. Первоначально весь информационный поток разбивается на блоки одинаковой длины например, на байты, таким образом получается два списка четные и нечетные байты. Результатом преобразования являются байты, полученные как побайтная сумма по модулю два исключающее ИЛИ четных и нечетных байт, и преобразованные с использованием симметричного алгоритма AES, DES, ГОСТ 2814789 и т. п. нечетные или четные байты. Следует отметить недостаточную защищенность данного алгоритма при его использовании для обработки последовательности кадров и возможность применения атаки по выбранному исходному видеофрагменту. Очевидно, что данный недостаток может быть легко преодолен, если в алгоритме обработки использовать несколько раундов сети Фейстейла. 2. Одним из характерных примеров систем частичного преобразования, использующих структуру видеоформата, является семейство алгоритмов, ориентированных на стандарт MPEG 3. Наиболее защищенным из этого семейства алгоритмов считается алгоритм RVEA, который обеспечивает защиту от атак как по перехваченному преобразованному изображению, так и по выбранному исходному изображению. В отличие от остальных алгоритмов этого семейства RVEA преобразует не только знаковые биты коэффициентов DCT, но и знаковые биты векторов движения формата MPEG. В общей сложности RVEA подвергает обработке около 10 всего объема MPEG-файла. Однако сравнение результатов обработки реального изображения алгоритмами, приведенными в работах 3, 8, наглядно демонстрирует преимущества первого алгоритма в случае, если стоит задача разрушить структуру передаваемого изображения рис. 1. 3. Использование подхода частичного преобразования несжатого видеоизображения рассмотрено в работе 13. Основной идеей является обработка не всего информационного блока для отдельной точки изображения, а только старших одного или двух бит для каждого блока. Для преобразования старших бит используются стандартные симметричные алгоритмы типа AES, DES, ГОСТ 2814789 и т. п. Очевидно, что такой подход дает существенный выигрыш по затратам на обработку изображения. К сожалению, сами авторы отмечают достаточную устойчивость этого алгоритма к атакам по перехваченному изображению, подвергавшемуся преобразованию, лишь в случае, когда обрабатывалось не менее 50 от объема каждого информационного блока. Основываясь на проведенном анализе свойств существующих систем и учитывая требования, предъявляемые к системе преобразования видеопотока защищенность к атаке по известному открытому изображению полное разрушение структуры видеоинформации защищенность от атаки по парам исходная преобразованная видеоинформация независимость от используемого видеоформата следует выбрать систему непрерывного, полного преобразования всего объема видеоинформации, используя потоковый или блоковый алгоритм. Кроме того, учитывая условие старения информации ее актуальности, определяемое временным периодом до нескольких дней, можно использовать упрощенный вариант известных алгоритмов таких как AES, DES, ГОСТ 2814789. Для того чтобы блоковый алгоритм преобразования обладал свойством разрушения структуры видеоинформации, должно выполняться, по крайней мере, следующее свойство одинаковые блоки исходного изображения должны преобразовываться в существенно отличающиеся друг от друга блоки обработанной информации, т. е. для любых . Такое свойство для преобразования может быть достигнуто двумя способами постоянно меняющейся функцией или использованием для преобразований функции от двух переменных, где некоторый параметр, меняющийся для каждого нового блока исходного изображения. Рассмотрим возможные методы реализации каждого из перечисленных способов. 1. Постоянное изменение функции преобразования может быть достигнуто либо с использованием детерминированного алгоритма изменения функции, который должен сохраняться в тайне, либо с использованием некоторого случайного преобразования. Первый вариант, очевидно, сводится к введению дополнительного секретного параметра, позволяющего менять вид функции. Во втором варианте необходимо найти такое случайное преобразование, результат применения которого можно было бы легко восстановить, не зная самого преобразования. Одним из методов такого преобразования является использование помехоустойчивого кода в качестве детерминированной части преобразования, при этом секретом будет эффективный алгоритм декодирования исправления ошибок для выбранного кода. Случайной частью преобразования будет генерация случайного вектора ошибки, вес Хэмминга которого не должен превышать числа ошибок, исправляемых кодом. В общем виде такое преобразование можно записать следующим образом A, где информационный блок изображения длины порождающая матрица, -помехоустойчивого кода здесь длина информационного блока, длина кодового слова, минимальное расстояние кода A матрица, имеющая обратную матрица перестановок случайный вектор ошибки длины, 12, являющийся в данном случае параметром для выполняемого преобразования. Для восстановления исходного блока изображения первоначально используется алгоритм декодирования с исправлением случайного вектора ошибки, а затем из полученного кодового слова восстанавливается значение информационного блока. Устойчивость такого метода к различным атакам подтверждается безопасностью алгоритма Мак Эллиса, использующего такой же подход в несимметричных системах. Этот метод обработки видеоинформации может быть модифицирован, если использовать идею неравнозначных бит в информационном блоке 13 и, соответственно, помехоустойчивые коды с неравной защитой позиций в кодовом слове 15. 2. В данной статье предлагается использовать функцию от двух переменных, в качестве которой может выступать любой симметричный алгоритм блокового преобразования типа ГОСТ. Для обеспечения быстрой синхронизации при потере пакетов в распределенных IP-системах начальное значение параметра для пакета с номером может быть установлено, например, следующим образом, где начальное значение параметра. В качестве функции, может быть выбрано простое арифметическое сложение 256 битных чисел с игнорированием разряда переполнения. Рассмотрим более подробно предлагаемый в данной работе блоковый алгоритм преобразования, адаптируемый по параметру защищенность сложность реализации. За его основу взята модификация алгоритма VEA 8 и сеть Фейстейла со стандартным размером входного информационного блока в 64 бита и длиной параметра 256 бит. На каждом раунде выполняются простейшие аналогичные ГОСТ 2814789 операции замены и перестановки. Число раундов можно изменять от 8 до 16 в зависимости от требуемого соотношения защищенностьсложность реализации. Для согласования алгоритма с требованиями использующего его приложения преобразованию подвергаются пакеты данных, длина которых может лежать в некотором ограниченном диапазоне, но последовательные пакеты могут иметь разные длины и не обязательно кратные длине информационного блока в 64 бита. Функция, быстрой синхронизации реализована в виде, не зависящем от длины пакета, и использует некоторое, заранее фиксированное, количество операций арифметического сложения с игнорированием переполнения. Алгоритм был реализован в виде приложения на языке С и тщательно тестировался на различных изображениях. Проверялась эффективность алгоритма по изменению структуры аудиоданных. Примеры работы предложенного алгоритма по изменению структуры изображения представлены на рис. 2. Более сложный случай монохромные, высококонтрастные изображения рис. 3. Для получения достоверных оценок сложности программной реализации предлагаемого алгоритма программа была протестирована в инструментальной среде разработки Code Composer Studio ver. 3.1 фирмы Texas Instruments для 32-битного сигнального процессора семейства TMS64XX. Использовались только средства оптимизации компилятора языка С. В качестве оценки сложности алгоритма выступает количество тактов на байт преобразуемой информации. Так, при 8 раундах преобразования процессор с тактовой частотой 600 МГц способен в реальном времени преобразовывать поток 24 Мбайтс. Предложенная в работе модификация блокового преобразования с изменяющимся параметром позволяет обеспечить эффективное искажение структуры изображения и тем самым предотвратить наиболее распространенные методы атак. Само преобразование выполняется с использованием хорошо известной схемы сетей Фейстейла с не менее чем восьмью раундами, устойчивой ко всем известным в настоящее время атакам. Очевидным направлением повышения качества предложенного здесь метода является нахождение алгоритма случайной генерации параметра блокового преобразования при обработке изображения, позволяющего выполнить обратное преобразование без знания значения . Таким образом, представляется эффективным решение, которое позволило бы объединить преимущество схемы Мак Эллиса, использующей случайный параметр вектор ошибки с простотой описанного в данной работе модифицированного блокового преобразования. 