МЕТОДИКА ОПТИМИЗАЦИИ РАБОТЫ СЛУЖБЫ КАТАЛОГОВ 

при обращении к службе каталогов множества сервисов (прокси-сервер, файловый сервер и т. д.) сервер каталога должен обрабатывать тысячи записей. При этом наблюдается низкая масштабируемость и, как следствие, увеличение времени доступа к данным. Целью работы является уменьшение аппаратных и временных затрат при чтении, записи, удалении данных каталога. Методы: проведены сравнительные анализы аппаратных и временных затрат при стандартных настройках каталога и при работе с СУБД PostgreSQL, методов индексирования в СУБД PostgreSQL, аппаратных и временных затрат при неиндексированных и индексированных данных в СУБД PostgreSQL. Результаты: определены сервисы, работающие со службой каталогов, и их операции (добавление пользователя, получение почты и т. д.). Получены числовые данные аппаратных и временных затрат для каждой конфигурации каталога при разных типах запросов. Определено подмножество атрибутов сервисов из общего числа атрибутов каталога. Определен метод индексирования данных в СУДБ PostgreSQL с учетом типов данных каталога. Разработана и описана последовательность шагов оптимизации службы каталогов при работе в высоконагруженных вычислительных сетях с заданным набором сервисов. Практическая значимость: данный метод позволил добиться значительного уменьшения аппаратных и временных затрат для стандартных операций службы каталогов. Результаты исследования использованы при разработке серверных решений LinuxWizard.

Служба каталогов Directory Service средство иерархического представления различных ресурсов и хранения информации об этих ресурсах. В качестве ресурсов выступают материальные ресурсы, персонал, сетевые ресурсы и т. д. Самой простой службой каталогов является служба имен a naming service, отображающая имена сетевых ресурсов и соответствующие им сетевые адреса. При организации такой службы каталогов пользователь не должен помнить физический адрес сетевого ресурса служба имен будет определять местоположение ресурса. Каждый ресурс при этом будет считаться объектом в службе каталогов. Информация об определенном объекте ресурсе хранится как значения атрибутов этого объекта. Служба каталогов в контексте компьютерных сетей программный комплекс, позволяющий администратору работать с упорядоченным по ряду признаков массивом информации о сетевых ресурсах общие папки, серверы печати, принтеры, пользователи и т. д., хранящимся в едином месте, что обеспечивает централизованное управление как самими ресурсами, так и информацией о них, а также позволяющий контролировать использование их третьими лицами 1. В течение 1980-х гг. международной организацией International Telegraph and Telephone Consultative Committee разрабатывался общий стандарт для службы каталогов, в дальнейшем названный X.500, частью которого является протокол доступа к каталогу DAP Directory Access Protocol, используемый в современных службах каталогов в облегченном варианте LDAP Lightweight Directory Access Protocol по причине первоначальной всеобъемлющей функциональности, оказавшейся неуместной для персональных компьютеров. OpenLDAP открытая реализация протокола LDAP, разработанная проектом OpenLDAP Project. Распространяется под собственной лицензией, называемой OpenLDAP Public License. Для хранения записей OpenLDAP использует базу данных Berkeley DB, но доступны различные модули для хранения данных в других базах данных 2. Berkeley DB BDB база данных, реализованная в виде библиотеки. BDB является нереляционной базой данных она хранит пары ключ значение как массивы байтов и поддерживает множество значений для одного ключа 3. Когда появляется необходимость обращения к LDAP-серверу с помощью различных приложений, LDAP-сервер должен обрабатывать тысячи записей LDAP. При этом наблюдается низкая масштабируемость и, как следствие, увеличение времени обращения к данным. PostgreSQL свободная объектно-реляционная система управления базами данных СУБД. PostgreSQL базируется на языке SQL и поддерживает многие из возможностей стандарта SQL2003 ISOIEC 9075 4. Поскольку в службе каталогов OpenLDAP доступны модули sql, можно реализовать хранение данных в СУБД PostgreSQL и проанализировать масштабируемость и изменения времени обращения к данным 5. Для анализа текущей задачи можно выполнить ряд шагов 1 провести анализ временных и аппаратных затрат при работе службы каталогов с BDB 2 определить минимальный необходимый и достаточный набор индексов для работы заданного набора сервисов 3 реализовать совместную работу службы каталогов OpenLDAP и PostgreSQL 4 провести сравнительный анализ временных и аппаратных затрат при работе служб каталогов с СУБД postgresql и bdb 5 проиндексировать таблицы pgsql для различного набора сервисов. Провести сравнитель. ный анализ временных и аппаратных затрат при работе службы каталогов с заданным набором индексов и исходным вариантом. Для проведения сравнительного анализа достаточно стандартных средств операционной системы GNULinux, таких как syslog, time, top. Для индексирования таблиц СУБД PostgreSQL предпочтителен только один метод btree как единственный, удовлетворяющий всем типам данных, используемых в службе каталогов 6. Результаты анализа при работе службы каталогов при стандартных настройках и после индексирования таблиц СУБД PostgreSQL представлены в табл. 1 и 2. Для решения такой задачи была использована следующая последовательность действий. 1. Определение динамического набора сервисов и запросов к службе каталогов 7 например, для таких сервисов, как прокси, файловый сервер, почтовый сервер, сервер аутентификации, будут актуальны следующие запросы аутентификация добавление записи удаление записи отправка почты прием почты. 2. Настройка сервера с соответствующими настройками для работы с СУБД PostgreSQL 8. 3. Определение исходного множества используемых атрибутов . 4. Выделение необходимого подмножества атрибутов, принадлежащих множеству для каждого сервиса. 5. Выбор уникального множества индексов из подмножеств атрибутов для текущего набора сервисов согласно формуле, где уникальное множество индексов множество атрибутов для определенного сервиса, 1.., количество сервисов. Множество индексов состоит из объединенных подмножеств всех атрибутов сервисов с удалением дублирующихся атрибутов для каждого из них. 6. Индексирование согласно уникальному множеству индексов 9. В данной статье представлен способ оптимизации работы службы каталогов в высоконагруженных локальных вычислительных сетях. Все действия, описанные в статье, следует применять только на Linux-сервере с установленными пакетами openldap и postgresql-server. В таком решении данные службы каталогов хранятся в СУБД PostgreSQL, что является уже редким случаем. Индексирование позволяет добиться более масштабируемого решения по сравнению с неиндексированным и тем более стандартным случаем с BerkeleyDB. Целесообразность индексирования обусловливается типами запросов к каталогу, так как они являются однотипными поиск записи, удаление записи и добавление записи. Сравнительный анализ проводился по двум основным характеристикам временные затраты и аппаратные. Результаты после процедуры индексирования представлены для обеих характеристик в таблицах. Согласно анализу, временные затраты для индексированного решения меньше на 50 по сравнению с решением на BerkeleyDB, а преимущество по аппаратным затратам более 30 . Следует отметить, что данное улучшение наблюдается только для служб каталогов с количеством записей более 600, что было определено экспериментально. Выражение для поиска уникального множества индексов службы каталогов универсально для различных конфигураций и может быть использовано для всех типов каталогов Active Directory, OpenLDAP, 389 DS. Предлагаемые шаги оптимизации службы каталогов универсальны и эффективны для динамического набора сервисов. Результаты данного исследования используются в разработках компании LinuxWizard. 