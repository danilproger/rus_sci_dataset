АЛГОРИТМ ОПТИМИЗАЦИИ ВЕКТОРНОГО ПОЛЯ  В ЗАДАЧЕ ВРЕМЕННОЙ ИНТЕРПОЛЯЦИИ КАДРОВ 

разработка алгоритма оценки истинного движения для систем интерполяции кадров во времени (временной интерполяции кадров). Результаты: предложен алгоритм оценки движения по двум смежным кадрам видеопоследовательности. Алгоритм учитывает модель истинного движения объектов в видеопоследовательностях, основанную на допущении о гладкости векторного поля. При этом в предложенном алгоритме дополнительно обрабатываются ситуации, когда это допущение не верно, в частности, на регионах с границами объектов. В основе алгоритма лежит итеративная процедура решения оптимизационной задачи, введенной в рамках модели. Процедура базируется на постепенном уточнении движения от больших объектов к малым, расчете надежности векторов движения и сглаживании векторного поля с учетом надежных векторов. Результаты работы нового алгоритма представлены для задачи преобразования кадровой скорости на стандартных тестовых множествах. Показано, что простой алгоритм интерполяции, использующий только предложенный метод оценки движения, сравним по эффективности с алгоритмами преобразования кадровой скорости, использующими более сложные эвристики. Практическая значимость: предложенный алгоритм позволяет повысить визуальное качество интерполяции промежуточных кадров (данное приложение является одной из ключевых компонент современных телевизионных приемников), что является важной и актуальной задачей в современных системах обработки видеоданных.

Процедура временной интерполяции кадров является одним из ключевых блоков многих современных систем обработки визуальных данных, в частности, систем преобразования кадровой скорости в телевизионных приемниках 1, распределенного кодирования видеоданных 2, масштабируемого кодирования видеоисточника 3 и т. д. Одним из основных методов, применяемых при временной интерполяции, является оценка истинного движения объектов в видеопоследовательности 4. С точки зрения теории модель истинного движения хорошо формализована, и существуют алгоритмы, явно учитывающие эту модель при поиске движения. Однако на практике многие допущения, принятые в модели истинного движения, не выполняются, и для временной интерполяции разрабатываются эвристические алгоритмы, часто имеющие высокую сложность сегментация, выделение текстур и т. п. 5. В настоящей статье рассмотрена модель истинного движения объектов в видеопоследовательностях. Предложен алгоритм оценки движения для задачи временной интерполяции кадров. Алгоритм хорошо согласуется с моделью истинного движения и может рассматриваться как частный способ решения оптимизационной задачи, определенной в рамках этой модели. Принцип метода базируется на подходах, основанных на предсказании векторов движения, что способствует точной оценке движения на краях объектов при сохранении гладкости векторного поля в целом. Эффективность предложенного алгоритма исследуется с использованием программного комплекса временной интерполяции кадров. В статье приводятся результаты сравнения данного комплекса с известными реализациями алгоритмов временной интерполяции. Одной из основных задач временной интерполяции кадров является задача точного отслеживания перемещений объектов на оригинальных кадрах видеопоследовательности, называемая задачей поиска истинного движения true motion estimation. Информация об истинном движении далее используется для корректной интерполяции объектов на промежуточных кадрах. В связи с этим большинство современных алгоритмов временной интерполяции кадров основано на процедурах оценки и компенсации движения Motion Compensated Frame Interpolation. Обобщенная схема алгоритма интерполяции рис. 1 включает два основных блока блок оценки движения Motion Estimation применяется для оценки изменений между соседними кадрами, которая оперирует с терминами вектор движения и векторное поле множество всех векторов движения блок компенсации движения применяется для интерполяции нового кадра с использованием информации от предыдущего блока. Можно выделить две основные задачи, возникающие при временной интерполяции кадров 1 поиск истинного движения 2 обработка регионов на интерполированном кадре, не имеющих вектора движения или имеющих более одного вектора движения 6. Следует отметить, что задача поиска истинного движения отличается от задачи оценки движения, возникающей при сжатии видеопоследовательностей. В связи с этим для формализации понятия истинного движения, как правило, принимают ряд допущений о векторном поле, отражающих специфику перемещений объектов на кадрах. Одним из наиболее распространенных является допущение о векторного поля, заключающееся в том, что векторы движения, соответствующие пространственно близким регионам, должны быть коррелированы. Как правило, для расчета гладкого векторного поля используются схемы, основанные на предсказании движения. В этих схемах вектор для нового региона оценивается с учетом векторов, сформированных ранее для соседних регионов. Процедура предсказания может осуществляться как в пространственной области, так и во временной. Однако допущение о гладкости векторного поля, как правило, является неверным для регионов, содержащих границы объектов. Поиск истинного движения для таких регионов проводится с помощью предсказания с учетом векторов, полученных по обе стороны границы объекта. Эти предсказания затем используются для инициализации векторов, соответствующих региону, содержащему границу. Подобный подход применяется в одном из первых алгоритмов поиска истинного движения трехмерном рекурсивном поиске 3D Recursive Search 3DRS 7. Вторая задача временной интерполяции связана с назначением векторов движения областям на интерполированном кадре. Существует два основных подхода к решению этой задачи однонаправленная 7 и двунаправленная билатеральная 8 оценкакомпенсация движения. В соответствии с однонаправленным подходом один из смежных базовых кадров разбивается на непересекающиеся блоки, и для каждого блока ищется наиболее похожий блок в другом кадре. Вектор движения определяется как расстояние между координатами этих блоков на кадрах. Координаты блока на промежуточном кадре находятся посередине между координатами блоков на базовых кадрах. Интерполяция осуществляется усреднением пикселей, находящихся на совпадающих позициях в блоках, и помещением нового усредненного блока в соответствующую позицию на промежуточном кадре. У такого подхода есть существенный недостаток, поскольку в промежуточном кадре возможно появление регионов, для которых интерполяция с использованием найденных векторов будет неоднозначна области, не ассоциированные ни с одним из найденных векторов так называемые дыры регионы, которые ассоциированы с несколькими найденными векторами так называемые наложения. Двунаправленный подход позволяет избежать этих проблем. В нем основным допущением является допущение о и движения объектов, что позволяет разбивать на блоки не один из оригинальных кадров, а интерполируемый кадр. Для каждой фиксированной позиции блока на интерполируемом кадре выполняется поиск похожих блоков на оригинальных кадрах, при котором векторы смещения коллинеарны, разнонаправлены и откладываются относительно блока в интерполируемом кадре. Этот подход не решает проблемы, возникающие из-за появленияисчезновения наложения объектов на кадрах, но, в отличие от однонаправленного поиска, представляет завершенную процедуру обработки регионов возле этих объектов. Разработанный алгоритм оценки движения использует пару соседних кадров оригинальной видеопоследовательности и для оценки векторного поля, описывающего смещение объектов между этими кадрами. Кадры и будем называть кадрами. Векторное поле используется для интерполяции нового кадра, расположенного во времени между базовыми кадрами. Кадр будем называть, или, кадром. Здесь и далее будем считать, что обрабатываемые кадры являются многокомпонентными или цветными изображениями, представленными одной яркостной компонентой Y и двумя хроматическими компонентами Cb и Cr. Однако следует отметить, что описанная далее методика может быть легко расширена на изображения с произвольным числом компонент. Модель векторного поля для задачи оценки истинного движения может быть введена как результат оптимизации следующей функции при фиксированных кадрах и 9 1 где пространство всех возможных векторных полей и 2 Слагаемое соответствует энергии разностного кадра между кадрами и с использованием векторного поля слагаемое отражает гладкость поля 0 коэффициент регуляризации между энергией разностного кадра и гладкостью векторного поля. Следует отметить, что обычно является обратным значением к гладкости, т. е. меньшее значение соответствует более гладкому полю . Сформулированную оптимизационную задачу можно пояснить следующим образом алгоритм оценки движения должен найти такое гладкое векторное поле, которое минимизирует энергию разностного кадра. Коэффициент служит для балансировки между гладкостью и энергией. В том случае, если значение близко к нулю, оптимальное векторное поле будет доставлять глобальный минимум энергии разностного кадра, но векторы движения при этом могут быть хаотичны. С другой стороны, большое значение приводит к тому, что оптимальное векторное поле может быть чрезмерно сглаженным и не обеспечивать хорошего совпадения базовых кадров. Промежуточные значения соответствуют сбалансированному гладкому векторному полю, обеспечивающему приемлемое совпадение базовых кадров. Предположим, что в пространстве введено отношение соседства. Обозначим через множество соседей в . Говорят, что векторное поле доставляет минимум при фиксированных кадрах и тогда и только тогда, когда для всех выполняется соотношение 3 В том случае, если 3 выполняется для всех, говорят, что векторное поле доставляет минимум . Следует отметить, что существуют алгоритмы, которые позволяют искать минимумы функции 2 в явном виде 10. Так как функция 2 зависит от большого числа параметров и не является унимодальной, найденные минимумы являются, как правило, локальными. Однако следует отметить, что с помощью формулы 2 описывается только движения, и векторные поля, соответствующие локальным и глобальным минимумам этой модели, не обязательно точно отражают истинное движение объектов на кадрах. В частности, модель не учитывает неравномерность движения на границах объектов, где векторное поле обычно не является гладким. Поэтому найденное для данной модели решение не гарантирует оптимального визуального качества интерполяции. В связи с этим более хорошие результаты с точки зрения визуального качества достигаются с использованием подоптимальных алгоритмов, рассматривающих оптимизацию 1 неявно. Такие алгоритмы, как правило, с одной стороны, основаны на эвристических подходах, нацеленных на повышение визуального качества интерполированных кадров, а с другой стороны, неявно косвенно минимизируют 2, т. е. выдают результат, согласованный с моделью истинного движения. Разработанный алгоритм оценки движения принадлежит именно к такому классу алгоритмов. Процедура поиска оптимального вектора движения, лежащая в основе всех методов оценки движения, также может быть реализована с использованием либо полного перебора всех возможных векторов оптимальный поиск, либо некоторого подоптимального алгоритма. Полный перебор оптимален в том смысле, что он гарантирует минимум ошибки в 2. В ряде работ 11 указывается, что полный перебор плохо согласуется с поиском истинного движения, особенно на текстурных регионах. Кроме того, процедура полного перебора всех векторов обладает высокой вычислительной сложностью. В связи с этим поиск оптимального вектора в задаче оценки истинного движения, как правило, осуществляется с использованием подоптимальных методов, например, градиентного спуска. В основе разработанного алгоритма оценки движения рис. 2 лежит многоуровневая иерархическая билатеральная процедура блоковой оценки движения с дополнительным итеративным поиском. На каждом уровне иерархии для фиксированного размера блока выполняются три операции 1 инициализация уровня иерархии для подготовки кадров к оценке движения 2 начальная оценка движения, используемая для поиска предварительного векторного поля, доставляющего локальный минимум в 2 3 итеративный дополнительный поиск, повышающий гладкость векторного поля уменьшение в 2. На каждом уровне иерархии выполняется оценка движения для блоков фиксированного размера. Здесь и далее будем называть процесс обработки одного уровня . Выходом стадии является векторное поле, доставляющее локальный минимум 2. Полученные векторы движения используются в качестве начального смещения на следующей стадии. Иерархическая оценка реализована с использованием многосеточного подхода размер блока уменьшается с номером стадии 12. Идея такого подхода заключается в том, что сначала выполняется поиск движения для больших областей на базовых кадрах, затем полученные векторы уточняются для все меньших и меньших регионов. Такой метод позволяет осуществлять поиск локального смещения объектов с учетом глобального движения в кадре. Начальная оценка движения является первой процедурой поиска векторов на стадии, при этом все блоки обрабатываются независимо друг от друга. После завершения начальной оценки каждому блоку на промежуточном кадре поставлен в соответствие вектор движения, минимизирующий ошибку блоков block matching при градиентном спуске. Затем применяется дополнительный поиск для повышения гладкости полученного векторного поля. Процедура дополнительного поиска реализована как итеративный процесс, основанный на с учетом надежности векторов. Вектор считается надежным, если соответствующая ему билатеральная ошибка сопоставления мала маленькое значение слагаемого и его значение коррелировано со значениями соседей маленькое значение слагаемого, т. е. вектор согласован с моделью истинного движения. Процесс предсказания оперирует с надежными векторами из множества соседей текущего блока на данном уровне иерархии и с надежными векторами на предыдущих уровнях иерархии. Эти векторы формируют множество кандидатов для интерполяции текущего блока. Кандидаты используются для инициализации градиентного спуска при поиске оптимального вектора для текущего блока. Следует отметить, что подобная процедура должна быть повторена несколько раз для того, чтобы исправить все ненадежные векторы. Таким образом, итеративность дополнительного поиска позволяет распространить влияние надежных векторов в векторном поле. Суммарное значение в 2 уменьшается по двум причинам кандидаты для инициализации градиентного спуска берутся из гладкого множества надежных векторов соседних блоков вектор для текущего блока замещается на результат градиентного спуска только в том случае, если ошибка сопоставления, полученная после поиска оптимального вектора с использованием векторов из множества кандидатов, не превышает начальную ошибку сопоставления. Следует отметить, что начальная оценка движения на следующей стадии может привести к увеличению слагаемого в 2. Как правило, это не влияет на стабильность векторного поля в том случае, когда оценка движения выполняется для больших блоков, так как они соответствуют смещению больших объектов на кадрах. Однако при оценке движения маленькими блоками данный эффект может привести к существенному увеличению шума в векторном поле, который, возможно, не удастся сгладить при дополнительном поиске. Для обработки таких ситуаций разработанный алгоритм оценки движения добавляет, как и в работе 7, при сравнении блоков. Пенальти это константное слагаемое, добавляемое к ошибке сопоставления блоков для векторов, отклоняющихся от предсказанного значения. Значение пенальти инициализируется небольшим значением и растет с увеличением номера стадии, что позволяет избежать существенных отклонений от предсказанных значений векторов при оценке движения малыми блоками. В следующих разделах приведено полное формальное описание разработанного алгоритма оценки движения. Каждый уровень иерархии инициализируется перед выполнением оценки движения. Для упрощения обозначений будем полагать, что выполняются соотношения где и ширина и высота кадров видеопоследовательности соответственно индекс максимального уровня иерархии. При инициализации уровня иерархии выполняются следующие операции подготовка сетки блоков на промежуточном кадре расширение базовых кадров. Подготовка сетки блоков заключается в разбиении множества координат пикселей промежуточного кадра на подмножества непересекающихся блоков фиксированного размера. Для упрощения изложения будем считать, что используются квадратные блоки, и размер блока на уровне с номером определяется как 2 2 . Назовем множество координат пикселей на кадре сеткой пикселей. Формально сетку пикселей можно определить как где Y 1, 2, X 1, 2, . Значение пикселя в координате, на кадре задается как триплет, . Определим сетку блоков на уровне как где I 1, 2, J 1, 2, 2, 2 высота и ширина сетки блоков соответственно. Отметим, что для 0 сетка блоков совпадает с сеткой пикселей. Множество координат пикселей, находящихся в блоке с индексом, на уровне, определим как где Y 12 1, 2 X 12 1, 2 . Следует отметить, что описанная процедура сопоставления координат пикселей блокам уменьшает размер блока число пикселей, входящих в блок с ростом номера уровня иерархии. При этом каждый блок разбивается на четыре блока меньшего размера на следующем уровне. Индексы блоков, включающих одни и те же координаты пикселей на смежных уровнях иерархии, рассчитываются по формуле Множество координат блоков на вышележащих уровнях для блока вычисляется по формуле Приведенные соотношения завершают описание процедуры подготовки сетки блоков на промежуточном кадре. Вторая процедура инициализации уровня иерархии применяется только к базовым кадрам. Она заключается в расширении этих кадров за счет добавления дополнительных столбцов и строк к верхней, нижней, левой и правой границам кадра, параметр алгоритма. Это делается для улучшения поиска на краях изображений. Проведенные эксперименты показывают, что в среднем лучшие результаты достигаются с использованием 4. Расширение кадров осуществляется размножением пикселей с соответствующей границы кадра. Обозначим множество координат пикселей в расширенном базовом кадре на уровне через P . Задача начальной оценки движения заключается в поиске билатерального вектора движения для каждого блока на промежуточном кадре. Все блоки на данном этапе обрабатываются независимо друг от друга. В качестве процедуры поиска вектора движения в разработанном алгоритме используется градиентный спуск с пенальти, который можно формально описать как последовательность следующих шагов обновлений где через 1, 2, обозначен номер шага вектор движения для блока номер текущего уровня иерархии вектор-кандидат множество векторов-кандидатов, определенное как где U векторы обновления, Начальный вектор для градиентного спуска определяется как где вектор с предыдущего уровня иерархии для первого уровня используется нулевое смещение. Функция, описывает ошибку сопоставления блока. В данной работе в качестве этой функции предлагается использовать следующий функционал, основанный на сумме абсолютных разностей Sum of Absolute Differences где параметр алгоритма, используемый для добавления пенальти к ошибке сопоставления для векторов, отличающихся от предсказанного значения Здесь через, обозначено скалярное произведение векторов и Значение коэффициента 1,2,2 13. Градиентный спуск выполняется для каждого блока в сетке независимо. Поиск оптимального вектора для блока заканчивается тогда, когда либо достигается максимальное количество шагов, либо вектор движения, рассчитанный на текущем шаге, совпадает с результатом предыдущего шага, формально Обозначим описанную процедуру градиентного спуска для блока, находящегося в сетке блоков на позиции через Выходом является вектор движения оптимальный для критерия ошибки сопоставления блока Для упрощения обозначений далее будем сокращать как а до Результатом процедуры начальной оценки движения являются векторное поле и множество ошибок сопоставления блоков I, J . Дополнительный поиск реализован как последовательная итеративная процедура, на каждой итерации которой осуществляются следующие действия 1 расчет надежностей векторов движения 2 дополнительная оценка движения 3 анализ критериев завершения дополнительного поиска. На каждой итерации вычисляется уточненная версия векторного поля с предыдущей итерации или поля с начальной оценки движения, если итерация первая. Расчет надежностей векторов движения используется для сопоставления каждого вектора с некоторой меткой класса, показывающей качество вектора относительно его ошибки сопоставления и локальной гладкости векторного поля. В разработанном алгоритме используются метки классов 0, 1, 2 и 3, где класс 3 соответствует наиболее надежному вектору. Метод расчета надежностей основан на подходе, описанном в работе 14, единственное отличие заключается в том, что в разработанном алгоритме предлагается всегда использовать метку класса 0 для блоков, находящихся на границе кадра. Таким образом, расчет метки надежности для вектора осуществляется по следующему правилу где являются характеристиками локальной гладкости векторного поля и рассчитываются в соответствии с работой 14. Дополнительная оценка движения выполняется для каждого блока на промежуточном кадре. Для блока строится множество векторов-кандидатов где множество блоков, соседних с блоком Здесь некоторый заранее заданный порог, определяющий размер множества соседних блоков. В данной работе используется значение Множество включает надежные векторы из множества соседей блока на уровне, а также надежные векторы, соответствующие данному блоку, на предыдущих уровнях иерархии. Затем для блока выполняется процедура градиентного спуска с использованием векторов из в качестве начальных смещений. Вектор с минимальной ошибкой сопоставления выбирается в качестве оптимального для Если есть несколько векторов, дающих одинаковое значение минимума при градиентном спуске, решение принимается на основе анализа локальной гладкости вектор, обеспечивающий наиболее гладкое поле, выбирается как оптимальный. После выбора вектора происходит обновление надежности для блока Расчет надежностей и дополнительный поиск повторяются несколько раз до тех пор, пока либо не будет достигнуто максимальное число итераций, либо векторное поле не будет сильно изменяться между итерациями где индикаторная функция, определенная как Результатом дополнительного поиска является уточненное векторное поле, которое используется для инициализации векторов движения на следующем уровне иерархии. Для оценки эффективности разработанного алгоритма был проведен ряд экспериментов по интерполяции кадров в реальных видеопоследовательностях для задачи увеличения кадровой скорости в 2 раза. В качестве тестового множества был взят стандартный набор последовательностей 15. Для выполнения экспериментов все последовательности были предварительно прорежены в 2 раза за счет удаления кадров с четными номерами. Затем удаленные кадры были восстановлены с использованием алгоритмов преобразования кадровой скорости. В работе были рассмотрены следующие алгоритмы метод, разработанный в Московском государственном университете MSU 16 метод, используемый в проекте Smooth Video Project SVP 17 алгоритм временной интерполяции кадров Nguyen, описанный в работе 13 метод, основанный на предложенной процедуре оценки движения PROP. В качестве метода компенсации движения в алгоритме используется компенсация движения с перекрытиями блоков Overlapped Block Motion Compensation 18. Сравнение алгоритмов проводилось по критерию среднего отношения сигнал-шум Peak Signalto-Noise Ratio для компоненты Y Y-PSNR. Для всех сравниваемых алгоритмов были выставлены параметры, соответствующие максимальному качеству интерполяции. Визуальное сравнение приведено на рис. 3. Объективное сравнение алгоритмов по критерию среднего Y-PSNR приведено в таблице. Расчет Y-PSNR выполнялся дважды для каждой последовательности для кадра целиком и для области кадра с некоторым сдвигом от границ. Такой метод расчета связан с тем, что предложенный алгоритм, в отличие от методов SVP и MSU, не использует никакой дополнительной обработки на краях кадров. В связи с этим ошибка предложенного алгоритма в этих регионах существенно превышает ошибку остальных алгоритмов. Использование отступа позволяет провести оценку в тех регионах, где алгоритмы находятся в одинаковых условиях. Видно, что предложенный алгоритм, основанный на простых процедурах оценки и компенсации движения, показывает результаты, сравнимые с результатами сложных алгоритмов интерполяции кадров, а при обработке некраевых блоков даже превосходит эти алгоритмы кроме последовательностей со сложными текстурными регионами Bus, Mobile. В статье описан итеративный алгоритм иерархической оценки движения для систем временной интерполяции кадров в видеопоследовательностях. Представлены результаты сравнительного анализа ряда известных алгоритмов интерполяции и простой схемы, использующей предложенный подход. Показано, что разработанный метод оценки движения обеспечивает высокое качество интерполяции промежуточных кадров, сравнимое с результатами более сложных подходов. Предложенный метод поиска движения может быть использован в ряде прикладных задач, например, в устройствах преобразования кадровой скорости, системах распределенного кодирования видеоисточников, алгоритмах сжатия и передачи видеоданных. Работа выполнена при финансовой поддержке Минобрнауки России в рамках базовой части государственного задания вузу на 2014 год проект 2452. 