ОПТИМАЛЬНОЕ УПРАВЛЕНИЕ ОЧЕРЕДЬЮ  В СИСТЕМЕ МАССОВОГО ОБСЛУЖИВАНИЯ  С ОГРАНИЧЕННОЙ ПРОИЗВОДИТЕЛЬНОСТЬЮ 

для систем массового обслуживания с бесконечным числом приборов отсутствует детальное исследование аналогов пороговому характеру оптимальных дисциплин обслуживания, установленных для систем массового обслуживания с конечным числом неоднородных приборов. В то же время модели систем с бесконечным числом приборов дают удовлетворительное описание вычислительных узлов с многопоточностью. Целью работы является выявление порогового характера оптимальной дисциплины управления системами с бесконечным числом приборов переменной производительности, зависящей от числа требований в системе. Методы: для описания процесса обслуживания применяются методы процессов с дискретным временем и счетным числом состояний. При описании выходящего потока используется авторегрессионная схема. Результаты: в приближении процессов с дискретным временем выведены уравнения авторегрессии и скользящего среднего для описания входящего и выходящего потоков процесса обслуживания. При этом предполагается, что порядок окончания выполнения требований совпадает с порядком их поступления на выполнение. Для проверки гипотезы о существовании оптимальной дисциплины управления очередью проводятся имитационные эксперименты. При проведении экспериментов интенсивность входящего потока принимала значения как меньше, так и больше производительности системы при выполнении только одного требования. Имитационные эксперименты показали зависимость среднего времени пребывания требования в системе от разрешенной величины очереди и интенсивности входящего потока. Таким образом, принцип повышения производительности заключается в том, что при заданной интенсивности потока требований однозначно определяется нижняя граница для величины очереди, начиная с которой производительность системы не растет. Практическая значимость:  предложенные математическая и имитационная модели можно применять для изучения однои многофазных систем с различным распределением времени выполнения требований и различными законами падения производительности.

Модели однопроцессорных систем с распределением процессорного времени по задачам изучаются с 70-х годов прошлого столетия 1, 2. Задачи исследования времени отклика, времени выполнения операций решаются в рамках систем массового обслуживания СМО 1, которые обобщают системы 1 на уровне дисциплины обслуживания заявок тем, что предусмотрены циклы, охватывающие буфер с очередью задач и центральный процессор. Таким образом, для обработки заявки выделяется системное время, по окончании которого заявка переходит в режим ожидания, пока обрабатываются другие заявки. В работах 3, 4 изучены такие характеристики качества СМО 1 как среднее время ожидания и среднее время выполнения. Кроме того, математические модели таких задач близки к моделям задач управления транспортными потоками 5. Модели управляемых случайных процессов и цепей находят применение при решении ряда других вопросов, связанных с организацией работы вычислительных средств, например, обработки информации, оптимального обмена данными. Модели типа 1 и, в том числе с учетом простоев приборов, изучены в работах 611, где рассматривается как детерминированный, так и стохастический процесс прерываний. Другой цикл работ 12, 13 посвящен исследованию систем типа, в том числе с внешним марковским управлением, которые моделируют широкий класс систем от телекоммуникационных до биологических. Однако довольно мало исследований в рамках моделей управляемых марковских систем или управляемых СМО для систем 1, т. е. проблема оптимального управления для систем класса является актуальной. Задача оптимального управления СМО с 2 неоднородными приборами при различных предположениях относительно входного потока требований пуассоновского, рекуррентного, марковского и распределений длительностей их обслуживания показательных, эрланговских или фазового типа подробно изучена в работах 1416. Показано 14, что оптимальная дисциплина обслуживания требований в системе с приборами фиксированной суммарной производительностью с ожиданием и конечной очередью по критерию минимизации среднего числа требований в системе имеет пороговый характер. Суть дисциплины обслуживания порогового типа заключается в том, что относительно критерия среднее время пребывания требования в системе оптимальная дисциплина определяет для каждого состояния системы, где длина очереди 1, если -й прибор включен, и 0, если -й прибор выключен, значение порога длины очереди, начиная с которого, длина очереди в состоянии включается прибор с наибольшей производительностью из оставшихся выключенных приборов. Значение порога включения -го прибора определяется соотношением При этом система описывается управляемыми случайными процессами для функции потерь в задаче оптимизации используется уравнение Беллмана. В работе 17 вычислены различные характеристики производительности СМО с неоднородными приборами при различных дисциплинах занятия приборов. В то время как описанные выше многолинейные СМО являются адекватной моделью работы узла сети передачи данных, модель вычислительного узла слабо проработана в рамках теории управляемых СМО. В настоящей работе проводится исследование типа оптимального управления системой в предположении, что производительность системы по выполняемому требованию зависит от числа уже выполняемых требований в системе. Для системы строится стохастическая модель процесса в дискретном времени как приближение к однородным управляемым марковским процессам с непрерывным временем, конечными пространствами состояний и управлений и аддитивным функционалом потерь. При этом используется модель авторегрессии и скользящего среднего 18. Приближение дискретного времени позволяет сформулировать основные уравнения системы и проанализировать пространства решений, а также использовать имитационное моделирование для исследования поведения системы. Возможность построения моделей СМО в приближении непрерывного или дискретного времени подробно обсуждается в работе 19. Будем считать, что поведение системы описывается случайным процессом. На вход в систему подается однородный поток требований с интенсивностью . В системе предусмотрена очередь ограниченной длины . Дисциплина обслуживания требования из очереди принимаются на выполнение в том случае, если система свободна или очередь полностью заполнена в момент поступления нового требования в систему. Величины, параметры управления накладные расходы на содержание очереди длины в системе производительность системы количество требований, обрабатываемых в единицу времени при условии, что в системе обрабатывается требований, требования начали обрабатываться в один и тот же момент времени и время выполнения требования распределено по показательному закону. Пусть имеет вид при 1, не зависит от числа требований в очереди и не является случайной величиной при фиксированном значении . Введем для дальнейшего изложения обозначение 1 . Входящий поток опишем процессом восстановления, а именно введем случайную величину, где есть время поступления -го требования в систему величина случайная, зависящая от времени независимые одинаково распределенные экспоненциально величины. Введем случайную величину время окончания выполнения -го требования. Введем предположения 1 порядок окончания выполнения требований совпадает с порядком их поступления в систему 2 величина не является случайной величиной при фиксированном значении . Пусть момент поступления -го требования из очереди на выполнение. Выражение определяет для -го требования, поступившего в момент времени, момент времени его выполнения . Производительность системы случайный скачкообразный процесс с разрывами в точках и такой, что, где случайная величина число обрабатываемых требований в системе. Таким образом, время выполнения -го требования зависит от случайных моментов времени поступления входящих требований в процессе его выполнения и моментов времени окончания выполнения требований в интервале времени выполнения -го требования. При этом наличие очереди не предполагается. В случае если верно предположение 1, момент времени окончания выполнения -го требования будем определять из уравнения 1 Уравнение 1 можно переписать в терминах случайных величин и следующим образом 2 где 1 падение производительности при поступлении требования в систему возрастание производительности при окончании выполнения требования. В том случае если допускается при, то уравнение 1 перепишется в виде 3 где число выполненных требований к моменту времени . При этом выражение 2 заменится на выражение 4 где . Если предположить случайный характер времени обслуживания в расчете на одно требование, то выражения 2, 4 преобразуются к виду 5 Для оценки статистических характеристик случайной последовательности, определяемой выражением 2, требуется это выражение преобразовать к модели авторегрессии и скользящего среднего с белым шумом и дать статистическую оценку математического ожидания, среднеквадратичного отклонения и функции ковариации. При этом аналитическая постановка задачи фильтрации, описывающей преобразование входящего потока в выходящий поток, затруднена. В настоящей работе задача расчета величины очереди рассматривается в среде имитационного моделирования AnyLogic Professional 6.4.1, т. е. воспроизводится процесс преобразования входящего потока в выходящий поток и подбирается оптимальное значение очереди, минимизирующее среднее время пребывания требования в системе. Для проведения экспериментов, подтверждения адекватности построенной модели и полученных результатов были приняты следующие параметры модели и их значения 1 интенсивность потока требований задач требования lambda от 0,04 до 0,06 с шагом 0,01 2 кортеж требований lvalue от 1500 до 2500 с шагом 500 ограничивает количество поступаемых требований в систему 3 вместимость очереди nqueue от 1 до 50 с шагом 1 ограничивает максимальное количество требований, находящихся в очереди 4 закон падения производительности table1. Значения зависимости количества одновременно обслуживаемых требований от времени их выполнения задаются в табличной форме, после чего производится экстраполяция. Исходные значения нами были получены с помощью эксперимента производился запуск архивации файла и замер времени выполнения этой операции. Затем эксперимент проводился для двух файлов одинакового объема одновременно. Далее количество файлов на параллельную архивацию увеличивали. Реализованы параметрические статистические оптимизационные эксперименты. Проводилось усреднение по серии более 100 экспериментов для каждого набора параметров. Вычислялось минимальное значение очереди по критерию минимального среднего времени обслуживания требований в системе с учетом пребывания требований в очереди. Данная система рис. 1 построена на стандартных элементах и классах библиотеки Enterprise Library пакета имитационного моделирования AnyLogic Professional 6.4.1. Для моделирования объекта взят стандартный класс Entity, который модифицирован добавлением уникального идентификатора заявки и начального времени обслуживания заявки. Поток заявок является пуассоновским, table1.get0 задает время обслуживания заявки для одной выполняемой заявки в системе. Объект направляет входящие требования в один из двух выходных портов в зависимости от выполнения заданного условия. Поступившее требование покидает объект SelectOutput в тот же момент времени и поступает в очередь queue при условии, что в данный момент времени существует нагрузка на систему resourcePool.busy и очередь не заполнена queue.canEnter. Если же очередь заполнена, то первое стоящее в очереди требование поступает на обработку Enter1.take, а текущее требование становится в очередь. В противном случае, если система не нагружена, требование отправляется на обслуживание seize. Объект моделирует очередь требований. Вместимость данного объекта задается параметром nqueue. Требования покидают объект только путем вызова функции removeFirst. технический элемент модели, служащий для маршрутизации требований из очереди queue на обслуживание с помощью функции take. задает набор ресурсов, которые могут захватываться и освобождаться требованиями с помощью объектов, . В данной модели используется моделирование ресурса как числа а не отдельного объекта, что позволяет получать с помощью метода resourcePool.busy текущее количество одновременно обслуживаемых требований в каждый дискретный момент времени. Попадая на обслуживание в объект, очередное требование захватывает с собой ресурс и освобождает его только после обслуживания. Реализация данного элемента позволяет моделировать многопоточность обслуживания требования и перерасчет времени обслуживания для каждого требования. захватывает для требования заданное количество ресурсов определенного типа. При захвате ресурса требование мгновенно покидает этот объект. Для моделирования процесса эффекта падения производительности при увеличении количества одновременно выполняемых требований был реализован следующий алгоритм при выходе требования из объекта 1. Изымаются все требования, находящиеся на обслуживании в данный момент, со значением времени, необходимым до конца обслуживания work.getRemainingTime. 2. Время обслуживания каждого требования delay пересчитывается с учетом коэффициента падения производительности. 3. Рассчитывается время обслуживания текущего требования из расчета текущей производительности системы. 4. Все требования отправляются на обработку одновременно enter с заново рассчитанными параметрами. технический объект модели, служит либо для поступления требований с пересчитанными параметрами времени обслуживания, изъятых в момент поступления, либо для выхода требования из обслуживания. Элемент построен на основе стандартного элемента Delay. Задерживает требование на заданный период времени, тем самым моделируя время обслуживания требования. Данное время задается параметром требования delay. При этом данный объект позволяет задерживать множество требований одновременно. Ограничения по вместимости нет. Объект освобождает после обслуживания требования захваченное им количество ресурсов, тем самым изменяется производительность системы. Соответственно, необходим пересчет времени обслуживания требований, находящихся в текущий момент на обслуживании. Рассматриваемый процесс был реализован с помощью следующего алгоритма 1. Изымаются все требования, находящиеся на обслуживании в данный момент, со значением времени, необходимым до конца обслуживания work.getRemainingTime. 2. Время обслуживания каждого требования delay пересчитывается с учетом коэффициента падения производительности. 3. Все требования отправляются на обработку одновременно enter с заново рассчитанными параметрами. 4. Если система является не нагруженной resourcePool.busy0 и существуют требования в очереди на обслуживание queue.size0, то очередное требование из очереди отправляется на обслуживание. Объект служит для учета времени окончания обслуживания требования. Результаты проведенных экспериментов, представленных на рис. 2, позволяют высказать гипотезу о существовании для значений 1 величины очереди емкости буфера, минимизирующей функцию критерия среднее время пребывания требования в системе. Дисперсия случайной величины также минимизируется, начиная с порогового значения очереди . Предложенная модель позволяет использовать в качестве управляющего параметра длину очереди требований, ожидающих обработку, в зависимости от интенсивности потока заявок и закона падения производительности. Дальнейшее исследование, для системы необходимо проводить для значений 1, проводить расчет среднего времени пребывания требования в очереди, вводить функцию потерь, учитывающую затраты на содержание очереди. 