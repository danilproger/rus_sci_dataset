УПРАВЛЕНИЕ   В СОЦИАЛЬНО-ЭКОНОМИЧЕСКИХ СИСТЕМАХ УПРАВЛЕНИЕ ИНТЕГРАЦИЕЙ   ИННОВАЦИОННЫХ ПРОЕКТОВ В ПРЕДМЕТНУЮ ОБЛАСТЬ 

Предложены модель и алгоритм решения задачи оптимизации многомерных параметрических рядов в интересах рациональной интеграции инновационных проектов в предметную область.

Любой инновационный проект создается и реализуется в интересах удовлетворения некоторого спектра характерных для соответствующей предметной области его использования потребностей. Поскольку все они, как правило, не могут быть полностью обеспечены каким-либо одним вариантом инновационного продукта, рациональная интеграция инновационных проектов в предметную область путем формирования соответствующих параметрических рядов инновационных продуктов изделий становится актуальной задачей инновационного менеджмента. Сложность современных инновационных проектов и разнообразие предъявляемых к ним требований приводят к тому, что проблемы формирования таких рядов в процессе инновационного развития становятся весьма непростыми. Попытки решить их на основе предыдущего опыта и интуиции часто приводят к грубым ошибкам, что в условиях высокой стоимости и большой длительности разработки и производства инноваций недопустимо. Поэтому решение указанных проблем должно опираться также и на объективные научные обоснования. Инструментом для таких обоснований могут быть соответствующие математические модели. В настоящей работе предложены модель и алгоритм решения задачи оптимизации многомерных параметрических рядов в интересах рациональной интеграции инновационных проектов в предметную область. Сущность задачи состоит в следующем. Задано множество 1, 2, видов потребностей. Каждый вид потребности определяется совокупностью многих характеристик показателей, параметров. Имеется также множество 1, 2, изделий, способных совместно обеспечить все виды потребностей. Каждому -му изделию также соответствует набор значений параметров, характеризующих его эксплуатационные, технические, эргономические и другие свойства. Так как каждый набор значений параметров соответствует изделию с определенным номером, далее будем считать, что тип изделия полностью определяется своим порядковым номером. Необходимо из множества допустимых типов изделий выбрать такое подмножество оптимальный ряд изделий, которое полностью обеспечит множество видов потребностей с минимальными затратами. Варианты математической формализации этой задачи зависят от многих факторов. В частности, их вид определяется структурой областей применения изделий, т. е. свойствами потребностей обладают ли они свойством связности или нет, выбором критерия оптимизации ряда, учетом дополнительных ограничений, неопределенностью спроса и т. п. 1. В данной работе мы рассмотрим формализацию указанной задачи в следующем виде. Требуется определить 1 при ограничениях 2 3 4 5 где постоянные затраты на разработку и применение изделий -го типа начальные затраты затраты, связанные с обеспечением потребностей го вида изделиями -го типа число изделий -го типа, необходимых для обеспечения единицы потребностей -го вида затраты на производство и эксплуатацию одного изделия -го типа величина потребностей -го вида количество типов изделий, которые могут быть включены в оптимальный ряд . Взаимосвязь элементов множеств и задается с помощью матрицы применений, в которой 1, еcли изделие -го типа может обеспечивать -й вид потребности, и 0 в противном случае. Причем полагаем, что, если 0. Управляющие переменные принимают значения Ограничения 2 означают, что все потребности множества должны быть обеспечены. Из выражения 3 следует, что для обеспечения потребностей -го вида можно назначать изделия только тех типов, для которых 1. Соотношения 15 формализуют рассматриваемую задачу в виде модели дискретной многомерной задачи стандартизации при детерминированном спросе 2. Рассмотрим алгоритм решения задачи 1 5, представляющий собой процесс направленного перебора с возвращениями. В основу этого процесса положена принципиальная схема метода ветвей и границ. При этом в предлагаемом алгоритме построение дерева возможных вариантов осуществляется в соответствии с односторонней схемой ветвления 2. Для оценки нижней границы решения в процессе ветвления используется задача линейного программирования, двойственная по отношению к задаче 15, в которой условие целочисленности 4 заменяется условием 6 Проверка допустимого решения задачи 1 5 на оптимальность осуществляется решением оценочной двойственной задачи. Для описания алгоритма введем следующие обозначения 0 множество индексов управляющих переменных, вошедших в ветвь дерева вариантов со значением, равным нулю такие переменные будем обозначать через 1 множество индексов управляющих переменных, вошедших в ветвь дерева вариантов со значением, равным единице множество индексов управляющих переменных, вошедших в ветвь дерева вариантов множество индексов управляющих переменных, из которых выбирается индекс переменной для включения в множество при условии или множество индексов управляющих переменных, соответствующих допустимому решению задачи 15 индекс управляющей переменной, включение которого в множество предпочтительнее по сравнению с другими индексами из множества индекс управляющей переменной, который целесообразно включить в множество . Значения заменяем величинами, равными Двойственную задачу линейного программирования по отношению к релаксированной задаче 13, 6 можно записать следующим образом 7 при ограничениях 8 9 10 где переменные двойственной задачи. Теоретически задачу 710, введя дополнительные переменные можно представить в виде основной задачи линейного программирования, исходное базисное решение которой имеет вид Полученную таким образом задачу можно решить симплексным методом. Однако практика показала, что даже небольшие задачи оптимизации многомерных параметрических рядов требуют решения задач линейного программирования большой размерности. Их опорные планы сильно вырождены, а установление оптимальности в некоторых случаях связано с большим числом симплексных итераций. Действительно, количество переменных и число уравнений ограничений задачи линейного программирования связано с размерностью исходной задачи соотношениями 2, 1. Для решения задачи линейного программирования такой размерности требуется обычно от 1 до 3 1 итераций. Учитывая, что оценка нижней границы производится многократно, такой способ решения является нерациональным. Кроме того, нецелесообразно искать и точное решение задачи 710, так как оно позволяет получить точное решение не исходной целочисленной задачи 1 5, а лишь непрерывной релаксированной задачи 13, 6. Поэтому дальнейшее развитие рассматриваемого направления идет по пути построения приближенных методов решения двойственной задачи 3 и упрощения тем самым способов оценки нижней границы исходной целочисленной задачи. Алгоритмы, использующие для оценки двойственную задачу, различаются способами определения приближенного решения задачи 710. Наиболее простым является способ расчета, основанный на следующих соотношениях При этом достаточно простая структура задачи 710 позволяет получить приближенное решение, совпадающее с оптимальным или достаточно близкое к нему. Вычислительные эксперименты на ЭВМ показали, что особенностью задачи 15 является довольно частое совпадение оптимального целочисленного решения с непрерывным. Поэтому обычно приближенно решают двойственную задачу, а от нее переходят к соответствующему решению непрерывной задачи 13, 6. При совпадении целочисленного и непрерывного решений полученный результат является оптимальным, в противном случае переходят к обычному алгоритму ветвей и границ. Однако переход от приближенного решения двойственной задачи к соответствующему приближенному решению задачи 15 является достаточно сложным и не всегда однозначным. Значительно более простым является способ, когда вначале определяется достаточно точное решение задачи 15, а по этому решению определяется решение двойственной задачи. Совпадение решений свидетельствует об оптимальности целочисленного решения. В дальнейшем этот способ мы будем называть направленным, так как он использует решение целочисленной задачи в оцениваемой вершине. Рассмотрим направленный способ решения двойственной задачи 710 более подробно. Упростим структуру задачи 710, для этого исключим переменные, входящие лишь в ограничения. Действительно, при любом допустимом выборе переменных переменные можно положить равными максимальной из величин 0 и . C учетом этого двойственную задачу 710 запишем в виде 11 при ограничениях 12 Сущность направленного решения двойственной задачи 11, 12 заключается в следующем. Учитывая ее более простую структуру и возможность использовать приближенное решение для оценки нижней границы на различных этапах ветвления, предлагаем следующий способ формирования значений переменных, доставляющих целевой функции 11 по возможности большее значение. Процесс начинается с допустимого решения задачи 11, 12 и состоит в многократном последовательном просмотре -х столбцов 1, 2, ..., матрицы в целях проверки возможности увеличения до ближайшей большей величины При этом в каждом цикле просмотра проверяется возможность увеличения для тех столбцов, в которых находится наименьшее количество элементов, удовлетворяющих условию . Увеличение значений переменных происходит с учетом 12 и ограничено величинами . 13 Оценка, получаемая с помощью данного способа, определяется элементами множеств, и, когда дальнейшее увеличение переменных становится невозможным, вычисляется по формуле 14 В ходе экспериментов со случайными матрицами выявлено довольно частое до 90 совпадение оптимального целочисленного решения задачи 15 с решением, которое определялось с помощью двойственной задачи 11, 12. Учет этой особенности в сочетании с достаточно простым способом нахождения решения двойственной задачи позволил значительно сократить время поиска оптимального решения задачи 15. Выигрыш во времени достигается за счет доказательства оптимальности одного из допустимых решений задачи 15, полученных на первых шагах работы алгоритма. Эффективность применения данного способа и точность полученного с его помощью результата в значительной степени определяются точностью используемого одновременно проверяемого на оптимальность целочисленного решения. Если для оценки нижней границы целевой функции путем направленного решения двойственной задачи 11, 12 используются ограничения 13, то при проверке допустимого решения на оптимальность вместо 13 требуется выполнение неравенств 15 Процесс проверки допустимого решения задачи 15 на оптимальность начинается с допустимого решения задачи 11, 12. Необходимость неравенств 15 следует из соотношений определяющих оптимальность полученных решений для непрерывной и целочисленной задач. Знак указывает на оптимальность решений соответствующих задач. При выполнении ограничения 15 совпадение величины 16 полученной в результате решения двойственной задачи 11, 12, со значением целевой функции задачи 15, соответствующей проверяемому целочисленному решению 17 указывает на оптимальность найденного целочисленного решения, т. е. В случае несовпадения значений целевых функций поиск оптимального решения задачи 15 продолжается методом ветвей и границ. Поиск первого допустимого решения и дальнейшее ветвление осуществляется с помощью показателей вида 18 Таким образом, общая схема алгоритма решения задачи 15 включает следующие основные этапы 1 определение допустимого решения, исходной задачи 2 проверка допустимого решения на оптимальность путем решения двойственной задачи 3 уточнение, в случае необходимости, допустимого решения методом ветвей и границ и проверка его на оптимальность. Вычислительный процесс заканчивается при выполнении одного из условий доказана оптимальность допустимого решения с помощью решения двойственной задачи просмотрены все перспективные ветви дерева вариантов. Перед началом решения задачи полагаем 0, 1, 2, . Ha каждом шаге вычислительного процесса определяются показатели, характеризующие целесообразность включения переменных в формируемое допустимое решение задачи 15. Если среди показателей 18 имеются 0, то принимаем соответствующие им переменные равными нулю, так как включение их в допустимое решение не приведет к его улучшению. Индексы, 0 выводим из множества и включаем в множество . Кроме того, из множества исключается и в множество вводится индекс, для которого 19 так как переменная может привести к улучшению решения. Последним шагом алгоритма, заканчивающим формирование допустимого решения, является шаг, на котором 0. Значение целевой функции, соответствующее найденному допустимому целочисленному решению, определяется согласно 17. Если проверка с помощью решения двойственной задачи не подтверждает оптимальности допустимого решения, то его уточняем методом ветвей и границ. Схема ветвления односторонняя, использующая правило последний вошел первый выходит, т. е. для ветвления выбирается висячая вершина, образованная последней. В основу дерева вариантов принимается ветвь, полученная на первом этапе, дальнейшее ветвление производится с помощью показателей, как и при поиске первого допустимого решения. Отсечение бесперспективных ветвей осуществляется сравнением оценки 14, полученной в результате решения двойственной задачи 1112 с учетом ограничения 13, со значением целевой функции 17, соответствующей наилучшему из уже найденных допустимых решений. Поэтому здесь важно с самого начала получить значение целевой функции задачи 15, близким к оптимальному. Следовательно, способ получения допустимого решения должен быть достаточно эффективным. Одной из основных сложностей, связанных с решением задач оптимизации многомерных параметрических рядов, является их большая размерность. В некоторых случаях размерность задачи можно уменьшить на этапе предварительного анализа исходных данных. Сущность одного из возможных способов заключается в определении с помощью специальных показателей тех изделий, которые обязательно следует включить в оптимальный ряд. Поиск таких изделий осуществляется без решения исходной оптимизационной задачи с помощью показателей 20 характеризующих увеличение затрат на обеспечение заданных потребностей в изделиях, если принять 0. Поэтому при условии 0 необходимо включить -й тип изделия в приняв 1. В целом предложенный подход к математической формализации задачи формирования параметрических рядов и алгоритм ее решения позволяют обеспечить рациональную интеграцию инновационных проектов в предметную область их использования и могут найти широкое применение в инновационном менеджменте. 