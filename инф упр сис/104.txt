ИСПОЛЬЗОВАНИЕ  ИДЕНТИФИКАТОРОВ  АБОНЕНТОВ ДЛЯ  РЕЗЕРВИРОВАНИЯ  КАНАЛА МНОЖЕСТВЕННОГО  ДОСТУПА 

Рассмотрены режимы передачи запросов, используемые в стандарте IEEE 802.16, для   резервирования канала множественного доступа. Вводится способ передачи запросов с использованием идентификаторов абонентов. Показано, что предложенный способ позволяет уменьшить среднюю задержку передачи запроса и может быть реализован в рамках режима multicast polling стандарта IEEE 802.16.

Последние годы характеризуются бурным развитием беспроводных систем передачи информации. При этом ведущая роль отводится беспроводным городским сетям связи, построенным на базе стандарта IEEE 802.16 1. Для таких систем характерно наличие базовой станции БС, большого числа абонентов и двух каналов связи канала множественного доступа вход канала доступен всем абонентам от абонентов к БС, называемого и широковещательного канала от БС к абонентам выход канала доступен всем абонентам, называемого . Абоненты используют часть ресурсов восходящего канала для передачи служебной информации, называемой в дальнейшем и, для резервирования времени последующей передачи данных. Базовая станция по нисходящему каналу сообщает абонентам о выделяемых ресурсах восходящего канала для передачи данных. При одновременной передаче запросов от нескольких абонентов в восходящем канале возникает конфликт, и БС не может правильно принять информацию. Для разрешения конфликта стандарт IEEE 802.16 предлагает использовать алгоритм, в котором абонент повторяет передачу запроса через случайные интервалы времени до момента его успешного приема БС. В настоящей статье для разрешения конфликтов предлагается использовать идентификаторы адреса абонентов. Применение этого подхода позволяет повысить оперативность доставки запросов по сравнению с подходами, которые используются при разрешении конфликтов в современных стандартах. В стандарте IEEE 802.16 абонент, желающий обмениваться данными, некоторым образом взаимодействуя с БС, регистрируется в системе. По завершении регистрации БС присваивает данному абоненту . Каждому зарегистрированному абоненту БС по определенному правилу предоставляет относительно небольшую долю ресурса восходящего канала для передачи запроса. Абонент передает запрос к БС после появления каждой новой порции данных. В запросе абонент указывает ресурс, необходимый ему для передачи этой порции данных в восходящем канале. Базовая станция, используя определенную дисциплину планирования, принимает решение о выделении или не выделении запрашиваемого ресурса и передает эту информацию абонентам. В стандарте IEEE 802.16 предусмотрено три основных режима передачи запроса абонента. Обозначены эти режимы в стандарте терминами unicast polling, multicast polling, broadcast polling. При этом может быть использовано частотное, временное, кодовое разделение ресурса канала и их комбинация. Вне зависимости от вида разделения ресурса канала будем полагать, что для передачи запросов выделяется некоторая фиксированная доля ресурса канала. Эту долю далее будем называть В режиме unicast polling БС выделяет каждому абоненту свое окно для передачи запроса В режиме broadcast polling БС назначает всем абонентам одну и ту же группу окон для передачи запросов При одновременной передаче запроса от разных абонентов в одном возникает конфликт, который разрешается в соответствии с определенным алгоритмом. Режим multicast polling можно рассматривать как обобщение режимов unicast polling и broadcast polling. В этом режиме все множество абонентов разбивается на подмножества. Всем абонентам из одного подмножества назначается одна и та же группа окон для передачи. В дополнение к трем основным режимам передачи запроса стандарт 802.16 позволяет передавать запрос, присоединяя его к передаче данных. Такой режим получил название piggybacking. В настоящей работе ограничимся рассмотрением только случая, когда входной поток данных характеризуется тем, что порции данных появляются через случайные интервалы времени с достаточно низкой интенсивностью. Кроме того, не предъявляется конкретных требований к времени обработки этих данных. Примером такого потока является HTTP-трафик. Подобные входные потоки данных чаще всего относят к классам nrtPS NonReal-Time Polling Service и BE Best Effort Service 1. Стандарт рекомендует для этих классов использовать режимы передачи запросов broadcast polling и multicast polling. Время работы системы разбивается на кадры одинаковой длительности. Кадры пронумерованы целыми неотрицательными числами. Далее в работе для краткости изложения кадр с номером будем называть кадром Будем полагать, что в системе имеется абонентов. Каждому абоненту, успешно прошедшему регистрацию в системе, ставится в соответствие уникальный двоичный -разрядный идентификатор из множества 0, 1, 2, 1, 2 . Относительно процессов появления запросов у абонентов и организации передачи этих запросов сделаем ряд допущений. В каждом кадре для передачи запроса выделяется . В каждом окне может возникнуть одна в окне передает запрос один абонент ситуация успех У в окне не передает запрос ни один абонент ситуация пусто П в окне передают запросы два или более абонентов, при этом ни один из запросов не может быть успешно принят БС ситуация конфликт К. Будем полагать, что . При этом БС, анализируя ситуацию в окне, достоверно определяет, какое из трех возможных событий произошло в окне. Если в окне один абонент передает запрос ситуация успех, то БС безошибочно принимает информацию, передаваемую в запросе. Базовая станция в нисходящем канале кадра передает абонентам свое решение о распределении ресурсов восходящего канала в кадре по результатам наблюдения окна для запроса в кадре 1 Считается, что абоненты узнают это решение к началу кадра . Будем полагать, что . При этом абоненты безошибочно принимают решение БС о распределении ресурсов восходящего канала У каждого абонента имеется, где 0. Ячейки буфера пронумерованы числами от 0 до . В канал может передаваться только тот запрос, который хранится в ячейке с номером 0. Абонент по определенному правилу удаляет успешно переданный запрос из нулевой ячейки буфера. В начале работы системы эта ячейка пуста. В каждом кадре в свободные ячейки буфера с номерами от 1 до записываются те запросы, которые возникли в течение этого кадра. Запись происходит в порядке поступления. Те запросы, которые не поместились в буфер, теряются. Если к началу кадра абонент узнает, что нулевая ячейка буфера пуста, то запрос, который хранился в ячейке с номером 1, переписывается в ячейку с номером 0 и т. д. Считается, что все эти действия происходят мгновенно. Обозначим через случайную величину, равную числу запросов, возникших в окне у абонента с номером . Для всех 0 и 0, 1 случайные величины . Будем полагать, что в одном кадре у каждого абонента может появиться . Вероятность появления запроса обозначим через . Тогда для всех 0 и 0, 1, а В дальнейшем будем называть входной поток запросов, удовлетворяющий данному допущению, . C учетом сделанных допущений модель полностью задается следующими тремя параметрами число абонентов число ячеек в буфере для хранения поступающих запросов интенсивность входного потока, т. е. среднее число запросов, возникающих у всех абонентов в одном кадре. При этом . В режиме unicast polling в каждом кадре может передавать свой запрос только один абонент. Будем полагать, что в кадре может передавать абонент, номер которого равен 1mod . Таким образом, каждый абонент может передавать свой запрос только один раз за кадров. В режиме broadcast polling в каждом кадре может передавать запрос любой абонент. Кадры, в которых абонент будет передавать запрос, выбираются с помощью определенного алгоритма, правила работы которого приведены ниже. Числа и являются параметрами алгоритма. При работе алгоритма также используется целочисленная переменная . Если в начале некоторого кадра в соответствии с допущением 7 запрос помещается в нулевую ячейку буфера, то переменной присваивается значение . Если у абонента возник запрос в кадре 1 и буфер для хранения запросов пуст, то абонент помещает этот запрос в нулевую ячейку буфера в начале кадра и передает этот запрос в кадре . Во всех других случаях, если запрос был помещен в нулевую ячейку буфера в начале кадра, абонент действует следующим образом случайным образом выбирает число из множества 0, 1, 1 первый раз передает запрос в кадре . Если в некотором кадре 1 возникает конфликт, то значение удваивается и абонент, который передавал этот запрос, действует следующим образом случайным образом выбирает число из множества 0, 1, 1 передает запрос в кадре . Если снова возникает конфликт, вышеописанные действия повторяются. Значение удваивается до тех пор, пока не станет равным . На примере стандарта IEEE 802.16 покажем, как можно организовать передачу запросов с использованием идентификаторов без существенных видоизменений стандарта. Применительно к описанной модели сначала сформулируем основную идею, а затем дадим строгое описание предложенного подхода в форме алгоритмов, которыми должны руководствоваться абоненты и БС при передаче запросов. Основная идея состоит в том, что используется передача запросов в режиме multicast polling. В стандарте IEEE 802.16 разбиение на подмножества не регламентируется. Предлагаемый подход заключается в динамическом разбиении в каждом кадре множества абонентов на подмножества. Динамическое разбиение имеет следующие особенности. 1. Если в некотором кадре в окне для запроса БС наблюдает событие конфликт, то она считает этот кадр первым кадром так называемого . Абонентов, которые передавали запрос в кадре, будем называть . Общее число участников конфликта образует или . В ходе сеанса разрешения конфликта БС будет указывать участникам конфликта кадры, в которых следует повторно передавать запрос. Остальным абонентам запрещено передавать запросы до конца сеанса. Сеанс разрешения конфликта заканчивается после того, когда БС определит, что все участники конфликта успешно передали запрос. 2. Базовая станция сообщает, что в первом кадре сеанса окно для передачи запроса разрешено использовать всем абонентам. Если в этом окне БС наблюдает событие успех или пусто, то сеанс завершается и в следующем кадре начинается новый сеанс. Для определения кадров, в которых абоненты могут передавать запросы в восходящий канал, БС передает некоторую служебную информацию, называемую . Маска представляет собой слово размерности log, записанное в троичной системе счисления, которое формируется БС по ситуации в восходящем канале связи и передается в нисходящий канал связи для организации доступа абонентов к восходящему каналу. Маска может состоять из символов 0, 1, 2. Маску, состоящую только из символов 2, будем называть . Интервал времени между двумя соседними стартстоповыми масками образует сеанс. Сеанс можно представить в виде дерева разрешения конфликта ДРК, которое в дальнейшем будем именовать . Вершины дерева сеанса соответствуют кадрам сеанса. Корень дерева образует первый кадр сеанса, соответствующий первоначальному конфликту, а концевые вершины дерева соответствуют кадрам с ситуациями пусто или успех. Дерево сеанса между абонентами называется . Каждой вершине дерева сеанса максимальной кратности можно однозначно поставить в соответствие маску. Маска определяет возможность передачи абонентом запроса в восходящий канал в случае полного поразрядного совпадения маски и идентификатора абонента. Наличие символа 2 в одном из разрядов маски означает, что идентификатор в этом разряде может принимать безразличное значение 0 или 1, и сравнение по этому разряду можно не проводить. Например, если 8, то значение маски, равное 022, означает, что в данном кадре разрешена передача абонентам с двоичными адресами 000, 001, 010 и 011. На рис. 1 представлено дерево сеанса максимальной кратности для 8. В каждой вершине дерева указаны номер кадра и маска, соответствующие вершине, а также идентификаторы абонентов в десятичной системе счисления, которым разрешена передача в данном кадре. Количество разрядов маски, совпадающих с символом 2, определяет номер уровня яруса дерева сеанса, к которому относится вершина с данной маской. Обозначим это количество 2. Рассмотрим метод управления доступом, который использует маску БС для передачи запросов в восходящий канал. Данный метод можно рассматривать как комбинацию алгоритмов работы БС и работы абонента. заключается в формировании маски, согласно ситуации в восходящем канале, в соответствии с деревом сеанса. Можно показать, что любое дерево сеанса является поддеревом дерева сеанса максимальной кратности. Введем следующие обозначения маска, сформированная БС в начале кадра и передаваемая в канал в кадре, 0, 1, 2. номер яруса в дереве сеанса максимальной кратности, используемый при формировании, 1, 1, 0 номер яруса определяется как log, где число абонентов, передающих в кадре дерева сеанса максимальной кратности концевые вершины дерева принадлежат нулевому ярусу, вершины с двумя абонентами первому и т. д. П, У, К ситуация в восходящем канале связи в кадре . 2 число символов 2 в маске . В момент времени 0 устанавливаются следующие начальные условия функционирования системы 222 22 3 1, . Ниже приведены инструкции алгоритма все вычисления выполняются в троичной системе счисления. 1. Если К, то 1 3 и 1 1. 2. Если П или У, то 1 3 если 1 0, то 1 3 1. 1 2 1. В дальнейшем на рассмотренный алгоритм работы БС будем ссылаться как на алгоритм. заключается в сравнении маски БС с собственным идентификатором. В случае совпадения абонент передает запрос в восходящий канал связи. является модификацией основного алгоритма. Его главное отличие заключается в том, что при ситуации конфликт очередной разряд маски формируется БС случайным образом. В алгоритме с чередованием бит в добавление к переменным, используемым в основном алгоритме, вводится дополнительная переменная которая формируется БС в кадре с номером и называется, где 0,1. Вектор инверсии содержит единичные биты на тех позициях, на которых надо поменять разряды маски на противоположные перед выдачей ее в канал. Операция инвертирования может быть легко реализована как сложение по модулю 2 битов маски -го разряда с -м битом вектора инверсии. При этом разряд маски, содержащий символ 2, не инвертируется, так как значение соответствующего бита вектора инверсии при этом равно нулю. Следует отметить, что если каждой вершине дерева сеанса соответствует своя маска, то вектор инверсии является одинаковым для двух вершин дерева, исходящих из общей вершины и принадлежащих одному ярусу. Корневой вершине дерева всегда соответствует вектор инверсии, состоящий из всех нулей. Базовая станция в начале кадра выполняет следующие действия рис. 2 вычисляет маску и номер яруса аналогично основному алгоритму в ситуации конфликт, в кадре 1, производит случайный розыгрыш бита инверсии для вектора инверсии вычисляет вектор инверсии используя маску и вектор инверсии, формирует маску для передачи в нисходящий канал. Основной алгоритм формирования маски БС можно считать частным случаем алгоритма с чередованием бит, когда вектор инверсии постоянно равен нулю. Правило вычисления величины . 1. В момент времени 0 устанавливается 000 00 0. 2. Если К, то c вероятностью 0 и c вероятностью 1 1 2 . 3. Если П или У и 1, то 1 . 4. Если П или У и 1, то 1 2 . В системе, состоящей из восьми абонентов, в кадре возникает конфликт между абонентами с двоичными идентификаторами 000, 001, 101, 111. Рассмотрим использование алгоритма с чередованием бит для разрешения данного конфликта. В табл. 1 для каждого кадра сеанса приведены значения маски и вектора инверсии, формируемые БС, а также маска, выдаваемая в нисходящий канал. Будем считать, что при ситуациях конфликт в случае розыгрыша всегда выпадает 1. На рис. 3 показано дерево сеанса для разрешения конфликта, а также нумерация вершин дерева, соответствующих отдельным кадрам сеанса десятичные идентификаторы абонентов, передающие запросы в этих кадрах маски и векторы инверсии, формируемые БС. Использование алгоритма с чередованием бит позволяет уменьшить задержки абонентов с номерами 0 и 1 по сравнению с основным вариантом. При этом задержки у абонентов с номерами 5 и 7, наоборот, увеличиваются. Результаты сравнения основного алгоритма и алгоритма с чередованием бит приведены в табл. 2. называется время от момента его поступления в систему до момента его успешной передачи. Занумеруем числовой последовательностью все поступающие в систему запросы и выделим из этой последовательности запрос с номером . Этот запрос мы назовем и найдем для него среднюю задержку. Обозначим через случайную задержку передачи меченого запроса. Определим равенством Для того чтобы вычислить среднюю задержку передачи запроса, сопоставим предложенную систему допущений с системой допущений, введенной для базовой модели в работе 2 и уточненной в работе 3. Из сопоставления этих систем допущений следует справедливость следующего утверждения. Пусть число абонентов для рассматриваемой модели совпадает с числом абонентов для модели из работы 3 и средняя интенсивность поступления запросов от всех абонентов в расчете на один кадр для рассматриваемой модели совпадает со средней интенсивностью поступления пакетов от всех абонентов в расчете на одно окно для модели из работы 3. Тогда средняя задержка передачи запроса, измеренная в числе кадров, основного алгоритма для рассматриваемой модели совпадает со средней задержкой передачи пакета, измеренной в числе окон, для блокированного немодифицированного стек-алгоритма из работы 3. Непосредственно из утверждения 1 следует, что для расчета средней задержки передачи запроса основного алгоритма может быть без каких-либо изменений использована методика, приведенная в работе 3. В основном алгоритме существующий порядок формирования масок БС приводит к неравномерным задержкам передачи запросов для разных абонентов. Так, абоненты, которые имеют большее число единиц в старших битах адреса, передают запросы с меньшей задержкой, чем абоненты, у которых в этих битах адреса содержатся нулевые значения. По аналогии со средней задержкой запроса в системе, введенной ранее в соответствии с формулой, введем с заданным номером. Занумеруем числовой последовательностью все поступающие запросы к абоненту с номером и выделим из этой последовательности запрос с номером . Этот запрос мы назовем Обозначим через случайную задержку передачи меченого запроса. Определим среднюю с номером равенством Анализируя работу основного алгоритма передачи запроса, можно доказать справедливость следующего утверждения. Средняя задержка передачи запроса абонента уменьшается с увеличением номера абонента а задержка передачи запроса в системе связана со средними задержками передачи запроса для абонентов следующим образом Для выравнивания задержек необходимо поменять порядок выдачи масок БС в нисходящий канал, что реализовано в алгоритме с чередованием бит маски. Как для основного алгоритма, так и для алгоритма с чередованием бит маски введем в рассмотрение среднюю задержку передачи запроса в системе и среднюю задержку передачи запроса для абонента с номером . Для этих средних задержек будем использовать обозначения и соответственно. Для алгоритма с чередованием бит средняя задержка передачи запроса для абонента не зависит от номера абонента и совпадает со средней задержкой передачи запроса в системе а средняя задержка передачи запроса в системе для алгоритма с чередованием бит равна средней задержке передачи запроса в системе для основного алгоритма Справедливость утверждения 3 вытекает из способа формирования маски. Данный способ эквивалентен тому, что в системе с основным алгоритмом перед началом каждого сеанса выполняется случайная перестановка идентификаторов абонентов. Непосредственно из утверждения 3 следует, что для расчета средней задержки передачи запроса в системе с алгоритмом с чередованием бит может быть без каких-либо изменений использована методика численного расчета, приведенная в работе 3. При бернуллиевском входном потоке средняя задержка модели с буфером на две ячейки, полученная численным расчетом 3, является нижней оценкой средней задержки алгоритма с чередованием бит маски при числе ячеек в буфере 1. Справедливость утверждения следует из сравнения модели с буфером на две ячейки 3 и модели с буфером, состоящим из 1 ячеек допущение 6. Сравним среднюю задержку доставки запроса предложенного подхода в режиме broadcast polling, используемом для передачи запросов HTTP-трафика. При сравнении, для того чтобы учесть специфику НTTP-трафика, кроме бернуллиевского входного потока, рассмотрим случай, когда входной поток характеризуется всплесками. В работе 4 такой поток называют прерывистым пуассоновским процессом Interrupted Poisson Process. Используя аргументацию и обозначения рекомендаций рабочего комитета по стандарту 802.16 4, 5, видоизменим допущение 8 из описания модели следующим образом. Каждому кадру может соответствовать одно из двух состояний ON и OFF. В активном состоянии у каждого абонента с вероятностью возникает новый запрос, в пассивном состоянии запросы не возникают. Если некоторому кадру соответствует активное состояние, то с вероятностью кадру 1 будет соответствовать пассивное состояние, а с вероятностью 1 кадру 1 будет соответствовать активное состояние Аналогично, если некоторому кадру соответствует пассивное состояние, то с вероятностью кадру 1 будет соответствовать активное состояние, а с вероятностью 1 кадру 1 будет соответствовать пассивное состояние. Таким образом, процесс смены состояний описывается марковской цепью. Стационарная вероятность нахождения цепи в равна . Таким образом, интенсивность входного потока, т. е. среднее число запросов, возникающих у всех абонентов в одном кадре, вычисляется по следующей формуле где интенсивность входного потока в активном состоянии. Далее описанный выше поток будем называть входным . При этом будем использовать рекомендованные 4 значения 0,01445 0,01085. Средние задержки алгоритма с чередованием бит маски, алгоритма со случайными паспортами 2 и алгоритма, используемого в стандарте IEEE 802.16, при бернуллиевском потоке и потоке со всплесками для буфера с бесконечной очередью были получены путем имитационного моделирования. В качестве длительности кадра было выбрано значение 5 мс. Графическая зависимость средней задержки от интенсивности входного потока при бернуллиевском входном потоке для буфера с бесконечным числом ячеек и буфера с двумя ячейками представлена на рис. 4. Из графика видно, что при среднем числе запросов в минуту, меньшем 35, оценка средней задержки из утверждения 4 является достаточно точной. Проведем сравнение средних задержек для алгоритмов на основе идентификаторов абонентов, алгоритма со случайными паспортами и алгоритма, используемого в стандарте IEEE 802.16, для бернуллиевского входного потока рис. 5, и для потока со всплесками рис. 5, . Видно, что предложенный алгоритм с идентификаторами абонентов, начиная с некоторого числа запросов, дает выигрыш по средней задержке доставки запроса. Например, для потока со всплесками при среднем числе запросов, близком к 30 в минуту, средняя задержка алгоритма с использованием идентификаторов примерно на 3 с меньше средней задержки алгоритма, используемого в стандарте IEEE 802.16 см. рис. 5, . В данной работе представлен подход, использующий идентификаторы абонентов для резервирования канала множественного доступа. Подход базируется на предложенных в работе алгоритмах, использующих маску БС. Базовая станция посылает маску всем абонентам, которые, сравнивая ее со своим идентификатором, определяют момент передачи запроса. Предлагаемый вариант алгоритма с так называемым чередованием бит маски позволяет исключить зависимость задержки от идентификатора абонента. Рассматриваемый подход может быть реализован в стандарте IEEE 802.16 в рамках режима multicast polling. Эффективность подхода продемонстрирована на примере потока со всплесками, имитирующего трафик протокола HTTP. Показано, что алгоритм с чередованием бит маски позволяет значительно уменьшить среднюю задержку передачи запроса по сравнению с алгоритмом, используемым в стандарте IEEE 802.16, как при бернуллиевском потоке, так и при потоке со всплесками. Причем, при потоке со всплесками выигрыш по средней задержке является более существенным. Отметим, что, несмотря на отсутствие конкретных требований по задержке для HTTP-трафика, задержка передачи порядка нескольких секунд рассматривается пользователями как отказ в обслуживании. В работе показано, что предлагаемый подход позволяет снизить задержку до приемлемого уровня. Представленные выше результаты получены в предположении, что как восходящий канал, так и нисходящий канал являются бесшумными каналами. На основе работы 6 данные результаты могут быть обобщены на случай, когда шум в восходящем канале может привести к ложным конфликтам. При этом незначительно усложняется алгоритм формирования маски, а алгоритм работы абонента не изменяется. 