АНАЛИЗ ВРЕМЕННЫХ И СЛОЖНОСТНЫХ ХАРАКТЕРИСТИК  ПАРОЛЬНОЙ АУТЕНТИФИКАЦИИ В ЗАЩИЩЕННЫХ  ОПЕРАЦИОННЫХ СИСТЕМАХ СЕМЕЙСТВА UNIX 

Описан подход к оценке вероятностно-временных характеристик протоколов аутентификации в операционных системах семейства Unix, основывающийся на теории вероятностных графов. Показано влияние действий нарушителя на работу протоколов аутентификации.

В мировой практике проектирования и построения защищенных информационных систем фактическим стандартом является использование Unix-подобных систем в качестве базовой операционной системы ОС для серверов и рабочих станций. Особый вклад в процесс эволюции защищенных ОС внесли ведущие разработчики и испытательные лаборатории систем обеспечения сетевой безопасности и средств защиты от несанкционированного доступа, которые на основании проводимых испытаний подтвердили отсутствие недекларированных возможностей, высокую отказоустойчивость встроенных механизмов защиты ОС. Портирование средств защиты информации Unix-подобных систем и широкий спектр поддерживаемых платформ привели к повсеместному использованию данных ОС производителями телекоммуникационного оборудования. Правила реализации безопасной парольной политики и типовые настройки базовых встроенных механизмов управления доступом хорошо известны, однако вопрос анализа сложностных и временных характеристик успешного получения несанкционированного доступа к пользовательским и системным данным ОС на настоящий момент не подтверждены единым математическим доказательством. При предоставлении прав доступа к информационным ресурсам защищенной ОС возникает необходимость аутентификации пользователей для реализации механизмов дискретизации прав доступа. На данный момент наиболее распространенными и доступными ОС является семейство Unix, разработанное компанией Bell Laboratories. Встроенные механизмы зашиты таких ОС включают в свой состав протоколы парольной аутентификации 1, основой которых является верификация респондента по соответствию однонаправленного преобразования предъявленного пароля, приведенного в парольной таблице. Взаимодействие программных модулей при аутентификации пользователей 2 осуществляется с вызова при непосредственном доступе с консоли и программных компонент пакета SSH при доступе с использованием сетевых средств управления программы . Модуль вызывается явно и замещает исходный интерпретатор команд, после чего он выполняет проверку входных аутентификационных данных с использованием модуля криптографических преобразований или аналогичных. В случае успешной аутентификации предоставляет доступ пользователю с соответствующими его профилю полномочиями к интерпретатору командной строки рис. 1. Вышеупомянутые криптографические преобразования могут быть реализованы выполнением функции шифрования с использованием ключа, полученного из пароля, конкатенированного с известной постоянной величиной и случайной последовательностью. В качестве однонаправленного преобразования может использоваться блоковое шифрование или ключевая хеш-функция. Ряд криптографических алгоритмов, реализуемых в схеме аутентификации таблица, используются с добавлением к ключам случайных чисел. В схеме однонаправленного преобразования по алгоритму DES рис. 2 пароля используется 25-кратное блоковое шифрование 3 нулевой последовательности длиной 64 бита с добавлением битной случайной последовательности с обратной связью, в качестве ключа используются первые 64 бита пароля. Добавление случайных чисел в алгоритм формирования ключей криптографического преобразования позволяет существенно затруднить атаку на базу аутентификаторов путем рандомизации его результатов. Поэтому алгоритмы перебора пароля при анализе базы данных увеличивают в общем случае трудоемкость вычислений в 2 раза. База аутентификаторов определяет соответствие идентификаторов пользователей, их символьных имен и соответствующих им хеш-функций паролей, а также другую информацию о пользователях и группах в системе. Этот массив данных представлен в виде текстовых файлов. Существует два различных способа хранения паролей. Первый способ подразумевает общедоступное хранение аутентификаторов и хеш-функций паролей в едином файле вместе с реквизитами бюджетов пользователей. Второй, теневой способ ограничивает доступ пользователей к значениям хеш-функций паролей и определяет их размещение в отдельном файле, разрешенном на чтение и изменение только системным пользователям или процессам. Очевидно, что теневой способ хранения значений однонаправленных криптографических функций паролей и случайных последовательностей позволяет увеличить защищенность системы аутентификации и повышает общий уровень робастности ОС относительно способов хранения аутентификационных данных, не использующих рандомизацию. Однако при вышеописанном информационном обмене в процессе передачи данных инициатор провоцирует прямую компрометацию общего секрета. Это делает такую схему слабой аутентификации неприменимой в открытых каналах связи, а также предполагает ее использование только в доверенной среде передачи данных, что часто обеспечивается на практике посредством криптографической инкапсуляции передаваемых данных. Рассмотрим применение методов теории вероятностных графов к моделированию различных схем взаимодействия участников информационного обмена в недоверенной среде передачи данных, состоящей из двух участников протокола инициатора и респондента и нарушителя. Предположим, что нарушитель имеет доступ к передаваемым сообщениям, поэтому может выполнять как перехват, так и подавление с подменой сообщения. Таким образом, взаимодействие корреспондентов информационного обмена происходит c участием посредника, который получает сообщения обоих легитимных сторон и может ретранслировать их без изменений, а может подменить любое сообщение на свое, и при этом факт подмены не будет замечен. Ориентированным графом покажем состояние схемы взаимодействия нарушителя и атакуемого легитимного корреспондента для протокола аутентификации рис. 3. Производящая функция перехода из состояния запроса аутентификации в состояние ее успешного завершения а производящая функция перехода в начальное состояние протокола в случае предоставления неверных учетных данных равна 1 2 . Общая производящая функция всего графа 4 Злоумышленник, получив запрос инициатора, пытается либо предугадать соответствующий ему ответ путем перебора общего секрета легитимных участников, либо просто угадать ответ. Предположим, что однонаправленное преобразование, участники протокола выполняют идеально стойкой криптосистемой. Тогда вероятность того, что произвольно выбранное нарушителем значение соответствует распределенному секрет, равна 2 . В случае, когда атакующий действует методом угадывания ожидаемого ответа, можно предположить, что все варианты отображения элементов множества запросов равновероятны. Тогда вероятность угадать ответ на -й итерации 2 . Таким образом, вероятность перехода из состояния в состояние будет 2, где битовая длина перебираемой последовательности. Время, затрачиваемое верификатором на обработку одного запроса аутентификации, определяется величиной . Согласно теории вероятностных графов 5, зависимость среднего времени успешного выполнения атаки угадыванием ответа от его длины с попыткой установления одной сессии протокола Если атакующий действует методом перебора секретной последовательности, то очевидно, что с увеличением числа выполненных итераций протокола количество последовательностей, одна из которых является общим секретом легитимных корреспондентов, сокращается. Поэтому вероятность успешного перебора на -й итерации 2 . Таким образом, вероятность перехода из состояния в состояние равна 2, где битовая длина общего секрета. Зависимость среднего времени успешного выполнения атаки перебором секрета от его длины при попытке установления сессий протокола Сравнение средних времен успешного выполнения атаки на протокол аутентификации перебором и угадыванием общего секрета представлено на рис. 4. Однако наряду с последовательным выполнением итераций протокола атакующий также может одновременно начинать несколько сессий протокола, в этом случае вероятностный граф протокола будет иметь вид, показанный на рис. 5. При этом общая производящая функция всего графа 1, ..., . Среднее время выполнения данного протокола для случая угадывания последовательности за одну две, три и четыре сессии 2 рис. 6. Если атакующий действует перебором общего секрета длиной с одновременным выполнением сессий протокола, тогда ему на каждой попытке необходимо выполнить однонаправленное преобразование за время, что, безусловно, увеличит время выполнения итерации протокола, которое станет равным 2 . Создание дополнительной узловой точки формирования словаря возможных значений общего секрета перед вероятностным переходом означает вынесение детерминированной конструкции из циклической группы. Следовательно, не изменяя временной сложности итерации, можно понизить вычислительную сложность вероятностного цикла алгоритма. Вид вероятностного графа протокола показан на рис. 7. В данном случае величина среднего времени Зависимость среднего времени выполнения протокола атаки от числа параллельных сессий и длины секрета в общем виде представлена на рис. 8. Сравним результаты вероятностно-временного моделирования и теоретико-сложностных методов. Для этого произведем асимптотическую оценку функции трудоемкости алгоритма, определяющую сложность алгоритма и позволяющую выбрать предпочтения в использовании того или иного алгоритма для больших значений размерности исходных данных. Воспользуемся мажоритарной оценкой, позволяющей дать верхнюю оценку для трудоемкости алгоритмов атак на протокол. В случае атаки перебором ответа решаемая задача имеет экспоненциальную сложность, следовательно, асимптотическая оценка имеет вид 2 . Среднее время выполнения итерации протокола по алгоритму атаки, направленной на перебор ответа где вероятность появления входной последовательности, а суммирование ведется по всем возможным входным последовательностям длины С учетом предположения о том, что при осуществлении однонаправленного криптографического преобразования все выходные последовательности равновероятны, . Сопоставив значение среднего времени успешного выполнения протокола и асимптотическую ограничивающую сверху функцию, получим, что, т. е. наиболее близкой а в общем случае равной мажорирующей функцией будет сама трудоемкость алгоритма атаки с единичным постоянным множителем. Таким образом, можно сделать вывод, что вероятностно-временной анализ посредством детального рассмотрения информационного взаимодействия корреспондентов позволяет находить методы линейного уменьшения среднего времени выполнения атаки перебором ответа, например запуском нескольких параллельных сессий. Результаты вероятностно-временного анализа алгоритмов атак на протокол парольной аутентификации в Unix-подобных системах соответствуют теоретико-сложностным оценкам трудоемкости выполнения этих атак, наглядно иллюстрируя возможные типы поведения нарушителя, дающие при этом четкое обоснование эффективности воздействия. Вероятностно-временные методы могут иметь широкое распространение при формировании свидетельства разработчика по стойкости функции безопасности объекта оценки AVASOF для проведения сертификационных испытаний средств защиты информации. 