МОДЕЛИРОВАНИЕ СИСТЕМ И ПРОЦЕССОВ ДЕЦЕНТРАЛИЗОВАННОЕ УПРАВЛЕНИЕ   АДАПТИВНЫМИ СЕТЯМИ ПОСТАВОК НА ОСНОВЕ ТЕОРИИ  КОЛЛЕКТИВНОГО ИНТЕЛЛЕКТА И АГЕНТНОЙ ТЕХНОЛОГИИ   ЧАСТЬ 2: МНОГОАГЕНТНАЯ СРЕДА МОДЕЛИРОВАНИЯ   И ОПТИМИЗАЦИИ СЕТЕЙ ПОСТАВОК 

Описана среда моделирования сети поставок как динамической, гибкой и самонастраивающейся системы автономных агентов. Экспериментальный комплекс выполнен на основе агентной платформы CAPNET. Приведены результаты экспериментов.

Агентное моделирование это новый подход к имитационному моделированию систем, содержащих автономных и взаимодействующих агентов 1. Агентная модель сети поставок была реализована в целях проверки разработанных алгоритмов динамической оптимизации АСП в многоагентной среде моделирования и оптимизации сети поставок 2. Эта среда позволяет моделировать сложные динамические взаимодействия между партнерами АСП, неопределенность заказов, а также проверять и, при необходимости, модифицировать конфигурацию сети, оптимизируя ее поведение. Среда может быть использована для улучшения процесса ПР в пределах широкой области задач в различных сценариях сети поставок. Хотя среда ориентируется больше на решение задач операционного типа, она также может быть использована в категориях стратегических и тактических задач. Так, в процессе экспериментов показано, как результаты имитационного моделирования могут быть использованы для конфигурации АСП, основанной на производственном анализе. С другой стороны, алгоритм динамической оптимизации хорошо подходит для принятия решений в моделях точно в срок . В модели рассматриваются следующие потоки управления АСП верхний закупка, внутренний производство, сборка и нижний распределение. Каждый эшелон сети имеет параллельные производственные и сборочные единицы и буферы ограниченной емкости. При этом моделируются три типа участников. Во-первых, агенты-поставщики SA, которые несут ответственность за поставку деталей другим участникам, но ни от кого их не принимают. Поставщики моделируются как склады, генерирующие потоки сырья. При этом предполагается, что всегда имеется в наличии достаточное количество исходных материалов, которые генерируются по запросу. Второй тип агенты-производители PA, которые являются промежуточными участниками в сети поставок производственные и сборочные единицы. Они занимаются как размещением заказов у участников сети предыдущего эшелона, так и доставкой заказов участникам следующего эшелона. Входные буферы находятся перед каждым операционным элементом производимые продукты транспортируются между всеми узлами сети. Существует очень важное отличие между РА в случае агентов сборки несколько входных буферов один для каждого компонента должны располагаться перед агентом см. ч. 1, рис. 2. Без потери общности, в данном случае мы рассматриваем только продукты, состоящие максимум из двух частей, элемент сборки, таким образом, будет иметь два входных буфера. Также для простоты мы рассматриваем линейную схему АСП, однако локализация ПР на уровне агента, взаимодействующего только со своими соседями, делает алгоритм прозрачным для любой структуры сети АСП необходима только соответствующая конфигурация множества знакомств каждого агента агентов, с которыми он взаимодействует. Каждый РА имеет доступ к спецификациям материалов Bill of Materials BOM, которые могут быть получены от системы планирования ресурсов предприятия Enterprise -esource PlanEnterprise -esource Planning E-P в момент, когда выпол нено соедине в момент, когда выпол нено соединение с системой планирования материальных ресурсов Material -esource Planning M-P, реализованной на Excel 3. Excel-файл содержит таблицы продаж продуктов и компонентов, а также спецификации заказов на поставку, наряду с результатами расчетов показателей производительности, характеризующих эффективность управления заказами, доставкой, запасами и использования ресурсов 2. Наконец, заказчики дистрибьюторы или розничные торговцы размещают заказы и выполняют доставку вместо изготовления. Важно отметить, что имитационная модель позволяет учитывать заказы с разными сроками выполнения производство точно в срок. Имитация это процесс выполнения агентной модели через дискретные изменения состояния во времени. С целью их синхронизации к многоагентной системе добавлен агент-планировщик SCHA. На этапе размещения заказов каждый заказчик генерирует заказы на любой из моделируемых продуктов. Фактически, для моделирования этой фазы заказчик моделируется агентом-заглушкой, ассоциируемым с соответствующим складом готовой продукции DWA, который динамически генерирует заказы, используя алгоритмы прогнозирования 4. Как только заказ сгенерирован, он размещается на соответствующем РА внутреннего потока АСП. Агенты-производители, в свою очередь, решая, какие компоненты должны быть доставлены, размещают заказы среди агентов-поставщиков. Во время фазы размещения заказа динамически определяется лучший маршрут с учетом доступной производственной мощности партнеров АСП, которая хранится в Q-таблицах. Этот маршрут используется в дальнейшем при моделировании производственных процессов. Имитационное моделирование начинается, когда SCHA передает сообщение всей системе. Получая этот сигнал, агенты выполняют задачи внутренней инициализации, в основном относящиеся к инициализации Q-таблиц и переменным, которые используются Q-алгоритмами. Агент DWA загружает списки технологических процессов и заказов, которые должны быть выполнены. Сначала он вызывает модель прогнозирования, чтобы определить производственную программу. Как только программа сгенерирована, посылает исходный список заказов SCHA, при этом сроки выполнения заказов не моделируются явно. Вместо этого фактическая моделируемая дата выполнения заказа сравнивается со сроком платежа. Те заказы, сроки платежа которых вышли, заносятся в список запоздалых заказов. Продукты наследуют приоритет заказов, которые связаны со сроками платежа. Поток материалов инициируется поставщиками, которые генерируют сырье в соответствии с полученными заказами на поставку. Затем РА берут необходимое им сырье со складов, чтобы изготовить продукты, согласно перечню материалов. Сырье, промежуточные и конечные продукты физически не существуют они моделируются как информационные объекты, передаваемые по АСП. Информация, касающаяся каждого из них, передается путем обмена сообщениями между SA и PA. Сырье становится окончательным продуктом после обработки в АСП. Вначале этот объект создается с ассоциированным вектором операций, который уменьшается на каждом этапе до тех пор, пока не обнулится и пока окончательный продукт не окажется на соответствующем складе. Начало операции над продуктом из внутренней очереди PA происходит по сигналу SCHA. Когда операция закончится, агент несет ответственность за маршрутизацию продукта к следующему элементу сети, где инициируются два следующих события запрос соседа на добавление промежуточного продукта и запрос SCHA на добавление нового события для того, чтобы соответствующий агент проверил свой буфер на наличие очереди заказов. Также существует пинг-операция, которая удостоверяет, что выбранный агент до сих пор жив. В противном случае будет выбрана вторая лучшая альтернатива и соответствующий PA будет уведомлен о том, что он должен поставить продукт в очередь для дальнейшей обработки. Вследствие этого Q-таблицы изменяются, так как новый продукт добавляется между текущим агентом и его соседом. В процессе этапа инициализации PA запрашивают локальную службу каталогов своей агентной платформы с целью получить списки партнеров со следующего эшелона АСП, создавая таким образом локальную таблицу соседних агентов. Также PA запрашивает соседей находящихся в следующем эшелоне об их способностях и доступной производственной мощности. Эта информация используется для того, чтобы инициализировать Q-таблицы. Обратное распространение данных к предыдущему эшелону осуществляется после того, как PA ставит продукт в очередь. Этот механизм помогает убедиться в том, что каждый агент обладает информацией для оптимизации маршрута продукта. Q-алгоритмы встроены в тело PA. Это приводит к обновлению информации, предназначенной для оптимизации процесса принятия решений по выбору наилучшего маршрута для каждого эшелона. Нужно отметить, что DWA работает частично как PA по следующей причине DWA хранит Q-таблицу для принятия решений о том, куда отсылать заказ после его генерации. Если PA обнаруживает, что обработанный продукт больше не содержит операций, он извещает DWA. В свою очередь, этот агент корректирует число складированных экземпляров данного продукта и сравнивает время производства со сроком платежа. Различные виды событий, в курсе которых должны быть агенты, кодируются в сообщения, например такие, как выпуск сырья, отчет о конечной продукции и продукт покидает буфер агента. Структура сообщений между РA и SA немного отличается от диалогов с SCHA. Последние являются только извещениями о событиях, передаваемыми от одной группы агентов к другой, в целях моделирования. PA и SA, в свою очередь, осуществляют запросы на операции, используя протокол взаимодействия FIPArequest. Каждый запрошенный PA отвечает на запрос значением расчетного времени окончания операции. Агенты распределены по контейнерам CAPCAPNET в соответствии с эшелоном, которому они принадлежат. Контейнер упрощает работу, так как является мостом для экспериментирования с распределенным размещением агентов. Существует вариант физического соединения отдаленных компьютеров, который воспроизводит реальную структуру АСП. Другими словами, многоагентная система может иметь двойное приложение для моделирования различных конфигураций и, при необходимости, для управления реальной АСП. Нами преследуются три основные цели 1 показать способность алгоритма двойной Q-маршрутизации к обучению среде и к глобальной оптимизации 2 сравнить, как локально принятые партнерами АСП оптимальные решения в эгоистичной манере и в согласованной манере следуя алгоритму двойной Q-маршрутизации влияют на параметры глобальной АСП 3 показать типичный пример того, как результаты моделирования могут быть использованы для принятия управленческих решений, интегрирующих оптимизацию как макро-, так и микроуровней. Для того чтобы проверить аргументированность предлагаемого подхода, была создана имитационная модель для простой пяти эшелонной сети поставок и проверена для сценария распределения производственной мощности. Модель выполнена в среде агентного параллельного моделирования с использованием агентной платформы CAPNET и имитатора Netlogo для визуализации результатов 5, 6. Полагаем, что задачи макроуровня сводятся к минимизации цен в сети поставок оптимизация уровня запасов рассматривается как координация уровней запасов, а оптимизация уровня производственной мощности как координирование уровней производства партнеров АСП. С другой стороны, оптимизация микроуровня связана с целями партнеров АСП при наличии ограничений, установленных решением макроуровня уровнями производственных мощностей и приоритетами производства. В частности, задачей исследования конкретного примера было получение квазиоптимальных уровней производственной мощности эшелона с применением разработанного алгоритма двойной Q-маршрутизации с регулировкой параметров. В примере рассматривается динамическая оптимизация потока как заказов, так и производства для двух конечных продуктов и трех видов сырья согласно перечню материалов табл. 1. Спецификация продуктов P1 и P2 определяет технологический процесс их изготовления табл. 2 каждая единица продукта P1 состоит из одной единицы сырья A после операции обработки O11 и двух единиц сырья В после операции обработки O12. Эти компоненты собираются операция O22 и затем обрабатываются O33. Каждая единица продукта P2 состоит из операций обработки O11, O23 и O33 над сырьем C. Поставщики SA1, SA2 и SА3 поставляют сырье A, B и С соответственно рис. 1. Наконец, мы моделируем трех заказчиков представленных агентами DWA1 DWA3, которые генерируют заказы динамически в течение первого дня недели таким образом, что DWA1 заказываетскладирует продукты P1, в то время как DWA2 и DWA3 заказываютскладируют продукт P2. При базовой конфигурации каждая операция имеет продолжительность в соответствии с табл. 3. Для упрощения будем считать, что время переходного процесса равно одной единице времени, и оценивать время ожидания динамически по длине очереди. Сначала рассмотрим основные фазы алгоритма двойной Q-маршрутизации, который позволяет агенту динамически приспосабливать свои решения к текущему состоянию системы. Каждый раз, когда нужно выбрать лучшее решение лучшего поставщика, лучшую операцию технологического процесса, лучший склад готовой продукции и т. д., его ищут в Q-таблицах. Инициализацию Q-значений каждого агента в АСП иллюстрирует рис. 2, Q вычисляется по формуле Q-обучения. Значения весов, обозначенных на линиях, связывающих агента с соседями, представляют логическую цену выбора действия, связанного с данным партнером. При первой итерации алгоритма Q-значение является этой логической ценой ожидаемая операция и время переходного процесса. Как только система вовлекается в операцию, выполняется алгоритм планирования, представляющий собой упреждающую часть предложенного подхода. При его использовании нет необходимости получения обратной связи от среды каждый партнер АСП, представляемый агентом, строит локальное внутреннее состояние среды. Во время выполнения алгоритма выбирается наилучшая альтернатива маршрут PA11PA23 с минимальным -значением 17,90 рис. 3. -значения модифицируются посредством сообщений обновления. В то же время -значение агента SA3 по отношению к PA11 должно быть изменено на основании этого минимума и логической цены операции равной 4 21,90 вместо 26,50. Наконец, на рис. 4 изображен алгоритм муравья. Основная цель каждого муравья как можно быстрее сообщить плохие и хорошие новости об изменениях в среде АСП. Как показано, агенты PA12 и PA21 должны обновить свои соответствующие -значения, основанные на сообщении от муравья. Эти значения представляют реальное состояние АСП в момент, когда последний образец продукта P1 был доставлен на склад. Экспериментальные результаты показаны в таблице продаж продуктов табл. 4. Полные циклы обычного имитационного прогона получены с использованием различных алгоритмов рис. 5. Среднее время между размещением заказа и доставкой готового продукта показано на рис. 5, . Сначала был использован традиционный алгоритм Q-маршрутизации. Так как моделирование начинается с нулевых уровней Q-таблиц что означает абсолютно неизвестную среду, процесс перехода занимает время, равное производству первых 100 продуктов для среднего срока изготовления и примерно 300 продуктов для уровней запасов. Агенты, использующие алгоритм Q-маршрутизации, с целью оптимизировать свои функции локальной полезности принимают решения эгоистичным образом, что моделирует ситуацию управления индивидуальными предприятиями без знания действий других участников сети. Это приводит к высоким уровням запасов и сопровождается понижением функции глобальной полезности. Для исходной конфигурации АСП см. рис. 1 алгоритм двойной Q-маршрутизации показывает лучшую производительность по сравнению с алгоритмом Q-маршрутизации, понижая средний срок изготовления на 10 см. рис. 5, . Это становится возможным из-за того, что агенты принимают решения, учитывая производительность не только на локальном уровне, но и во всей АСП. В результате производительность сценария улучшается благодаря адаптации к изменениям в среде АСП. Второй вид экспериментов основывается на результатах, полученных во время имитационных прогонов с использованием алгоритма двойной Q-маршрутизации. Согласно анализу результатов, полученных во время первого прогона, мы можем прийти к заключению, что исходная модель не является оптимальной из-за длительности операции O23, которая приводит к высокой утилизации агентов PA22 и PA23. Конфигурация конечной АСП была получена модификацией исходной структуры, которая заключалась в добавлении агента PA24, что позволило избежать узкого места, обнаруженного в исходной структуре. По сравнению с конфигурацией исходной АСП срок изготовления уменьшен на 13 см. рис. 5, . Модель также рационализирует уровни запасов продуктов, стараясь максимально обеспечить равные уровни запасов по каждому продукту рис. 5, . В примере уровни запасов снижены почти на 25 . Наконец, были проведены тесты по масштабируемости модели . Для данного примера производство 1600 продуктов заняло примерно полчаса моделирования, проходящего в режиме клиент-сервер, столько же для АСП, состоящей из 25 агентов. Позже промоделирована конфигурация с 5 эшелонами по 10 элементов в каждом примерно за 1 час. Следует учитывать, что основная часть времени расходуется на запись параметров моделирования для последующего воспроизведения динамики производственного процесса в Netlogo. Вместе с тем это время можно в значительной мере уменьшить в распределенном режиме, который является естественным для агентной технологии. В данной статье задача динамической оптимизации поведения АСП сформулирована в рамках теории КОИН. Наиболее важные результаты работы, составляющие научную новизну, включают 1. Модель децентрализованного управления, разработанную в рамках теории КОИН и реализованную на основе алгоритма коллективного обучения для адаптации локального поведения каждого партнера АСП к глобальной цели, в качестве которого разработан алгоритм двойной Q-маршрутизации. 2. Многоагентную среду моделирования и оптимизации сети поставок, реализующую эту модель. 3. Конкретный пример реконфигурации АСП в целях получения квазиоптимальных уровней производственной мощности эшелонов сети, разработанный в данной среде моделирования. Разработанная модель была реализована в среде агентного моделирования на основе платформы CAPNET. В случае ее встраивания в информационную инфраструктуру предприятия алгоритмы, проверенные в модельной среде, могут быть использованы в практических приложениях. В будущих исследованиях запланированы эксперименты с переменными объемами производства для моделирования производственных систем с независимымизависимыми производственными программами и отказами оборудования с тем, чтобы оценить влияние решений по конфигурации АСП в различных производственных условиях. Хотя сегодня нет результатов этих экспериментов, уже можно сделать вывод, что задачи управления АСП в условиях неопределенной среды и гибких связей между партнерами хорошо подходят для применения теории КОИН. Алгоритмы коллективного обучения, примером которых является разработанный алгоритм двойной Q-маршрутизации, станут одной из основных задач, которые необходимо решить, чтобы прийти к децентрализованному автономному принятию решений в альянсных сетях поставок и заказов SupplyDemand Alliance Networks. 