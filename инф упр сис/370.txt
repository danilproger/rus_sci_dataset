ВРЕМЕННАЯ ОПТИМИЗАЦИЯ АЛГОРИТМА СЕГМЕНТАЦИИ  В СИСТЕМЕ АНАЛИЗА ИЗОБРАЖЕНИЙ  НА ОСНОВЕ МЕТОДА ВЫРАЩИВАНИЯ ОБЛАСТЕЙ 

Поставлена задача оптимизации временных затрат для системы анализа изображений. Разработан оптимизированный алгоритм реализации метода сегментации на основе выращивания областей. Приведены теоретические оценки временной сложности процессов для оригинального и оптимизированного алгоритмов. Аналитически и статистически доказана эффективность предложенного алгоритма.

Сегментация есть выделение на исходном цифровом растровом изображении однородных по какому-либо признаку областей сегментов. Сегментация является критической операцией в составе систем анализа изображений САИ при качественной смене представления изображения, эффективность которой оказывает ключевое воздействие на результаты всего процесса анализа. Процесс обработки изображения может удовлетворять различным целевым критериям в зависимости от поставленных задач сегментация как первичная обработка изображения, позволяющая снизить информационную избыточность данных при последующем анализе сегментация как результат анализа, при котором выявляется полное соответствие выделенных сегментов некоторым представленным на изображении объектам-прототипам реального мира в контексте решаемой задачи анализа семантическая сегментация. Системы анализа изображений применяются во многих научно-технических и производственных отраслях, где требуется оптимизация затрат труда человека за счет введения автоматической обработки изображений. Например, в металлографии САИ применяются в целях количественного анализа структур сплавов. Изображения таких структур отличаются большой неоднородностью яркости и цвета образов выделяемых объектов, а также их сложной структурой и формой, которые не могут быть проанализированы широко распространенными методами пороговой обработки 1, 2. Следовательно, актуальным в данной области является применение современных методов сегментации, использующих информацию о связности пикселей. Метод сегментации на основе выращивания областей, использующий информацию о связности пикселей в своем классическом описании 3, и основанные на нем другие алгоритмы 46 являются одними из наиболее перспективных в исследованиях и технических реализациях. Это связано с тем, что они имеют открытую к расширению нелинейную интегрированную структуру с обратными связями, предоставляющую широкие возможности по использованию разнородной информации в рамках динамического процесса 7. Однако существенным их недостатком является высокая вычислительная сложность, что ограничивает диапазон возможных приложений данных алгоритмов. При этом в задачах сегментации наибольшей значимостью обладает временная сложность алгоритмов 8, 9, хотя в отдельных случаях важна пространственная сложность 10. Проблема снижения временных затрат в процессе сегментации изображений может быть решена за счет уменьшения размера задачи при помощи введения схем интеллектуальной предварительной обработки изображения 11, что обусловливает зависимость данного оптимизационного решения от условий конкретной прикладной задачи и используемой системы машинного зрения. Другим способом решения проблемы снижения временных затрат является оптимизация алгоритмов сегментации по критерию времени обработки изображений 8, 9, 12. Основным параметром задач анализа изображений, от которого зависит время работы алгоритмов, является количество пикселей изображения размер задачи. В работе 8 определены временные затраты для сегментации изображений различных размеров, но не проведен анализ временной сложности алгоритма с получением оценки порядка роста времени его работы, важной с точки зрения более глубокого исследования проблемы. В работах 9, 12 временная оптимизация алгоритмов достигается за счет использования схем приближенных вычислений и, как следствие, нежелательного снижения точности сегментации. Для достижения цели временной оптимизации алгоритма сегментации в САИ необходимо решить задачи рассмотрения возможностей снижения временных затрат для САИ, использующей метод сегментации на основе выращивания областей 3, 7 оптимизации алгоритма реализации метода выращивания областей по критерию временной сложности при условии запрета на введение схем приближенных вычислений аналитического и статистического вычисления временной сложности исследуемых алгоритмов с получением асимптотических оценок порядка роста временных затрат при решении задачи сегментации. Большинство САИ, используемых для задач, не требующих выполнения распознавания объектов сцены, можно описать обобщенной функциональной схемой процесса последовательной обработки изображений рис. 1. С целью установить предпочтительное направление оптимизации представленной САИ проведем измерение времени выполнения выделенных блоков процессов. Определим следующую методику экспериментального исследования времени работы алгоритмов. В качестве объекта исследования используем стандартный тестовый набор изображений Berkeley Segmentation Dataset BSDS500, разработка группы компьютерного зрения UC Berkeley 13. На вход системы анализа подадим изображение 128035.jpg из данного набора. Для получения каждого значения времени выполнения произведем 10 замеров, после чего усредним результаты, рассчитаем среднеквадратическое отклонение и коэффициент вариации . В эксперименте используем программную реализацию САИ, основанную на методе сегментации, посредством выращивания и слияния областей 3, 7, 14, 15. В данной САИ сегментация производится по глобальному правилу, т. е. на каждом шаге работы алгоритма выращивания объединяются те сегменты и пиксели изображения, расстояние значение функции гетерогенности между которыми минимально на всем пространстве сегментируемой сцены 4. Результаты измерений, полученные при неизменных стандартных значениях параметров сегментации, представлены в табл. 1. Выполнение процесса сегментации изображения требует наибольшего времени, поэтому именно его оптимизация должна принести наибольшее снижение временных затрат для всей системы анализа. Рассмотрим далее состав и структуру системы процесса сегментации рис. 2. Процесс перевода исходного изображения в модель представления системы сегментации выполняет различные преобразования расчет текстурной информации, вычисление градиентного изображения, смену цветовой модели и др., подготавливающие данные для последующей сегментации. Процедура определения центров кристаллизации совершает расстановку пикселей элементарных сегментов, из которых на следующем этапе сегментации осуществляется выращивание областей. Блок выращивания областей производит начальное избыточное разделение изображения на сегменты. На этапе слияния областей сегменты начального разделения пошагово укрупняются за счет своих соседей до достижения полного объединения всех сегментов. Завершает сегментацию блок определения оптимального шага остановки слияний и возврата к вычисленному состоянию. Результаты оценки времени работы выделенных процессов в соответствии с описанной методикой эксперимента приведены в табл. 2. Из эксперимента следует, что процесс выращивания областей требует наибольших временных затрат, поэтому в первую очередь необходимо исследовать возможности оптимизации алгоритма выращивания областей. Процедура выращивания областей 3 подразумевает последовательный рост областей сегментов за счет пикселей на границе сегмента, на каждом шаге которого вычисляется функция гетерогенности расстояния в выбранном пространстве признаков для каждой пары сегмент граничный пиксель на всем пространстве сцены сегментации. При этом идет поиск оптимальной пары, для которой функция гетерогенности принимает минимальное значение. Далее выполняется приращение найденного граничного пикселя к найденному сегменту и изменение дескрипторов увеличившегося сегмента. Описанный итерационный процесс рис. 3 продолжается до тех пор, пока выращиваемые сегменты полностью не заполнят все изображение. Выполним теоретическую оценку временной сложности данного алгоритма. Пусть для сегментации используется изображение c шириной и высотой, количество пикселей изображения размер задачи сегментации . Тогда число итераций внешнего цикла выращивания количество приращений пикселей, см. рис. 3, блок можно точно определить как, 1 где количество заданных центров кристаллизации. Введем выражение для определения коэффициента заполнения изображения центрами кристаллизации 2 В последовательности операций, требуемых для приращения одного из пикселей к одному из сегментов внешний цикл, наибольшую вычислительную сложность представляет двойной внутренний цикл перебора всех граничных пикселей всех сегментов см. рис. 3, блоки . Замер времени работы алгоритма без выполнения данного цикла и сравнение его с замерами полной версии показали, что отношение времени выполнения цикла поиска оптимальной пары к продолжительности всех остальных операций алгоритма находится в диапазоне 331 1441 при сегментации изображения 128035.jpg 13 c размерами 30150 тыс. пикселей. Во внутреннем цикле выполняется операция вычисления функции гетерогенности см. рис. 3, блок . Количество вызовов данной функции определить точно для общего случая не представляется возможным, так как, очевидно, данная величина будет зависеть от содержания сегментируемого изображения и начальных условий сегментации. Заранее известно лишь то, что количество вызовов функции гетерогенности для рассматриваемого алгоритма равно количеству итераций двойного цикла перебора пар сегмент граничный пиксель. В целях приблизительной оценки порядка функции рассчитаем пределы ее изменения для отдельных итераций выращивания при условии const. Из логики процесса выращивания следует, что величина на ранних шагах внешнего цикла имеет малые значения, после чего начинает расти и спадает до нуля при завершении процесса, на последнем шаге которого получим минимальное значение Данная зависимость подтверждается типичным графиком рис. 4, полученным из эксперимента. Максимальное значение величина примет на первом шаге выращивания в случае начальной конфигурации с расстановкой центров кристаллизации сплошными столбцами через один рис. 5, слева либо сплошными строками через одну. Тогда приблизительно половина пикселей изображения еще до выращивания будет являться составляющими сегментов. Оценка возможных схем расстановки центров кристаллизации показала, что при данной схеме расстановки и условии 8-связности пикселей достигается максимальное количество одновременно существующих пар сегмент граничный пиксель, поэтому назовем данную схему расстановки максимально плотной. Использование данной расстановки обусловливает монотонно убывающий характер зависимости количества анализируемых пар сегмент граничный пиксель в процессе выращивания областей рис. 6. Из условия максимально плотной расстановки центров кристаллизации следует, что их количество тогда количество итераций процесса выращивания по формуле 1 3 Также нам необходимо связать максимальное количество пар сегмент граничный пиксель действительное для максимально плотной расстановки центров кристаллизации, с размером всего изображения . Из рис. 5, справа и других подобных расстановок с различными значениями ширины и высоты растра можно вывести следующее соотношение 4 На последнем шаге данного вывода было сделано допущение упрощающее дальнейшую приблизительную оценку вычислительной сложности алгоритма. Определим среднее количество анализируемых пар сегмент граничный пиксель для одной итерации внешнего цикла выращивания 5 Тогда можно сделать приблизительную оценку общего числа вычислений функции гетерогенности 6 Рассмотрим еще один пример с другой конфигурацией начальных условий сегментации, требующей, напротив, минимального количества вычислений. Минимальное количество итераций выращивания достигается при построчном заполнении изображения единственным сегментом. Для этого должны быть выполнены два условия изображение должно иметь равномерную яркость единственный центр кристаллизации должен быть установлен в одной из угловых точек изображения рис. 7. Для данного примера минимально плотной расстановки на каждом шаге выращивания количество анализируемых пар сегмент граничный пиксель Количество итераций процесса выращивания по формуле 1 1. Тогда приблизительная оценка величины для минимально плотной расстановки центров кристаллизации будет выглядеть как 7 В результате теоретического анализа оригинального алгоритма выращивания областей получено, что количество вызовов функции гетерогенности, р вно как и общее число итераций цикла анализа пар сегмент граничный пиксель в нем, имеют следующие асимптотические оценки временной сложности 8 В качестве модельной рассмотрим ситуацию процесса присоединения пикселя к сегменту с центром кристаллизации рис. 8. Пиксель, являющийся граничным для двух сегментов и, образует две пары сегмент граничный пиксель на основе связей и, значения функции гетерогенности для которых равны и соответственно. Исследуя оригинальный алгоритм выращивания областей см. рис. 3, можно заметить, что он обладает явной избыточностью вычислений. На каждом шаге выращивания происходит перебор и анализ всех пар сегмент граничный пиксель, хотя с момента прошлой итерации значения функции гетерогенности изменились только для пар, связанных с увеличившимся сегментом, дескрипторы которого были пересчитаны на прошлой итерации. Пересчет пар сегмент граничный пиксель с одновременной проверкой их оптимальности проходит в оригинальном алгоритме посредством перебора всех сегментов и постоянного переопределения пикселей, лежащих на их границах. В целях оптимизации данного процесса введем формализацию данных обо всех парах сегмент граничный пиксель в виде записейсвязей, хранящихся в общем списке см. рис. 8, а также перейдем к представлению граничного пикселя в виде элементарного сегмента минимальной площади. Из условия введенной формализации следует, что все связи должны быть сформированы при подготовке данных процесса сегментации. На каждой отдельной итерации процесса выращивания будет производиться обновление пересчет функции гетерогенности, значение только для связей, ассоциированных с объединяемыми в данный момент сегментом и сегментом граничным пикселем, что приведет к существенному снижению количества повторных вычислений функции гетерогенности. После приращения граничного пикселя к сегменту их связь удаляется из общего списка. Реализация метода выращивания областей посредством введенной модели данных должна иметь возможность временного исключения из рассмотрения связей, в которых не задействован ни один из центров кристаллизации. При соприкосновении двух областей, растущих из своих центров кристаллизации, связь между ними также будет выводиться из рассмотрения, так как объединение данных сегментов запрещено. В целях реализации описанных действий введем механизм блокировки связей, изменяющий статус активности связи . Кроме того, механизм блокировки позволяет вводить дополнительные ограничения на слияние определенных областей. Формат данных записи-связи для пары сегмент граничный пиксель показан на рис. 8. В целях сокращения временных затрат при поиске оптимальной пары сегмент граничный пиксель следует разделить общий список записей-связей на две части см. рис. 8 активную, содержащую разблокированные активные связи и пассивную, состоящую из заблокированных пассивных связей, временно не участвующих в процессе сегментации отмеченные пунктиром связи пикселя c соседними пикселями, не входящими в сегменты с центрами кристаллизации. Для первичного разделения списка на активную и пассивную части необходимо в начале сегментации провести соответствующую сортировку -сортировку сформированного списка связей. В процессе сегментации разделение реализуется перемещением обновленных связей из одной части списка в другую в соответствии с их состоянием. Необходимым условием обновления зависимых связей является наличие у сегментов собственных списков связей массивов указателей на записи-связи. Формат записи данных сегмента c массивом указателей на ассоциированные связи представлен на рис. 8. Для определения оптимальной связи на каждом шаге выращивания необходимо проводить поиск записи-связи с минимальным значением функции гетерогенности в активной части списка связей в приведенном примере связь является оптимальной. В момент слияния двух сегментов их списки связей должны объединяться и переходить к результирующему сегменту. При сопутствующем пересчете зависимых связей указатели на сегменты-предки должны заменяться указателем на новый сегмент. Анализ данного процесса показывает, что замена указателей в списке связей нового сегмента часто будет приводить к образованию записей-дубликатов. Данный процесс недопустим, так как является причиной возможных ошибочных попыток повторного объединения сегментов и увеличивает общие временные затраты. Следовательно, при объединении списков связей и их обновлении необходимо выполнять поиск и удаление записи-дубликата в результирующем списке зависимых связей, а именно в той его части, которая получена от другого сегмента-предка. Процесс выращивания должен продолжаться до тех пор, пока в активной части списка связей присутствуют записи-связи. Формализуем описанный алгоритм в виде схемы рис. 9. Основным объектом анализа, как и в предыдущем случае, станет основной цикл выращивания блоки . Очевидно, что количество итераций внешнего цикла выращивания 1 для нового алгоритма осталось неизменным, так как процесс выращивания состоит в строго последовательном увеличении областей по одному пикселю. Также остается неизменной оценка количества анализируемых пар сегмент граничный пиксель 48. Однако равенство здесь нарушается, так как в процессе анализа пар сегмент граничный пиксель активных записей-связей см. рис. 9, блок происходит лишь поиск оптимальной записи-связи, но не пересчет записей с вычислением значений функции гетерогенности. Поэтому отдельно рассчитаем теоретическую оценку количества вычислений функции гетерогенности. В оптимизированном алгоритме вычисление функции гетерогенности см. рис. 9, блок на каждом шаге выращивания производится только для связей, ассоциированных с последним выросшим сегментом. Следовательно, по сравнению с предыдущим расчетом количество вызовов функции гетерогенности уменьшится пропорционально числу активных сегментов. Число активных сегментов задается в самом начале процесса сегментации количеством центров кристаллизации . Тогда для максимально плотной расстановки центров кристаллизации получим 9 10 11 Можно заметить, что среднее количество связей одного сегмента в начале сегментации при максимально плотной расстановке по рис. 5, справа, как и по формуле 9, равно 6. Для случая минимально плотной расстановки см. рис. 7 оценка по формуле 7 имеет силу и для оптимизированного алгоритма, так как количество сегментов в данном случае равно 1. Запишем асимптотические оценки временной сложности задачи вычисления функции гетерогенности в зависимости от различных расстановок центров кристаллизации для нового алгоритма 12 Таким образом, аналитическая оценка временной сложности алгоритма показала, что в результате оптимизации алгоритма выращивания областей удалось существенно на снизить количество вычислений функции гетерогенности. Кроме того, максимальное снижение временной сложности на достигнуто для начальных конфигураций сегментации с высокими значениями степени заполнения центрами кристаллизации, при которых значительно возрастает размер задачи сегментации и, следовательно, увеличивается эффект от проведенной оптимизации. В оптимизированном алгоритме выращивания см. рис. 9 присутствуют процессы и структуры управления, аналогов которым нет в оригинальном алгоритме см. рис. 3, что делает невозможным комплексное сравнение обеих версий на основе теоретических оценок временной сложности. Тестовый набор BSDS500 13 состоит из множества разнообразных реальных изображений, имеющих единый размер 481 пиксель, 321 пиксель, 154 401 пиксель. В контексте задачи сравнения скорости работы алгоритмов важна относительная, но не абсолютная оценка времени выполнения. Следовательно, содержание обрабатываемых изображений не имеет существенного значения, и можно ограничиться одним реальным изображением из тестового набора 128035.jpg рис. 10, слева. Однако с точки зрения получения наиболее полной оценки временной сложности алгоритмов следует выделить изображения, обработка которых будет максимально и минимально сложной. Будем считать условную степень потенциальной сложности обработки изображений пропорциональной способности изображений к образованию сегментов с большим количеством активных связей. Тогда наибольшей сложностью обработки должны обладать изображения, содержащие высокодисперсные текстуры в пределе это изображение шума, а наименьшей однородные изображения например, градиентная заливка. На рис. 10 приведены соответствующие модельные изображения. В ходе эксперимента основной измеряемой величиной должно стать время выращивания областей, c. Наиболее существенным параметром изображения, влияющим на время сегментации, является размер изображения в пикселях. С целью вывести асимптотическую оценку порядка роста времени работы алгоритмов необходимо найти зависимость времени выращивания областей от размера изображения . Значения величины будем брать из диапазона 1 150 тыс. пикселей, для чего подготовим ряд копий исходных изображений с уменьшенным размером также воспользуемся одной копией с увеличенным размером 200 тыс. пикселей. Другим важным с точки зрения времени обработки параметром сегментации является количество центров кристаллизации или его нормированный относительно размера изображения аналог коэффициент заполнения изображения центрами кристаллизации . Значению 0,5 соответствует максимально плотная расстановка центров кристаллизации см. рис. 5, в остальных случаях используется равномерная решетчатая расстановка рис. 11, . Результаты сегментации реального изображения см. рис. 10, слева при различных значениях коэффициента представлены на рис. 11, . Вначале рассчитаем зависимость времени выращивания областей от параметра сегментации, для которого зададим диапазон изменения 0,00006 0,5 рис. 12. Показанные зависимости имеют преимущественно возрастающий характер, обусловленный растущим количеством обрабатываемых связей пар сегмент граничный пиксель. Однако для обоих алгоритмов зависимости имеют экстремум в точках, соответствующих 0,25. Это является следствием снижения общего количества обрабатываемых связей const при 0,25, так как в силу уравнения 1 снижается общее количество итераций процесса выращивания рис. 13. На отрезке 0,00006 0,00195 зависимости оптимизированного алгоритма выращивания областей см. рис. 10 показывают относительно высокие значения времени с последующим спадом. Кроме того, оптимизированный алгоритм значительно уступает оригинальному на отрезке 0,00006 0,001 для шумового изображения, незначительно на линии 0,00006 для реального изображения, в то же время для градиентного изображения данное явление отсутствует. Возрастание доли вычислительных издержек связано с поддержанием различных списков связей, отсутствующих в оригинальном алгоритме, что при крайне малом количестве сегментов снижает оптимизационный эффект от раздельного перерасчета зависимых связей. Для шумового изображения как вырожденного случая реального текстурного изображения количество активных связей одного сегмента максимально, так как единственный заполняющий всю площадь сегмент имеет форму с минимальной компактностью максимальным периметром. При возрастании коэффициента содержание обрабатываемых изображений оказывает меньшее влияние на время выращивания, что на практике обеспечивает стабильное преимущество оптимизированного алгоритма при выполнении начального разбиения изображения на суперпиксели. Рассчитаем зависимости времени выращивания областей от размера изображения рис. 14 для обоих алгоритмов. Посредством степенной аппроксимации зависимостей, полученных для реального изображения, запишем статистические оценки асимптотической временной сложности табл. 3. В результате эксперимента на реальном изображении удалось установить, что оптимизированный алгоритм выращивания областей в среднем показывает более высокую скорость работы по сравнению с оригинальным алгоритмом реализация оптимизированного алгоритма выполняется в среднем в 3,4 раза быстрее оригинального алгоритма, что подтверждается статистической оценкой временной сложности достигнуто снижение на . Однако существует исключение при крайне низком размере исходного изображения 1 тыс. пикселей оригинальный алгоритм требует меньшего времени вычислений по сравнению с оптимизированным. Это не влияет на эффективность реальных приложений, так как для САИ является редким частным случаем. В результате проведенного анализа САИ в целях поиска путей сокращения временных затрат было выбрано направление оптимизации алгоритмов реализации используемого в САИ метода выращивания областей. Выполненные аналитическая и статистическая оценки временной сложности алгоритмов подтверждают эффективность разработанного алгоритма достигнуто снижение размера задачи повторных вычислений функции гетерогенности в процессе сегментации на статистическая оценка временной сложности выращивания снижена на, что соответствует повышению скорости сегментации в несколько раз. Данный эффект был получен без введения схем приближенных вычислений, приводящих к потере точности сегментации. Следствием существенного сокращения количества пересчетов связей сегментов является возможность использовать более сложные функции гетерогенности с целью повысить качество и точность сегментации. Особенностью разработанного алгоритма является возросший уровень организации системы сегментации в рамках САИ вследствие введения новых разнородных процессов и схем управления. Недостатком, требующим дальнейших исследований, является низкая временная эффективность сегментации текстурных изображений при малом заданном количестве сегментов. 