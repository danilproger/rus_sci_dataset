ОТРИЦАЕМОЕ ШИФРОВАНИЕ  НА ОСНОВЕ БЛОЧНЫХ ШИФРОВ 

известные способы отрицаемого шифрования с разделяемым ключом, удовлетворяющие условию неотличимости по криптограмме от вероятностного шифрования, обладают сравнительно малой производительностью. Цель работы — повышение быстродействия алгоритмов отрицаемого шифрования, основанных на использовании блочных шифров. Методы: обращение блочного шифрующего преобразования, статистические эксперименты, одновременное шифрование двух независимых сообщений на двух различных ключах. Результаты: разработан новый способ выполнения процедуры отрицаемого шифрования, отличающийся от известных аналогов тем, что при зашифровании двух сообщений блочный шифр используется для выполнения прямого блочного преобразования по первому ключу и обратного преобразования по второму ключу. Получены формулы для оценки параметров алгоритмов на основе предложенного способа. Практическая значимость: предложенный способ представляет интерес для использования в средствах защиты информации от несанкционированного доступа.

В целях защиты информации от атак с принуждением предложены процедуры отрицаемого шифрования ОШ 1. В атаках указанного типа предполагается, что атакующий перехватывает криптограмму и принуждает отправителя и получателя раскрыть исходное сообщение и использованные при шифровании ключи и случайные значения если последние применялись. Различают ОШ по открытому ключу получателя сообщения и по разделяемому секретному ключу, которым владеют отправитель и получатель. При этом второй тип ОШ главным образом связывается с шифрованием двух и более сообщений на различных ключах и соединением независимых криптограмм в единый шифртекст. При принуждающей атаке предполагается достаточным предоставление атакующему только одного из ключей фиктивного ключа для расшифрования соответствующего ему участка шифртекста и восстановления фиктивного сообщения 1. При этом оставшаяся часть шифртекста интерпретируется как случайная последовательность, использованная для маскирования криптограммы. Несмотря на явную наивность такого понимания ОШ по разделяемым секретным ключам, оно лежит в основе ряда средств компьютерной безопасности, например, Best Crypt www.jetico. comproductspersonal-privacybestcrypt-containerencryption, FreeOTFE www.softpedia.comget SecurityEncryptingFreeOTFE.shtml, True Crypt www.truecrypt.org. Однако для защиты отдельных сообщений, которыми обмениваются удаленные пользователи, и отдельных файлов, хранимых в постоянной памяти ЭВМ, а также для построения защитных механизмов типа криптографических обманных ловушек 2, ориентированных на навязывание атакующему ложной информации, наивный подход к построению процедуры ОШ по разделяемому ключу представляется недостаточным. Действительно, наличие участков шифртекста, которые не используются для раскрытия фиктивного сообщения, дает атакующему существенные основания утверждать о неполноте раскрытия шифртекста. Устранение этого недостатка обеспечивается требованием неотличимости шифртекста, полученного в результате ОШ, от шифртекста, полученного в результате вероятностного шифрования фиктивного сообщения по фиктивному ключу, впервые обоснованным в работе 2 как одно из важных условий для обеспечения стойкости к принуждающим атакам. В работе 3 описан общий способ построения алгоритмов ОШ, неотличимых по шифртексту от алгоритмов вероятностного шифрования, с использованием хэш-функций, а также представлен вариант реализации аналогичных алгоритмов с использованием блочных шифров. Однако недостатком способа 3 является сравнительно низкая производительность процедур ОШ, реализуемых на его основе. В настоящей работе решается задача повышения производительности процедур ОШ, построенных на основе использования блочных шифров. Предложенный способ обеспечивает построение алгоритмов ОШ, обладающих в 100 и более раз высокой скоростью шифрования по сравнению с алгоритмами ОШ, построенными на основе способа 3. Существенный выигрыш в производительности достигается за счет того, что в процедуре ОШ блочный шифр используется не только в режиме шифрования, но и в режиме расшифрования. Способ, предложенный в работе 3, позволяет любое трудно обратимое однонаправленное преобразование использовать для построения процедуры ОШ. В качестве однонаправленного преобразования рассматривались хэш-функции и блочные шифры. Отрицаемое шифрование предлагалось в виде одновременного шифрования двух сообщений секретного и фиктивного по двум независимым ключам, один из которых фиктивный ключ предназначен для раскрытия в случае принуждающей атаки. Способ легко расширяется на случай одновременного шифрования трех и более сообщений, однако при этом существенно падает производительность процедуры ОШ. Такое расширение интересно с теоретической точки зрения, но для практического применения его обоснование неочевидно, поэтому в дальнейшем будет рассмотрен только случай одновременного шифрования двух сообщений. Важным требованием к процедурам ОШ является неотличимость криптограммы, формируемой в результате выполнения ОШ, от криптограммы, формируемой при вероятностном шифровании фиктивного сообщения. Это требование обеспечивается тем, что с алгоритмом ОШ ассоциируется некоторый алгоритм вероятностного шифрования шифрования, в котором используются случайные значения 2, 3. Наряду с этим для последнего доказывается, что при определенных случайных значениях фиктивное сообщение в результате его шифрования по фиктивному ключу преобразуется в криптограмму, полученную в результате выполнения процедуры ОШ. При этом сама процедура ОШ также может быть как детерминистической, так и вероятностной. В последнем случае при выполнении процедуры ОШ используются случайные значения, которые определяют выработку конкретной криптограммы из множества возможных. В работе 3 предложен способ вероятностного ОШ, основанный на использовании односторонних преобразований, например хэш-функций. В соответствии со способом 3 при использовании хэш-функции процедура ОШ реализуется следующим образом. Пусть даны сообщения фиктивное и секретное, представленные в виде последовательностей -битовых знаков, и, соответственно. Одновременное шифрование этих сообщений по ключам и состоит в подборе таких случайных -битовых значений, 2, для которых одновременно выполняются соотношения, mod 2 и, mod 2, где предполагается использование хэш-функций, выходное значение которых имеет разрядность не менее бит. Значение счетчика включено в аргумент хэш-функции для улучшения статистических свойств криптограммы при сравнительно малых значениях и . Если последние два значения достаточно велики, то можно обойтись без задания зависимости значения хэш-функции от номера преобразуемого знака исходного текста. В случае построения процедуры вероятностного ОШ на основе -битового блочного шифра 2 одновременное шифрование пары сообщений и по ключам и выполняется как подбор случайных значений, удовлетворяющих следующим двум условиям mod 2 и mod 2 . 1 Формируемая криптограмма имеет вид, . Расшифрование выполняется по формуле mod 2, где знаки восстановленного текста или при или соответственно. При использовании блочных шифров обеспечивается более высокая скорость ОШ по сравнению со случаем использования хэш-функций. Однако по сравнению с производительностью битс блочного алгоритма шифрования достигаемая скорость ОШ существенно меньше 2 . 2 Наиболее существенный вклад в снижение скорости шифрования при выполнении процедуры ОШ вносит необходимость многократного вычисления значений и для подбора такого, при котором одновременно выполняются соотношения 1. Действительно, для текущего случайного значения вероятность выполнения каждого из двух условий 1 равна 2, а вероятность их одновременного выполнения 2 . Существенное повышение производительности процедуры ОШ, основанной на выполнении шифрующих блочных преобразований, может быть достигнуто использованием свойства обратимости функции блочного шифрования, которое принципиально отличает блочные шифры от хэш-функций. Однако для эксплуатации этого свойства требуется использовать в качестве знаков криптограммы выходные значения функции, а не входные, как это имеет место в способе 3. Предлагаемый новый вариант построения процедур ОШ на основе блочных шифров описывается в следующем разделе. Предлагаемый способ ОШ реализуется как выполнение процедуры одновременного шифрования сообщений и в соответствии с формулами, и, 3 где -битовые блоки знаки криптограммы и случайные значения. Восстановление знаков исходных сообщений из криптограммы, предполагается осуществлять по формулам, и, 4 где функция расшифрования, обратная к функции, т. е., а случайные -битовые значения и в выходном значении функции отбрасываются 2, в результате чего получают знаки и . В соответствии с 3 процедура ОШ требует нахождения двух случайных значений и, которые обеспечивают выполнимость условия, . Для случайно выбранных значений и вероятность выполнения последнего равенства имеет достаточно малое значение 2 2, что ограничивает скорость ОШ при использовании непосредственного подбора пар случайных значений и . Существенный выигрыш в производительности ОШ достигается применением следующего варианта нахождения блока криптограммы по значениям и, обеспечивающего выполнение условий 3 и лежащего в основе алгоритма 1 рис. 1. Предварительно выбирается произвольное значение и вычисляется значение, затем значение, которое рассматривается как конкатенация -битового значения и -битового значения, т. е., . При нахождении такого значения, при котором, полученное значение может быть взято в качестве блока криптограммы . При этом вероятность выполнения равенства совпадение случайного -битового значения с заданным -битовым значением равна 2 2, что определяет существенное повышение скорости ОШ по сравнению со способом 3. совместное шифрование сообщений и . 1. Установить значение счетчика 1. 2. Установить значение счетчика 1. 3. Сгенерировать случайное -битовое число 4. Вычислить значение, . 5. Вычислить значение, где выходное -битовое значение функции расшифрования интерпретируется как конкатенация -битового значения и -битового значения . 6. Сравнить значения и . Если, то взять в качестве значения значение и перейти к шагу 7, в противном случае перейти к шагу 3. 7. Если, то прирастить значение счетчика 1, вычислить 1 и перейти к шагу 4, иначе вывести сообщение Шифрование пары знаков и не выполнено. Вопрос о выборе значения рассмотрен в следующем разделе. 8. Если, то прирастить значение счетчика 1 и перейти к шагу 2, иначе СТОП. Алгоритм 1, описывающий процедуру ОШ, формирует выходную криптограмму, которая вычислительно неотличима от криптограммы, полученной в процессе следующего алгоритма вероятностного шифрования фиктивного сообщения. Данный алгоритм относится к вероятностным процедурам ОШ, в которых в ходе шифрования используются случайные значения. ассоциируемый алгоритм вероятностного шифрования фиктивного сообщения по фиктивному ключу . 1. Установить значение счетчика 1. 2. Сгенерировать случайное -битовое число . 3. Вычислить значение, . 4. Если, то прирастить значение счетчика 1 и перейти к шагу 2, иначе СТОП. Наличие алгоритма 2 явно показывает, что алгоритм 1 удовлетворяет требованию неотличимости ОШ от вероятностного шифрования. Действительно, потенциально реализуем выбор случайных значений, при котором выходная криптограмма алгоритма 2 совпадает с выходной криптограммой алгоритма 1 при одних и тех же значениях и . расшифрование криптограммы по ключу . 1. Установить ключ шифрования восстановление фиктивного сообщения или восстановление секретного сообщения и значение счетчика 1. 2. Вычислить значение div 2 . 3. Если, то прирастить значение счетчика 1 и перейти к шагу 2, иначе СТОП. Алгоритм 3 выдает выходное сообщение, которое совпадает с фиктивным сообщением, если было установлено значение ключа, или с секретным сообщением, если было установлено значение ключа . Описанные алгоритмы 1, 2 и 3 реализуют передачу секретного сообщения между удаленными пользователями, которые предварительно согласовывают общий секретный ключ и общий фиктивный ключ по следующему сценарию, стойкому к принуждающей атаке. 1. Алиса отправитель генерирует фиктивное сообщение, после чего, используя алгоритм 1 и ключи и, зашифровывает совместно сообщения и и полученную криптограмму направляет по открытому каналу Бобу получателю. 2. Боб расшифровывает криптограмму, используя алгоритм 3 и ключ, и получает секретное сообщение . 3. Ева атакующий, имеющая возможность наблюдать за трафиком открытого канала, перехватывает криптограмму, после чего принуждает одновременно Алису и Боба раскрыть сообщение, содержащееся в криптограмме, и ключ шифрования. 4. Алиса и Боб предоставляют Еве ключ и алгоритм 2 как алгоритм, использованный для зашифрования переданного полученного сообщения, и алгоритм 3 как алгоритм для расшифрования сообщения. 5. Ева расшифровывает криптограмму, используя алгоритм 3 и ключ, в результате чего получает сообщение . После этого Ева зашифровывает сообщение по ключу в соответствии с алгоритмом 2, используя случайные -битовые значения, восстановленные при расшифровании криптограммы, и убеждается, что сообщение действительно преобразуется в криптограмму . Для того чтобы уличить Алису и Боба в обмане, Ева должна взломать базовый алгоритм блочного шифрования, т. е. вычислить ключ, что практически невыполнимо, если разрядность этого ключа составляет 128 бит и более, а в качестве базового алгоритма используется стойкий блочный шифр, например ГОСТ 28147 4. Производительность алгоритма, описанного в предыдущем разделе, существенно зависит от среднего числа выбираемых значений при шифровании одной пары знаков и . Значение зависит от вероятности выполнения на шаге 6 условия, которая равна Pr 2 и определяется разрядностью знаков и . Вероятность невыполнения условия для последовательных значений 1, 2, равна Pr 1 2, 5 откуда получаем значение вероятности выполнения условия на -м шаге Pr 1 1 2 6 и значение 2 21 1 2 1 1 2 1 1 2 . Более удобной является приближенная формула Pr 2, 7 с помощью которой получаем следующую оценку производительности предложенного алгоритма ОШ 2 . 8 Сравнение с формулой 2, относящейся к ОШ по способу 3, показывает, что предложенный вариант реализации процедуры ОШ на основе блочных шифрующих преобразований дает увеличение производительности ОШ примерно в 2 раз. Значение в предложенном алгоритме выбирается с учетом получения достаточно малого значения Pr, т. е. вероятности того, что шифрование текущей пары знаков и не будет выполнено. Из формулы 5 получаем уравнение для вычисления по заданному значению Pr Pr 1 2 . 9 Оценим порядок некоторого значения, для чего подставим в 5 значение 2 2 и воспользуемся соотношением Pr 1 2 1 2 2 12. 10 Обозначая целую часть отношения 2 как некоторое натуральное число, получаем Pr 12 12 . 11 Задавая пороговое значение вероятности Pr в виде отрицательной степени числа 2, легко вычислить 2 2 2 . 12 Последнее значение может быть использовано в качестве значения в алгоритме 1, задающем процедуру ОШ. Выбор больших значений параметра в алгоритме 1 практически не влияет на его производительность, поскольку случаи, когда требуется выполнить число попыток выбора значения, существенно превосходящее значение, встречаются сравнительно редко. Типичная зависимость количества выборок значений от номера шифруемого блока при значении параметра 4 показана на рис. 2. Из графика видно, что большинство значений лежит в пределах 20 выборок на блок. Среднее число выборок значений, определенное экспериментально для различных режимов ОШ, близко к теоретическим значениям, вычисляемым по формуле 7. Значение параметров и следует выбирать таким образом, чтобы число всех возможных случайных значений превосходило, для чего достаточно выполнения неравенства . Поскольку 2, последнее неравенство выполняется при 2 2 log Pr . Варианты выбора параметров алгоритма ОШ, представляющие практический интерес, приведены в табл. 1. Экспериментальная проверка эффективности работы разработанного способа отрицаемого шифрования была выполнена на базе программной платформы Microsoft .NET Framework. Результаты измерений скорости шифрования приведены в табл. 2. Производительность предложенного способа ОШ прямо пропорциональна производительности используемого алгоритма блочного шифрования. Современные аппаратные реализации алгоритма ГОСТ 28147 обеспечивают производительность 1000 Мбитс и более. При таких реализациях производительность ОШ на базе ГОСТ 28147-89 будет достигать значения 6,3 Мбитс. Также ощутимое влияние на скорость ОШ оказывает значение параметра . Однако повышение быстродействия за счет уменьшения значения ограничивается тем, что при этом возрастает отношение размера криптограммы к размеру шифруемых сообщений. По сравнению со способом ОШ 3, основанным на использовании блочных шифров, алгоритм 1 обладает производительностью в 2 раз более высокой при использовании одного и того же базового блочного шифра. Значение коэффициента равно 16 при 4 и 256 при 8. Впервые алгоритмы ОШ, удовлетворяющие требованию неотличимости от вероятностного шифрования, предложены в работе 2 с использованием операций возведения в большую дискретную степень по простому модулю. При таком подходе к построению алгоритмов ОШ требуется выполнение самостоятельных исследований их стойкости. В работе 3 впервые предложено построение алгоритмов ОШ указанного типа с использованием известных хэш-функций и алгоритмов блочного шифрования, стойкость которых хорошо исследована. Основной результат настоящей работы состоит в разработанном новом способе ОШ, удовлетворяющего требованию неотличимости от вероятностного шифрования и основанного на использовании блочных шифров. Предложенный способ позволяет построить алгоритмы ОШ, производительность которых существенного выше в 16 раз и более по сравнению с алгоритмами, основанными на способе 3. Применение стойких блочных шифров для реализации предложенного способа ОШ обеспечивает стойкость разрабатываемых на его основе алгоритмов ОШ. Действительно, гипотетическая успешная атака на такие алгоритмы ОШ, например атака на основе известных или специально подобранных исходных текстов, может быть применена и для взлома базового алгоритма шифрования. Другим результатом выполненной работы является получение формул для оценки значений параметров алгоритма ОШ, основанного на предложенном способе. Из данных табл. 1 видно, что производительность не зависит от выбираемого значения, что объясняется малой вероятностью случаев, когда процесс шифрования пары знаков исходных тестов и потребует выполнения циклов, включающих шаги 3 6 алгоритма ОШ, если задано малое значение вероятности Pr . Экспериментом подтверждено, что среднее число выбираемых значений много меньше значения . В качестве базового алгоритма блочного шифрования представляет интерес использование 64-битовых скоростных шифров с высокой эффективностью аппаратной реализации 68, что позволит достигнуть производительности ОШ, равной 10100 Мбитc. Более высокая производительность достигается при использовании блочных шифров с малым размером входного блока, однако использование значений 32 требует решения задачи разработки режимов использования ОШ, обеспечивающих улучшение маскирования статистических свойств исходных текстов. Последнее представляет самостоятельную задачу отдельного исследования. Исследование выполнено при финансовой поддержке РФФИ в рамках научного проекта 14-07-00061-а. 