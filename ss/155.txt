СИСТЕМНЫЙ АНАЛИЗ ТРЕБОВАНИЙ ЗАДАЧИ ВЕСОВОГО КОНТРОЛЯ 

Разработаны методическая и теоретическая базы для создания автоматизированной системы весового контроля. Проведены системный анализ и формализация предметной области на всех этапах жизненного цикла сложных изделий авиаи машиностроения.

 Последние два десятилетия характеризуются повышением роли информационных технологий и появлением широкого спектра средств автоматизации разнообразных видов деятельности от решения научных, проектно-конструкторских, технологических, производственных задач до автоматизации торговой, коммерческой, банковской и других видов деятельности 1. Целью данной работы является демонстрация одного метода системного анализа и проектирования методической базы на примере построения АСВК. Проводится формализация различных аспектов архитектуры, выделяются основные паттерны проектирования, обеспечивающие реализацию всех функциональных требований, предъявляемых к АСВК. В качестве основного подхода к достижению заявленной цели используется системный анализ архитектуры. Проводится последовательный анализ процессов предметной области, структуры системы, альтернатив и вариантов применения различных технологических платформ для программной архитектуры. В ИТ-отрасли термин архитектурная модель может применяться к различным аспектам. Выделим четыре вида моделей функциональная, информационная, технологическая, программная. Функциональная модель Данная модель определяет стратегию организации, структуру и ключевые бизнес-процессы в рамках организации. Основное внимание уделяется их анализу и формализации. В составе основного бизнес-процесса АСВК выделяются два типа процессов внешний и внутренний. Целью внешнего процесса АСВК является обеспечение обмена внешней информацией АСВК в информационной среде. Под внешней понимается информация, циркулирующая между участниками внешнего процесса, в отличие от внутренней информации, циркулирующей в рамках внутреннего процесса между подразделениями конкретного участника внешнего процесса. Выделяются следующие участники внешнего процесса головные ОКБ, предприятия-смежники, информационный центр, главное управление. Внешний процесс АСВК представлен в одном экземпляре и является связующим в распределенной сети участников. Организационно-функциональная структура процесса представлена на рисунке 1. Целью внутреннего процесса АСВК является обеспечение ввода, обработки и хранения сведений о массах, МИХ и центровочных характеристик на предприятии. Внутренний процесс АСВК в рамках системы представлен по одному экземпляру, функционирующему в каждом из узлов АСВК. В настоящей работе в связи с целесообразностью учета специфики уже существующих производственных процессов участника предлагаются рассмотрение внутреннего процесса АСВК в качестве черного ящика и формализация информационных структур. Внутренний процесс АСВК должен способствовать установлению в организациях и на предприятиях единых правил контроля массы и МИХ изделий. Информационная модель Модель определяется информацией и средствами управления информацией предприятия. Информация становится наиболее важным инструментом организации в достижении поставленных целей. Системная архитектура должна обеспечивать информационную архитектуру, выступая в качестве эталонного каркаса. При формировании банка данных весовых характеристик в АСВК используется существующая практика декомпозиции изделия на агрегаты, системы, узлы, сборочные единицы 2. Таким образом, изделие-проект представляется в виде древовидной структуры в соответствии с декомпозицией самого изделия на агрегаты, системы и узлы с обязательным введением систем координат для описания каждой сборочной единицы. Взаимосвязи между весовыми сущностями представлены в виде диаграммы Питера Чена на рисунке 2. Технологическая и программная модели Технологическая модель системы соответствует системной архитектуре. Системная архитектура определяет программно-аппаратные подсистемы, модули и связи между ними, которые в целом охватывают и описывают интеграционную информационную среду организации. Бизнес-архитектура сопоставляется системной архитектуре. Системная архитектура должна обеспечить достижимость целей организации посредством использования интеграционной информационной среды, которая обеспечивает весь жизненный цикл продукции. Назначение системной архитектуры это обоснование фундамента, на основе которого могут быть разработаны все программные приложения и выстроены все информационные потоки. Программная модель определяет нижний уровень, представленный в виде конкретных программно-аппаратных решений. Программная архитектура включает в себя модель предметной области в терминах и на языке программной вычислительной среды. С программной архитектурой связана специфика реализации решения, обусловленная применением той или иной технологической платформы, что является одной из отличительных черт системной архитектуры, которая, в отличие от программной архитектуры, является инвариантной к реализации 3. Архитектура системы представлена в виде типового решения модельпредставлениеконтроллер 4, что подразумевает выделение трех отдельных ролей. Модель это объект, предоставляющий некоторую информацию о предметной области. У модели нет визуального интерфейса, она содержит в себе все данные и поведение, не связанные с интерфейсом. Представление отображает содержимое модели средствами графического интерфейса. Все изменения информации обрабатываются третьим участником системы контроллером. Контроллер получает входные данные от пользователя, выполняет операции над моделью и указывает представлению на необходимость соответствующего обновления. В этом плане графический интерфейс рассматривается как совокупность представления и контроллера. Клиентское приложение АСВК обеспечивает уровень представления и взаимодействия с серверными объектами, реализующими программную логику системы . Взаимодействие заключается в отправке на веб-сервер запросов пользователя на просмотр, изменение и поиск данных. Для передачи информации используются стандартные Internet-протоколы передачи данных HTTP, SOAP. Серверная часть системы представлена в виде фасада веб-сервисов, принимает и обрабатывает запросы пользователей, генерирует ответы на запросы. Пользователь системы осуществляет работу на своем персональном компьютере, используя клиентское ПО. Сервисы взаимодействуют с СУБД на основе SQL-запросов с использованием объектов доступа к данным. Клиентская и серверная части АСВК в совокупности представляют типовое интеграционное решение Портал 5. Фактически в основе ядра предлагается использовать концепцию HTTP-модулей все запросы перенаправляются в программный модуль, который на основе анализа вебадреса узла и передаваемых параметров формирует соответствующий отклик системы. Технически это осуществляется с использованием типового решения Front Page Controller 5. Подытоживая, отметим, что в статье проведен анализ требований и предложены подходы к формализации предметной области и архитектуры программно-технического решения в машиностроении на примере автоматизированной системы весового контроля. Описаны основные методы, введено подразделение на виды моделей интеграционной информационной среды. Предложенный подход может использоваться как основа для создания отраслевого стандарта по формализации CALS-требований к интеграционной информационной среде в машиностроении. 