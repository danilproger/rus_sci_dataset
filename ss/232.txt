ВЫСОКОПРОИЗВОДИТЕЛЬНЫЕ ВЫЧИСЛЕНИЯ В ПРАКТИКЕ МОДЕЛИРОВАНИЯ РОСТА ПЕРКОЛЯЦИОННЫХ КЛАСТЕРОВ 

Рассматривается возможность использования современных суперкомпьютеров при решении ресурсоемких задач мультиагентного моделирования роста перколяционных кластеров. Предложен усовершенствованный вариант многопроцессорного алгоритма многократной маркировки перколяционных кластеров Хошена–Копельмана. Демонстрируется возможность выявления зависимостей латентных периодов распространения эпидемий от вероятности инфицирования агрегатов популяционных представителей и формирования пороговых значений перехода локальных эпидемий в крупномасштабные пандемии..

 При компьютерном моделировании поведения систем, которые принято называть сложными, нередко приходится сталкиваться с проявлением феномена скачкообразного, лавинообразного изменения характеристик поведения под воздействием сравнительно плавных изменений одного или нескольких ключевых параметров. Для разрешения подобных проблем целесообразно использовать алгоритмы формирования и роста перколяционных кластеров. На феномен перколяции впервые обратили внимание Флори 1 и Стокмайер 2 при изучении эффектов формирования гелей и полимеризации. Однако термины перколяция и теория перколяции в своем современном толковании чаще всего связывают с публикацией работы Броадбента и Хаммерсли 3. Заслуживают внимания возможности использования подобного феномена при моделировании процессов распространения массовых эпидемий, когда незначительные изменения вероятности инфицирования отдельных представителей могут привести к скачкообразному изменению поведения всей популяции . Для реализации алгоритмов перколяции в качестве наиболее распространенной среды интерпретации принято использовать так называемые решеточные модели. Если цепочка соединяет две противоположные стороны решетки, то такой кластер и будет перколяционным, сигнализирующим об изменении характера поведения. Процессы на виртуальных решетках изучены достаточно хорошо, по отношению к ним доказан ряд строгих утверждений. Широкомасштабные приложения подобных процессов зачастую требуют использования возможностей современного метакомпьютинга и разработки соответствующих мультиагентных моделей компьютерной имитации, а также специализированных алгоритмов распараллеливания. Всем занятым узлам перколяционной решетки приписываются различные кластерные метки, и всего лишь за один проход удается выяснить, к какому кластеру относится тот или иной узел решетки. Каждой такой группе ставится в соответствие метка с минимальным номером. Таким образом, на каждом шаге работы алгоритма ММК все замены номеров меток отражаются во всех узлах решетки . В итоге все узлы с одинаковыми метками оказываются принадлежащими одному и тому же графу, то есть узлы решетки подразделяются в соответствии с их принадлежностью к тому или иному кластеру. Механизм линковки меток алгоритма ММК ХошенаКопельмана На суперкомпьютерах с большим количеством процессоров использовался один из многопроцессорных вариантов алгоритма ММК, когда каждому процессору назначалась своя группа узлов. Был выбран многопроцессорный вариант алгоритма, совпадающий с однопроцессорным прототипом за одним исключением вместо прохода по всей решетке каждый процессор активизировал действия алгоритма ММК только на назначенной ему группе узлов с последующим обменом информацией между процессорами. Алгоритм завершал свою работу, когда на очередном шаге обмена метки всех групп узлов уже не изменялись. Алгоритм был усовершенствован механизмом линковки меток, в результате чего удалось добиться зависимости времени его работы от размера решетки N как O. Линковка меток начиналась с того, что пронумерованным узлам решетки ставились в соответствие массив меток и массив ссылок . Значения массива меток и массива ссылок инициализируются номерами соответствующих узлов. Например, для определения метки узла под номером 7 в массиве ссылок следует обратиться к элементу 7. Таким образом, в качестве значения ссылки на элемент 7 берется значение 7. Но если значение ссылки в массиве ссылок оказывается равным номеру элемента этого массива, то по ссылке не надо никуда переходить и остается лишь обратиться к тому же самому номеру элемента в массиве меток . Как видно из рисунка 1, в процессе изменения значений меток изменяются не сами значения меток, а значения элементов массива ссылок. Далее, если узел 1 связан с узлом 4, для 4 в массиве ссылок проставлялся адрес метки на узел 1 . Аналогично, если узел 8 связан с узлом 6, для 8 в массиве ссылок проставляется адрес метки на узел 6. После выполнения этих операций для получения значения метки узла 8 необходимо провести описанные выше действия, то есть обращаться к массиву ссылок по номеру 8 и получать адрес 6, обращаться к массиву ссылок по номеру 6 и получать адрес 2, обращаться к массиву ссылок по номеру 2 и получать адрес 2. Так как адрес совпадает с номером узла, следует обращаться в массив меток к элементу под номером 2 и получать для узла 8 метку, равную 2. После подобной перелинковки массив ссылок приводится к виду, когда количество переходов по адресам не превышает 1. После определения координат узлов вычислялась площадь ячейки S в км. Так как на карте ячейка имеет форму квадрата, а на поверхности земли форму правильной пирамиды, карта рассматривалась как равноугольная цилиндрическая проекция Меркатора. Из-за малости ячейки считалось, что она имеет форму прямоугольника. Таким образом, численность населения N определялась суммированием по всем пикселям. Представление о численности населения формировалось на основе допущения, что наибольшая плотность сосредоточена в городах и его окрестностях, то есть, если численность N10 000 человек, ячейке соответствовал город с населением N, если 1 000N10 000, городу приписывалась вероятность численности N10 000. Если в соседних ячейках располагались города с численностью N100 000, они объединялись в один большой город. Численность населения всех городов и их координаты заносились в БД. Формирование перколяционной решетки взаимодействий Для уменьшения ресурсоемкости задачи представители населения распределялись по кластерам размера n в предположении, что в любом региональном образовании люди одного кластера общаются чаще или реже с людьми из другого кластера. Так, кластеры, взаимодействие которых отображено на рисунке 3, характеризуются 1k степенью перекрытия, то есть долей представителей, контактирующих с представителями другого кластера s вероятностью контакта за время t между представителями кластеров n числом представителей. Пусть p вероятность того, что после одного контакта один заболевший представитель заразит другого, а p вероятность того, что заболевший n n k из одного кластера заразит представителя другого. Тогда число представителей одного кластера, знакомых с людьми из другого кластера, будет nk, а число контактов этих людей за время t с людьми из другого кластера s nk. Предположим, что кластеризация города имеет сугубо территориальный характер. Тогда соответствующие кластеры города можно объединять в плоскую решетку . Введем параметр g как вероятность того, что кластер имеет связь в пределах одного города с другим кластером, находящимся по соседству. Предположим также, что существует радиус R, на расстоянии которого находится 80 всех знакомых из данного города. Если за q примем количество связей между людьми из города i с людьми из города j, то значение q можно также воспринимать как характеристику числа знакомств между представителями кластеров двух городов, находящихся на расстоянии, меньшем R. Введем параметры g, g и g в качестве межгородских примесных связей . При этом в качестве акцептора связи предпочтение будем отдавать кластерам, находящимся в крупных городах. Располагая правдоподобными данными социологических исследований, параметры модели можно задать более точно. Применяя многопроцессорный вариант алгоритма ММК анализируемой решетки, вычислялся максимальный размер кластера. Болезнь, вспыхнувшая в любом узле, с большей степенью вероятности приобретала способность перейти в эпидемию и охватить большую часть перколяционной решетки. При сборе информации о численности были получены данные по 56 976 городам и сохранены в формате номер города, численность населения, широта, долгота. Алгоритм формирования решетки взаимодействия представителей популяции, реализованный на Java, позволил создать исходную решетку и сохранить ее в трех файлах исходной решетке grid и 2 файлах ребер . g На базе исходной решетки для каждого значения входного параметра p формировалась анализируемая решетка и запускался многопроцессорный вариант алгоритма ММК. Вычисления проводились в Межведомственном суперкомпьютерном центре на суперкомпьютере mvs100k с общим количеством процессоров 11 680. Визуализация полученных результатов проводилась с помощью Google Maps Api . Определялись метки зараженных узлов данного города. Производился последовательный обход меток всех узлов из загруженного массива, и, если метка являлась потенциально зараженной, город, в который входил узел с данной меткой, также объявлялся потенциально зараженным. Таким образом, формировался список потенциально зараженных городов. Этот список сохранялся в виде javascript-команд Google Maps API в html-файле. В зависимости от численности населения зараженный город помечался красным кругом определенного размера. Для просмотра результатов html-файл запускался в браузере. В теории перколяции получен ряд строгих математических результатов, однако основной прогресс достигнут на пути использования компьютерных методов. Работа по разработке новых эффективных алгоритмов постоянно продолжается. Особый интерес представляют алгоритмы для подструктур перколяционного кластера и алгоритмы, основанные на параллельных вычислениях. В данной работе описан параллельный алгоритм многократной маркировки кластеров, который позволяет проводить имитационные эксперименты на многопроцессорных вычислительных системах. Предложенная мультиагентная модель распространения эпидемий на основе теории перколяции является существенно новым подходом как в имитационном моделировании, так и в направлении моделирования процессов распространения заболеваний. Перколяционный подход позволяет получить кластер, включающий в себя все возможные пути распространения болезни. 