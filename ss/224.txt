ПРИМЕНЕНИЕ ЧИСЕЛ МАЛОЙ РАЗРЯДНОСТИ В ЗАДАЧЕ БИНАРНОЙ ОПТИМИЗАЦИИ 

Рассматривается задача нейросетевой минимизации квадратичного функционала в пространстве бинарных переменных. Для ее решения предложен и исследован модифицированный алгоритм минимизации, основанный на применении метода дискретизации. Показано, что его применение дает уменьшение объема вычислений..

 В настоящей работе рассматривается задача минимизации квадратичного функционала. Матрица симметричная, с нулевой диагональю, а ее элементы случайные независимые величины. Так, уже при размерности вектора, равной 200, число минимумов 100 000, и поэтому нахождение достаточно глубокого минимума сложная задача. Алгоритм минимизации. За основу процедуры минимизации взята нейросетевая модель Хопфилда 1. Энергия сети задана выражением . Такую сеть можно рассматривать как систему, решающую задачу бинарной минимизации конвергируя в устойчивое состояние, сеть находит конфигурацию, соответствующую минимуму энергии E. Показано, что при случайном поиске вероятность отыскания какого-либо минимума экспоненциально растет с увеличением глубины этого минимума 2, 3. В данном случае рассмотрим только асинхронную динамику сети Хопфилда, однозначно приводящую к минимизации функционала энергии E на каждом такте работы сети вычисляется одна из компонент локального поля H, и компоненте s присваивается значение. Эта процедура последовательно применяется ко всем компонентам до тех пор, пока сеть не конвергирует в устойчивое состояние, соответствующее минимуму энергии. Для уменьшения объема вычислений в 4 предложен метод дискретизации матрицы, то есть выделение из матричных элементов среднего значения A и замена остатка матрицей C, нормированные элементы которой имеют целочисленные значения в диапазоне m m, где m число градаций. Оптимизация функционала проводится аналогично оптимизации функционала . Качество такой аппроксимации будет зависеть от выбранного числа градаций и определяется функцией распределения. С увеличением числа градаций максимум функции распределения смещается влево, в сторону более глубоких минимумов, что увеличивает вероятность их нахождения. Минимум функционала. В данной работе применяется двухэтапный алгоритм 5. Процесс минимизации функционала начинается с некоторой случайной точки пространства. На всем пути s величина ошибки только уменьшается. С ростом числа градаций m величина ошибки убывает как 1 P 2m 1. Эффективность минимизации определяется величиной E E E E, где энергия минимума s дискретизированного функционала E E энергия ближайшего к нему минимума, в который можно было спуститься при использовании исходного решающего правила . Показано 4, что эффективность минимизации E P, из которой следует, что разница в энергиях с ростом m убывает как E m. Сказанное подкрепляется результатами эксперимента. На рисунке кривые 1, 2, 4 функции распределения начального состояния, дискретизированного s и конечного. Кривая 3 распределение состояний исходного функционала. На рисунке они же отмечают точки максимумов функций плотности. Расстояние между этими максимумами на графике соответствует в точности формуле . Видно, что первый участок пути значительно больше второго участка s. Преимущество двухэтапного алгоритма в том, что первая часть пути s проходится с большей скоростью, вследствие чего достигается общее увеличение скорости работы алгоритма. Вероятность нахождения глубоких минимумов двухэтапным алгоритмом выше, чем простым методом. Работа с укороченной арифметикой Полученные результаты дают основу для применения метода дискретизации, что означает возможность применения чисел малой разрядности. В дальнейшем размер чисел матрицы будем называть исходным форматом, а p обозначим количество чисел малой разрядности, которое упаковывается в исходный 4-байтный формат. Основной объем вычислений по алгоритму Хопфилда приходится на вычисление градиента, то есть на вычисления скалярных произведений двух векторов. Поэтому возможность такого представления элементов позволяет увеличить быстродействие алгоритма. Например, сложение пары вещественных чисел в 4-байтном формате требует одного такта процессорного времени. За это же время можно сложить 4 пары целых чисел в байтном формате. По оси ординат отложено ускорение, а по оси абсцисс размерность нейросети N. С увеличением размерности нейросети ускорение алгоритма увеличивается и достигает своего предельного значения 7,3. На скорость работы сети также влияет исходный формат чисел. Алгоритм расчета нейронной сети Хопфилда основан на последовательном вычислении компонент градиента при каждом изменении состояния нейрона. На рисунке 4 показано уменьшение числа нейронов с каждой итерацией . На вертикальной оси отложена доля измененных нейронов n в процентах. Как видно из рисунка, с увеличением числа шагов число нейронов, изменяющих свое направление, становится малым. Это означает, что направление компонент H также редко изменяется. Поэтому вычисление на каждом шаге компоненты вектора H неэффективно. Вычислительная сложность алгоритма 2TN, где T число итераций. С увеличением размерности сети число итераций T растет . В настоящее время используется другой метод расчета. В исходном состоянии вычисляются все компоненты H. Объем вычислений компонент H в исходном состоянии равен N. При перевороте каждого спина производится N операций. Далее в качестве исходного алгоритма используется метод с обновлением компонент H. Для модификации алгоритма обновления при использовании чисел малой разрядности необходима их упаковка в исходный формат. В результате параллельно выполняются операции сложения и умножения, что приводит к увеличению скорости работы. Установлено, что достигаемое ускорение 5. на первом этапе. В этом случае. В этом случае ускорение алгоритма составит 1,4. Лимитирующим фактором, препятствующим увеличению быстродействия двухэтапного алгоритма, является объем вычислений градиентов H промежуточных состояний s. Для его уменьшения на втором этапе предлагается использование наиболее глубоких состояний s. Например, если продолжить спуск только с половины всех точек, ускорение составит O 2, 2 O 0, 5O. Конечно, при таком подходе велика вероятность получить несколько худшее решение, оценить которую можно экспериментально. Для этого распределение минимумов s разбивалось на левую и правую области относительно пика распределения и определялась вероятность найти самый глубокий минимум при стартах из каждой области. На рисунке видно, что самый глубокий минимум с вероятностью 96 находится из состояний левой области, в то время как правая область дает вероятность, близкую к нулю. Поэтому состояния правой области могут не участвовать на втором этапе поиска. Чтобы определить границы области, состояния s которых используются на втором этапе алгоритма, и тем самым уменьшить объем вычислений, определена интегральная эффективность минимизации. То есть определялся минимум величины E E E E на отрезке, начало которого соответствует наиболее глубокому минимуму дискретизированной сети. С помощью E можно оценить хеммингово расстояние D между глобальным минимумом E и самым глубоким минимумом E, найденным при стартах из отрезка. Действительно, при изменении состояния одного нейрона энергия меняется в среднем на величину e. Поскольку все минимумы при N100 находятся в области E 3 и отношение E 0,01, то E E E eN. Тогда. Поведение интегральной эффективности с увеличением длины отрезка показано на рисунке 8. На горизонтальной оси отложено расстояние от вершины функции распределения состояний s до границы области . Из рисунка 8 и с учетом условия можно заключить, что граница области находится на расстоянии, превышающем 2, от максимума функции распределения. С ростом размерности N наиболее глубокая величина уменьшается, поэтому граница отодвигается влево. Значение границы, равное 2,0, можно принять для всех размерностей нейронной сети, больших 100. Распределение состояний s подчиняется нормальному закону. Доля минимумов состояний s, лежащих глубже 2,0, к общему их числу составляет 0,05. В этом случае увеличение скорости работы алгоритма составит O 5, 0 O 0, 05O. На основании изложенного можно сделать вывод о том, что предложенная процедура дискретизации позволяет использовать числа малой разрядности для ускорения минимизации квадратичного функционала. Авторами разработан двухэтапный алгоритм на основе нейросетевой модели Хопфилда, дающий возможность быстро находить решение поставленной задачи. Ускорение работы алгоритма составляет 5,0. 