ИНТЕЛЛЕКТУАЛЬНОЕ УПРАВЛЕНИЕ МНОГОСВЯЗНЫМИ ОБЪЕКТАМИ, РЕАЛИЗОВАННОЕ В СИТУАЦИОННЫХ ПОДПРОГРАММАХ 

Предложен новый способ повышения быстродействия многомерных четких логических регуляторов (МЧЛР), основанный на размещении продукционных правил в ситуационные подпрограммы, начало которых фиксируется в специальном регистре процедурой фаззификации по равенству логической единице четких термов регулируемого параметра. Это позволило без потери адекватности управления в каждом цикле сканирования отрабатывать только одну подпрограмму, выбранную при фаззификации, а не всю систему продукционных правил регулятора. По своей логической природе каждая ситуационная подпрограмма представляет собой программную реализацию продукционного правила, которое необходимо отработать при равенстве логической единице одного из четких термов каждого регулируемого параметра МЧЛР. При корректном задании диапазонов регулирования выходных переменных МЧЛР в каждом цикле сканирования микропроцессор отрабатывает по одному правилу для каждого контура регулирования МЧЛР. Причем для нахождения этого правила используется стандартная процедура обращения к подпрограмме, которая в настоящее время хорошо минимизирована по процессорному времени и объему памяти. В типовых многомерных нечетких логических регуляторах в подобных ситуациях в каждом контуре отрабатывается вся система, насчитывающая десятки, а то и сотни продукционных правил.Два фундаментальных свойства (в любой момент времени только один терм равен логической единице и только у одного правила антецедент равен логической единице) рассматриваемых совокупности четких термов и системы продукционных правил являются теоретической основой повышения быстродействия и снижения погрешности МЧЛР..

 Интерпретация входных и выходных переменных многомерных четких логических регуляторов МЧЛР совокупностью четких термов предоставляет широкие возможности для повышения их быстродействия с помощью алгоритмов anytime 1 и steptime 2, позволяющих без потери адекватности управления в каждом цикле сканирования отрабатывать актуализировать не всю, а только часть 510 системы продукционных правил МЧЛР. Недостатком первого алгоритма является необходимость с заданной периодичностью располагать правила, в которых условная часть чаще принимает значение логической единицы, в начало системы продукционных правил с помощью специального программного блока. При втором алгоритме существенно усложняяются процедуры синтеза и отладки МЧЛР, так как для выработки актуального управляющего воздействия в режиме реального времени нужно формировать уникальный идентификационный код. Предлагаемый МЧЛР лишен данных недостатков. Без утраты общности рассуждений и для определенности входные и выходные переменные МЧЛР принято идентифицировать девятью четкими термами. Практика показывает 3, что в подавляющем большинстве случаев увеличение количества термов не приводит к существенному повышению качества регулирования. Рассмотрим работу алгоритма. Цикл сканирования программы, реализующей МЧЛР, начинается с отработки операторов условного перехода, входящих в состав фаззификаторов контуров регулирования МЧЛР. Например, если в первом контуре четкий терм Т равен логической единице, то микропроцессор по ветке 1 переходит к оператору и записывает в регистр Д адрес начала ситуационной подпрограммы СПП. вплоть до оператора . Если окажется, что все термы равны логическому нулю, то есть диапазон фаззификации задан некорректно, управление передается оператору АЛ с последующим сообщением о сбое в работе МЧЛР. В случае равенства одного из четких термов логической единице микропроцессор переходит к аналогичной отработке фаззификатора второго контура регулирования, потом третьего и т.д. до фаззификатора n-го контура. Здесь же проверяется логическое состояние переменных, идентифицирующих аварийную ситуацию. Цикл сканирования программы, реализующей МЧЛР, завершается отработкой блока ситуационных подпрограмм . Если предположить, что для интерпретации всех регулируемых переменных МЧЛР используется одинаковое число m четких термов, то общее количество СПП для рассматриваемого регулятора будет равно . По своей логической природе каждая СПП представляет собой программную реализацию продукционного правила, которое необходимо отработать при равенстве логической единице одного из четких термов каждого регулируемого параметра МЧЛР. Отсюда следует, что при корректном задании диапазонов регулирования выходных переменных МЧЛР в каждом цикле сканирования микропроцессор отрабатывает n продукционных правил, то есть по одному правилу для каждого контура регулирования МЧЛР. Отметим, что в типовых многомерных нечетких логических регуляторах 3 в подобных ситуациях в каждом контуре отрабатывается вся система, насчитывающая десятки, а то и сотни продукционных правил. Правило реализовано в СПП. Из рисунка 2 следует, что при равенстве условной части правила логической единице регулируемой величине первого контура МЧЛР присваивается значение терма Z. Затем производятся дефаззификация и выдача четкого значения управляющего воздействия U, соответствующего четкому терму Z. В противном случае управляющее воздействие в рассматриваемом контуре не изменяется. Функционирование остальных ситуационных подпрограмм аналогично. Это способствует сокращению сроков и повышению качества проектирования МЧЛР. Кроме того, независимо от сложности структуры антецедента продукционного правила результатом его сканирования является один из термов регулируемой величины, ширина которого определяет погрешность регулирования. Поскольку минимальная ширина четкого терма определяется разрешающей способностью программируемого контроллера, на котором реализован МЧЛР, становится ясно, что здесь имеются практически неограниченные возможности для снижения погрешности регулирования. Однако возможности алгоритма, показанного на рисунке 1, для повышения быстродействия МЧЛР значительно шире, поскольку в каждом цикле сканирования отрабатывается не вся система продукционных правил регулятора, а только одно правило, антецедент которого в данный момент равен логической единице. Причем для нахождения этого правила используется стандартная процедура обращения к подпрограмме, которая в настоящее время хорошо минимизирована по процессорному времени и объему памяти. На основе алгоритма функционирования МЧЛР разработана структурная схема регулятора, состоящая из четырех основных блоков. Фаззификатор Ф имеет входы задающих воздействий и обратных связей . Его выход соединен с блоком сканирования дискретных переменных МОУ, на входы которого подаются дискретные входные и выходные переменные объекта управления. Выход блока СДП МОУ соединен с входом блока ОСПП, выходные сигналы которого в аналоговом формате подаются на исполнительный орган МОУ. Интерпретация i-й регулируемой и задающей переменных совокупностью из m четких термов приведена на рисунке 5а. Из него следует, что в любой момент времени только один терм равен логической единице, причем тот, внутри которого в настоящий момент находится четкое значение Р и З, что соответствует здравому смыслу. В свою очередь, из-за этого в системе продукционных правил, оперирующей четкими термами, в любой момент только у одного правила антецедент равен логической единице. Именно эти фундаментальные свойства рассматриваемых совокупности четких термов и системы продукционных правил являются теоретической основой повышения быстродействия и снижения погрешности МЧЛР. Она может принимать два логических значения 1, если или включены, 0, если или отключен ы. Проведем количественную оценку снижения времени сканирования программы, реализующей МЧЛР, в сравнении с типовым нечетким регулятором. Определим, во сколько раз снизилось время сканирования в предлагаемом МЧЛР по сравнению с типовым многомерным нечетким регулятором, в котором, как известно 3, в каждом цикле сканирования, безусловно, отрабатывается вся программа, реализующая фаззификацию и регулирование. Предложенный логический регулятор внедрен в систему управления дистиллятором 5. На рисунке 6 представлены временные зависимости значений pH жидкости на выходе из дистиллятора на 57 . 