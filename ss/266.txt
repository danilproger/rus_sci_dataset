ВХОДНОЙ ЯЗЫК ОБЪЕКТНО-ОРИЕНТИРОВАННОЙ  БАЗЫ ЗНАНИЙ GRID-СИСТЕМЫ 

Рассматривается язык описания знаний об экспериментальной Grid-системе. Описание таких знаний базируется на объектно-ориентированной модели данных..

 Организация Grid-систем различного назначения является важным и практически значимым направлением научных исследований в области высокопроизводительных вычислений 1. Сложность таких систем обусловлена их динамичностью и стохастичностью, наличием большого числа объектов различной природы и связей между ними, распределенностью этих объектов и избыточностью информационно-вычислительных ресурсов. В Grid-систему могут интегрироваться сложные предметно-ориентированные программные комплексы. Для эффективного использования Grid-системы требуются развитые средства описания, хранения и обработки знаний о ее инфраструктуре, а также о процессах планирования и вычислений. В данной статье рассматривается язык описания объектной модели экспериментальной Gridсистемы, созданной на базе вычислительных ресурсов Суперкомпьютерного центра при Институте динамики систем и теории управления СО РАН. Представление знаний. В качестве модели Grid-системы используется объектно-ориентированная модель данных, обладающая рядом важных свойств, необходимых для представления знаний о Grid-системе. База знаний Grid-системы, реализованная на основе такой модели, обеспечивает целостность и безопасность информации в процессе извлечения объектов для совместного с другими пользователями доступа к ним и облегчает работу с объектно-ориентированными приложениями. В состав базовых элементов модели Grid-системы входят множества классов C, объектов O, полей P и типов T. Язык описания модели. Рассматриваемый язык представления знаний о Grid-системе включает синтаксические конструкции вида. Данный язык позволяет представить любые действия с моделью Grid-системы как последовательность базовых операторов. На выполнение базовых операторов могут быть наложены ограничения двух видов встроенные в транслятор языка описания модели Gridсистемы и дополнительные, определяемые разработчиком модели. К первому виду относятся блокировки дублирования и уничтожения классов или объектов, проверка соответствия типов и другие подобные ограничения целостности модели. Ограничения второго вида определяют специфику объектов модели и взаимосвязей между ними. Они формируются разработчиком с помощью специальной подсистемы транслятора. Свойства модели выявляются в процессе трансляции ее описания. В качестве примера рассмотрим описание фрагмента вычислительной модели распределенного пакета прикладных программ по линейной алгебре. Основными объектами этой модели являются множество параметров Z, множество операций F, множество программных модулей M, реализующих операции из F, и множество вычислительных узлов Grid-системы N. В таблице 1 приведены примеры создания классов этих объектов. На основе созданных классов формируются объекты модели. В таблице 2 приводится описание операции масштабирования матриц при вычислении ее собственных значений и векторов. Масштабирование матрицы применяется для понижения ее нормы с целью упрощения процесса нахождения собственных значений матрицы. Обозначения взяты из работы 2. Как видно из примера, связи между объектами возникают при инициализации полей. В данном случае список параметров связан с операцией масштабирования через поля input и output. Описание узлов Grid-системы приведено в таблице 3. Планирование загрузки ресурсов становится необходимым при возникновении избыточности ресурсов Grid-системы в случае, когда существует программный модуль, размещенный в двух или более вычислительных узлах. База знаний. В качестве основы БЗ экспериментальной Grid-системы ИДСТУ СО РАН используется объектно-ориентированная БД NeoDatis 3, дополненная управляющей надстройкой мультиагентной системой планирования и распределения ресурсов 4. В целом характеристики БД NeoDatis соответствуют основным положениям стандарта ODMG 5 и тем самым обеспечивают возможность ее интеграции с различными предметно-ориентированными комплексами, функционирующими в Grid-системе. Схематично процесс создания БЗ показан на рисунке. Описание предметной области, объектов и ресурсов Grid-системы на входном языке транслируется в текст описания на языке Java. При исполнении байт-кода Java-интерпретатором создается БД, которая вместе с подсистемой логического вывода, интерпретирующей правила вывода данных, образует БЗ Grid-системы. Рассмотренные в данной работе язык и средства его трансляции дают возможность конструировать предметно-ориентированные модели вычислений, включать в них требуемые ограничения и контролировать полноту, корректность и целостность атрибутов и взаимосвязей объектов разрабатываемых моделей. Такие модели обеспечивают детализированное описание инфраструктуры разнородных распределенных вычислительных сред, предоставляя возможность эффективно использовать ресурсы этих сред при решении сложных научных и прикладных задач. 