ПАРАЛЛЕЛЬНЫЙ ПРОГРАММНЫЙ КОМЛЕКС ОПТИМАЛЬНОГО РАЗВИТИЯ ДИНАМИЧЕСКОЙ ТРАНСПОРТНОЙ СЕТИ 

Предлагается модель динамической транспортной сети, под которой понимается сеть поставок, объединяющая некое количество поставщиков, потребителей и распределителей и имеющая стохастически изменяющиеся со временем параметры (спрос, потребление). Рассматривается задача оптимального развития подобной сети, то есть ее развитие с целью максимального удовлетворения спроса потребителей на протяжении модельного времени. Предложен параллельный алгоритм решения задачи оптимизации управления развитием сети, необходимость разработки которого обусловлена большим объемом вычислений при решении задачи на графах реальных транспортных сетей. Данный алгоритм составляет основу программного комплекса, позволяющего решать поставленную задачу на суперкомьютерах. Описан язык aDOT (расширение языка DOT) с удобным для пользователя представлением входных данных. Проведена апробация комплекса на вычислительной системе «Ломоносов» на тестовых и реальных задачах оптимизации. Приведены графики времени выполнения алгоритма на задачах различной вычислительной сложности, ускорения и эффективности, сделаны выводы по масштабируемости алгоритма. Приводится схема решения задачи разработки оптимального плана регламентных работ на нефтепередающей сети, иллюстрирующая применение созданного программного комплекса..

 Работа посвящена решению сложных задач на суперкомпьютерных системах. В ней описывается программный комплекс для решения задачи оптимизации развития динамической транспортной сети с непрерывным потоком, с большим числом узлов и дуг, а потому требующей большого количества вычислений. Под транспортной сетью в данной работе понимается сеть поставок, объединяющая некоторое количество поставщиков, потребителей и распределителей. Поставщики генерируют определенный поток, под которым в каждом конкретном случае можно понимать, например, энергию, энергоносители, товары и т.п. Потоки от поставщиков доходят либо непосредственно потребителям, либо распределителям, которые перераспределяют их по нескольким направлениям, после чего направляют потребителям. Поток, дошедший до потребителя, поглощается им. Целью рассматриваемой задачи является оптимизация управления развитием сети поставок от поставщика к потребителю. Сеть представляет собой набор заданных связей между поставщиками, распределителями и потребителями. Под оптимизацией ее развития понимается увеличение пропускной способности связей сети для максимального удовлетворения спроса потребителей. Задача рассматривается в предположении, что объемы поставок и спрос потребителей со временем изменяются. Развитие сети поставок должно учитывать этот факт и увеличивать пропускную способность тех элементов сети, в направлении которых осуществляется иили будут осуществляться основные поставки. При этом в такой постановке задачи не предусматривается, что задан единственный сценарий для изменения спроса и объема поставок в будущем. Предполагается, что для каждого потребителяпоставщика заданы целый набор возможных сценариев и вероятность каждого из них. В условиях описанной неопределенности под решением задачи понимается адаптивная стратегия управления развитием сети поставок, то есть на каждом шаге рассматриваемого процесса наблюдаются текущие объемы поставок от всех поставщиков и текущий спрос всех потребителей, и на основе этой информации принимается решение о направлениях дальнейшего развития сети. Сеть поставок представляет собой направленный граф, каждая вершина которого является одним из следующих объектов поставщик, потребитель или распределитель. Будем обозначать поставщиков S,. Каждая пара вершин может иметь направленную связь, которая характеризуется пропускной способностью . Если пропускная способность связи между двумя вершинами больше нуля, между этими вершинами возможен поток, объем которого в единицу времени не превосходит пропускную способность связи. Связь, соединяющую вершины i, j и направленную от вершины i к вершине j, будем обозначать C. Соответствующую этой связи пропускную способность обозначим c, а поток через эту связь f. Например, связь, соединяющую поставщика S и потребителя D, обозначим, C ее пропускную способность c, а поток. f Будем считать, что выполняются следующие естественные предположения. 1. Если вершина соответствует поставщику, то она может иметь только исходящие связи с потребителями или распределителями. 2. Если вершина соответствует потребителю, то она может иметь только входящие связи от поставщиков или распределителей. 3. Если вершина соответствует распределителю, то она имеет по крайней мере одну входящую и одну исходящую связи. Распределитель может иметь входящие связи от поставщиков или других распределителей и исходящие связи с потребителями или другими распределителями. 4. 5. 6. Распределитель характеризуется числом b, определяющим объем потока, который этот дистрибьтер может перераспределить. 7. Потоки, произведенные всеми поставщиками, распределяются по сети в соответствии с правилом, которое будем называть статическим правилом распределения потоков. 8. Суммарный поток, ушедший от поставщиков, в полном объеме доходит до потребителей. Причем, не предполагается, что от потребителей уходит весь поток, который он может сгенерировать. Таким образом, получаем следующую структуру функционирования инфраструктуры за единицу времени. Каждый поставщик производит некоторый объем исходящего потока. Потоки, произведенные всеми поставщиками, распределяются по сети в соответствии со статическим правилом распределения потоков. Потоки, дошедшие до потребителей, принимаются ими в соответствии с их возможностями. C C i k Используя введенные обозначения, запишем ограничения между связями, которым должны удовлетворять потоки f. R1 Поток вдоль связи не превосходит пропускную способность связи. Отметим, что минимум в последней задаче достигается, так как ограничения R1R5 задают ограниченное замкнутое множество, а функционал является непрерывной функцией своих аргументов. Рассмотрим заданный период времени функционирования инфраструктуры и предположим, что он разбит на N непересекающихся интервалов, что потоки, а также состояния поставщиков, потребителей и распределителей постоянны на одном интервале времени. c c Допустим, что имеется возможность управлять пропускной способностью связей. Точнее, на каждом интервале времени можно увеличить пропускную способность связей, причем предполагается, что связи, чья пропускная способность может быть увеличена, сгруппированы. В определенную группу объединяются связи, пропускная способность которых должна быть увеличена за один и тот же интервал времени. Также к одной группе могут относиться произвольные связи, например, одна связь, или последовательность связей, представляющая собой путь от некого поставщика к некому потребителю, или набор разрозненных связей. Предполагаем, что для конкретной связи каждой группы задано то значение, на которое планируется увеличивать пропускную способность этой связи. Таким образом, одна группа представляет собой некоторое одно мероприятие по увеличению пропускной способности связей за один период времени. Предположим, что MN, то есть количество возможных мероприятий не меньше количества интервалов времени. Управление развитием инфраструктуры заключается в последовательном выборе на каждом интервале времени группы связей, чья пропускная способность должна быть увеличена. Таким образом, один сценарий представляет собой набор функций Чтобы описать целый набор сценариев и каждому из сценариев поставить в соответствие вероятность, воспользуемся понятием марковского процесса. Таким образом, определенный марковский процесс будет описывать множество сценариев и вероятность каждого из них. Пусть задан некий сценарий, то есть набор функций, описывающий процесс изменения поставки, спрос и возможности по распределению потоков. Выбирая на каждом интервале времени группу связей, чьи пропускные способности будут увеличены, в соответствии с равенствами и получаем изменяющиеся во времени пропускные способности связей. Все это приводит к изменению потоков от интервала к интервалу, при этом потоки должны удовлетворять ограничениям R1R5. Отметим, что это множество замкнутое и ограниченное. Данные коэффициенты отражают тот факт, что конечное состояние развиваемой инфраструктуры важнее промежуточных состояний. Таким образом, необходимо найти оптимальное адаптивное управление развитием инфраструктуры, то есть такое управление, которое по результатам наблюдений состояний поставщиков, потребителей и распределителей на каждом интервале времени определяет из набора незадействованных групп группу связей, чью пропускную способность надо увеличить. Оптимальное значение функционала будем обозначать I . Подход к решению задачи основан на методах динамического и линейного программирования. Утверждение. V G s d b W G s d b Доказательство приведено в 1. Следствие. 1. 2. 3. Оптимальное управление строится следующим образом. Для решения этой задачи предлагается использовать алгоритм ЭдмондсаКарпа 2. Преобразование графа выполняется следующим образом. Снимаются ограничения пропускной способности s, d, b с вершин. Предложенный алгоритм имеет экспоненциальную сложность относительно числа моментов времени Q, поэтому его использование на реальных моделях транспортных сетей требует большого количества вычислений. С развитием и массовым распространением параллельных вычислительных систем актуальна разработка параллельного алгоритма решения данной задачи. Этот факт положен в основу предлагаемого параллельного алгоритма. После вычисления всех необходимых значений находится искомая последовательность оптимального управления . Для реализации параллельного алгоритма требуется правильно решить проблему загрузки, синхронизации и балансировки параллельных процессов. Из двух основных групп методов решения проблем балансировки статических и динамических был выбран метод динамической балансировки, так как время решения каждой подзадачи T априори неизвестно и может варьироваться в пределах 0T N N. Опишем метод динамической балансировки в предложенном алгоритме. Множество процессов, реализующих параллельный алгоритм, разбивается на две группы управляющий процесс и процессы-обработчики . На master-процесс возложены функции распределения элементарных заданий по обрабатывающим slave-процессам и сбора полученных результатов. Количество slave-процессов фиксированное и равно P1, где P число параллельных процессов, определяемое при запуске параллельной программы. На рисунке 1 представлена диаграмма последовательности действий предложенного алгоритма. Отсутствие необходимости выполнения синхронизации между подзадачами позволяет выполнять их независимо. С помощью предложенной схемы балансировки можно автоматически учитывать возможную неоднородность вычислительной системы, на которой будет выполняться параллельная программа. Оценка параметров транспортной сети, для которой может быть решена задача оптимизации, определяется объемами оперативной памяти, необходимой для работы алгоритма. Для внутреннего представления графа транспортной сети требуется K байт, информации о состояниях марковского процесса KE байт, информации о группах связей 4KQ байт. Суммарный объем требуемой оперативной памяти равен KE 4Q байт. Объемы данных, пересылаемых между masterпроцессом и slave-процессами при решении одной подзадачи, оцениваются размером памяти, необходимой для представления номера состояния марковского процесса и индексов задействованных групп, что составляет KQ байт. Время передачи этих данных будет значительно меньше времени решения системы неравенств для больших транспортных сетей. Например, для транспортных сетей с N 1 000, Q1 000 на суперкомпьютере Ломоносов время передачи данных составляет 0,5 мс, а время решения одной подзадачи от 1 секунды. Предложенный параллельный алгоритм был положен в основу программного комплекса, предназначенного для решения задачи оптимального развития динамической транспортной сети с непрерывным потоком. Решение поставленной задачи связано с проведением многочисленных экспериментов, требующих диалогового взаимодействия пользователя с системой, поддержки формирования входных данных, выполнения расчетов и визуализации результатов. С учетом этого была выбрана структура программного комплекса. Программный комплекс состоит из двух основных модулей FrontEnd, который устанавливается на персональный компьютер исследователя, и ParallelSolver, устанавливаемый на суперкомпьютерную систему. В качестве языка описания модели транспортной сети предложено расширение языка описания графов Dot. Язык Dot дополнен возможностью описания весов ребер, матрицы переходных вероятностей и задания групп ребер. Для визуализации результатов работы выбран пакет GraphViz и предложено его расширение возможностями вывода динамики развития транспортной сети. Для построения оптимальной последовательности развития на основе наблюдаемых состояний разработана программа OptimalSequnce, реализующая пункты 2 и 3 описанного выше алгоритма нахождения оптимального решения задачи . В состав модуля FrontEnd включены синтаксический анализатор расширения языка Dot, расширенный пакет GraphViz и инструмент OptimalSequnce для построения оптимальной последовательности развития на основе последовательности наблюдаемых состояний. Пересылка данных между модулями осуществляется пользователем. Схема взаимодействия модулей показана на рисунке 2. Реализация программного комплекса выполнена на суперкомпьютере Ломоносов, а также на суперкомпьютерах BlueGeneP и СКИФ-МГУ. Программный комплекс может использоваться и на других многопроцессорных вычислительных системах, поддерживающих стандарт MPI. Cуперкомпьютер Ломоносов с пиковой производительностью 1,7 Пфлопс содержит 52 168 ядерных вычислительных узлов x86. Пользователям доступны несколько разделов, имеющих различные характеристики процессорных узлов. Для решения задачи на каждом из разделов организовано несколько очередей. Вычислительный эксперимент проводился на разделе, содержащем 4 096 узлов, которые включают в себя по 2 четырехъядерных процессора Intel Xeon 5570 Nehale. С точки зрения решаемой задачи интерес представляет объем оперативной памяти 12 Гбайт на узел. Выбор параметров тестовых моделей проводился с учетом этих ограничений по размеру оперативной памяти. Ограничения на параметр Q и на размер графа обусловлены максимальным временем, выделяемым для решения задачи в выбранной очереди суперкомпьютера . Связи между вершинами графа подбирались следующим образом. Общее количество связей N распределялось на две равные группы N 2 связей, соединяющих случайно выбранных поставщика и распределителя, и N 2 связей, соединяющих случайно выбранных распределителя и потребителя. Данное распределение выполнено в соответствии с методом тестирования алгоритмов поиска максимального потока, предложенного в 3, и таким образом сгенерированные сети относятся к классу Random Layered Networks. Группы дуг G, G выбраны так, что число связей в каждой группе равно N Q, то есть все дуги графа транспортной сети равномерно распределены по группам и каждая группа состоит из случайно выбранных дуг графа. В соответствии с формальным описанием модели параметр E описывает число состояний, в которых может находиться динамическая транспортная сеть, и его значение принято равным 64, что соответствует реальным прикладным задачам. Подробный список значений параметров модели Q, N, N, N, N и соответствующих им значений вычислительной сложности задачи N, N для всех тестовых моделей приведен в таблице 1. N N N N N N В соответствии с формулой суммарного объема требуемой оперативной памяти и с учетом того, что N N, для 12 Гбайт ОЗУ узла суперкомпьютера Ломоносов возможно решение задач для транспортных сетей с числом дуг до 10. Для экспериментального подтверждения этой теоретической оценки сгенерирована модель 5, и для нее успешно решена задача оптимизации. Ввиду стохастической генерации дуг в графе транспортной сети для каждого набора параметров сгенерировано пять различных тестовых моделей. Итоговое время решения задачи оптимизации для каждого набора параметров рассчитано как среднее арифметическое по пяти тестовым моделям. Вычислительный эксперимент был проведен на тестовых задачах с использованием процессоров от 2 до 2 048. Узлы суперкомпьютера работали в режиме SMP с одной нитью. На рисунке 3 показаны графики ускорения и эффективности параллельных вычислений. На них отражены результаты для тестовых моделей 14. Как видно из графиков, на задачах с N 32 768 эффективность параллельных вычислений близка к 1, что подтверждает хорошую сильную масштабируемость предложенного алгоритма. В качестве иллюстрации использования разработанного программного комплекса опишем решение модельной задачи составления плана регламентных работ на нефтепроводной сети. Сеть показана на рисунке 4. Небольшое число узлов сети выбрано только с целью детальной демонстрации всех шагов алгоритма. Сеть может находиться в одном из трех состояний. Параметры сети в этих состояниях приведены в таблице 2. Количество состояний обусловлено сезонными изменениями спроса и потребления нефти в транспортной сети. Развитие транспортной сети, полученное с помощью инструмента визуализации модуля FrontEnd, графически представлено на рисунке 5. Расчет решения этой модели выполнялся на небольшом числе процессоров и в данной статье приводится для иллюстрации подхода. Подобный подход, связанный с быстрым расчетом небольших моделей, дает возможность одновременно проводить несколько экспериментов для одной и той же транспортной сети с различными параметрами количества моментов времени и комбинаций одновременно проводимых мероприятий по развитию сети. В заключение следует отметить, что в работе описан программный комплекс, позволяющий моделировать развитие транспортной сети. Проведены анализ разработанного параллельного алгоритма оптимального управления динамической транспортной сетью, а также экспериментальное исследование эффективности алгоритма на суперкомпьютере Ломоносов. Определены параметры входных данных, влияющие на время ее решения N оценка сложности поиска максимального потока алгоритмом ЭдмондсаКарпа, N число экстремальных задач. Проведенный вычислительный эксперимент показал высокую эффективность алгоритма на задачах с большим количеством моментов модельного времени и состояний системы N 2 и размером графа транспортной сети. Рассмотрено решение реальной задачи построения плана регламентных работ для нефтепроводной сети. Применение суперкомпьютерных вычислений позволяет строить реальные транспортные сети с большим количеством узлов и дуг, состояний и моментов модельного времени. Поскольку число узлов суперкомпьютеров растет, авторы планируют провести исследование эффективности алгоритма, положенного в основу программного комплекса, при количестве задействованных узлов более 2 и возможности усовершенствования схемы балансировки загрузки для минимизации накладных расходов на передачу данных. 