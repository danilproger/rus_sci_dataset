ОСНОВНЫЕ ОПЕРАЦИИ НАД N-ОРИЕНТИРОВАННЫМИ ГИПЕРГРАФАМИ В РЕЛЯЦИОННОЙ БАЗЕ ДАННЫХ 

Введено понятие N-ориентированного гиперграфа. Описаны операции добавления и удаления вершин и ребер в N-ориентированных гиперграфах, представленных в реляционной базе данных.

 Гиперграфы применяются в автоматизированных системах для процедур анализа и синтеза технических объектов. В работе 1 подробно описаны методы декомпозиции гиперграфовых структур, в 2 операции над ультраи гиперграфами, представленными в аналитическом виде. Данные публикации описывают операции над гиперграфами, не привязываясь к программным продуктам, в среде которых предполагается реализация автоматизированной системы. Между тем выбранная программная среда оказывает большое влияние на последовательность действий при выполнении операций над гиперграфами. Целью настоящей работы является представление N-ориентированных гиперграфов и операций добавления и удаления вершин и ребер в реляционной БД. Эти операции описываются как с помощью теории множеств, так и непосредственно операторами языка структурированных запросов, в качестве которого выбран Transact-SQL. Пример ориентированного гиперграфа представлен на рисунке 1. Запись 4 на рисунке означает, что номер вершины x в ребре u один. Для пояснения рисунка в таблице приведены наборы вершин, инцидентных ребрам. В общем случае номер вершины в ребре необязательно должен иметь значение номер по порядку и может отражать определенное свойство вершины, которое принимает конкретное значение при включении вершины в ребро. При этом предполагается, что все вершины в ребрах имеют одинаковый набор свойств. Для простоты координаты вершин обозначим номерами от 1 до N. Значение свойства n, n 1, N, вершины x, x X, в ребре u, u U, обозначим sn, i, m. По аналогии со схемой данных ориентированного гиперграфа 3 представим схему данных N-ориентированного гиперграфа. Примем, что значения полей первичного ключа IDU, IDX, IDG определяются автоматически например, свойство IDENTITY в Transact-SQL или счетчик в MS-Access. Будем также считать, что наименования вершины в таблице X и ребра в таблице U уникальны FKGX, FKGU внешние индексы, которые связывают таблицы G и X, G и U. Поля NPP1, NPP2, NPPN таблицы G представляют собой координаты вершины IDX в ребре IDU. Число координат определяется прикладной задачей. Максимальное число координат N определяется ограничениями выбранной СУБД. Так, например, для СУБД MS-SQL Server 2005 максимальное число столбцов в таблице 1024, этого достаточно для решения практических задач по проектированию технологического оборудования и управления предприятиями химического и машиностроительного профилей. При добавлении вершины в существующие ребра возможны следующие ситуации 1 2 3 3 4 2 4 1 1 1 координаты вершин, входящих в ребро, изменяются например, координата порядковый номер вершины изменяется у всех существующих вершин при добавлении новой вершины с порядковым номером один координаты существующих вершин не изменяются. Наименование добавляемой вершины обозначим переменной Наименованиевершины значение поля первичного ключа IDХ. С учетом введенных обозначений последовательность действий и реализация этих действий в среде Transact-SQL при добавлении новой вершины в ребро следующие. Этот пункт полностью определяется характером решаемой задачи. Для примера обозначим функцию, позволяющую получить новое значение свойства NPP вершины IDX в ребре IDU как dbo.FNPP. Тогда корректировку свойств вершин можно записать следующим образом. При добавлении нового ребра возможны два основных случая новое ребро содержит только существующие вершины новое ребро содержит новые вершины. В таблице X1 поле IDX имеет значение NULL, если вершина новая . Обозначим наименование нового ребра как Наименованиеребра. С учетом введенных обозначений последовательность действий и реализация этих действий в среде Transact-SQL при добавлении нового ребра следующие. 1 Добавление во множество X новых вершин, если они есть в добавляемом ребре, результат множество X2. где INPUTU1NPP процедура, позволяющая ввести значения свойств вершин добавляемого ребра. Удаление вершины. В 1 предлагается называть слабым удалением удаление вершины из ребра с сохранением ребер, сильным удалением удаление вершин вместе с инцидентными ребрами. Рассмотрим следующие типовые операции удаления вершины из определенного ребра с сохранением ребра простое удаление вершины из ребра вместе с ребром составное удаление из всех ребер с сохранением ребер слабое удаление из всех ребер вместе с ребрами сильное удаление. При этом возможны как удаление вершины из множества X, так и сохранение ее в этом множестве. Удаление вершины из множества X возможно только при слабом и сильном удалении вершины, в противном случае будет нарушена целостность базы. Кроме того, удаление вершины из ребра, как и в случае с добавлением вершины в ребро, может привести к изменению координат других вершин в этом ребре. Введем обозначения x, удаляемая вершина u, ребро, из которого удаляется вершина X1, X1 множество вершин, инцидентных j-му и z-му ребрам U2 множество ребер после удаления G получаемый гиперграф при удалении вершины из множества X G получаемый гиперграф без удаления вершины из множества X U2 множество ребер гиперграфа, получаемое после удаления вершины x. Как и в случае с добавлением вершины, корректировка свойств S вершин ребра u в зависимости от свойств вершины x полностью определяется характером решаемой задачи. Так как ребра удаляются, корректировку свойств их вершин проводить не надо. Удаление ребра. По аналогии с удалением вершины будем различать следующие операции удаления ребер простое удаление ребра из множества G составное удаление ребра из множества G и удаление всех вершин удаляемого ребра из других ребер жесткое удаление ребра из множества G и удаление всех ребер, в которые входят вершины удаляемого ребра. При этом возможны как сохранение, так и удаление ребра и соответствующих вершин из множеств U и X. Введем обозначения u удаляемое ребро, X1 множество вершин ребра u U2, X2, G2 множество ребер, вершин и граф, соответственно, получаемых после удаления ребра u. В этом случае следует провести корректировку свойств оставшихся вершин. Обозначим через K множество индексов вершин удаляемого ребра. При удалении вершин удаляемого ребра из множества X для обеспечения целостности БД необходимо удалить эти вершины из всех ребер гиперграфа и, соответственно, произвести корректировку свойств оставшихся в этих ребрах вершин. Причем сначала надо выполнить корректировку вершин, а потом их удаление. В этом случае простое удаление трансформируется в составное. Если внешний ключ FRGX описать как, то удаление вершин из всех ребер будет сделано при удалении вершины из множества X, в противном случае можно воспользоваться оператором Составное удаление ребра удаление ребра и удаление всех вершин удаляемого ребра из других ребер. Составное удаление ребра это простое удаление с удалением вершин ребра из множества X, которое описано выше. Так как ребра, содержащие вершины удаляемого ребра, удаляются, проводить корректировку свойств их вершин не надо. В работе введено понятие N-ориентированного гиперграфа и описаны основные операции над такими гиперграфами, представленными в реляционной БД. Эти операции имеют как теоретико-множественное описание, так и описание на языке Transact-SQL. N-ориентированные гиперграфы и операции над ними использовались для описания структуры технических объектов и создания программных шаблонов, предназначенных для разработки систем автоматизированного управления 4 и проектирования технологического оборудования 5. 