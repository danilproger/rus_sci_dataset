ЯЗЫК ОПИСАНИЯ МОДЕЛИ ПРЕДМЕТНОЙ ОБЛАСТИ В ПАКЕТАХ ПРИКЛАДНЫХ ПРОГРАММ 

Обсуждаются вопросы, связанные с организацией параллельных вычислений. В частности, рассматриваются средства описания предметной области и непроцедурных постановок задач в пакетах прикладных программ с автоматическим синтезом параллельных программ..

 Активное внедрение параллельной вычислительной техники в практику проведения расчетных работ обоснованно требует повышения степени автоматизации этого процесса и тем самым вновь актуализирует применение пакетного подхода к организации прикладных исследований. Неотъемлемой частью пакетного подхода являются методы и средства описания предметной области решаемой задачи, определяющие уровень общения специалиста-предметника с параллельной вычислительной системой. Анализ известных систем параллельного программирования показывает, что крайне мало внимания уделяется построению прикладных программных систем на основе повторного использования программных блоков, особенно их большого количества. Данная статья это логическое продолжение исследований, связанных с разработкой инструментального комплекса ORLANDO Tools 1. Высокоуровневые языковые средства описания модели предметной области в пакетах прикладных программ описываются с помощью указанного выше инструментария. Детально рассматриваются основные конструкции входного языка пакета, позволяющие в декларативной форме определять параллельные структуры данных и неявно описывать параллелизм программных блоков по управлению. Описание модели, которое включает спецификации объектов предметной области, а также постановок задач и запросов на их решение, осуществляется на специализированном декларативном языке ORLANDO. Все информационно-логические связи выявляются и учитываются в дальнейшем на этапах формирования и анализа модели предметной области при автоматическом синтезе параллельной программы. Рассмотрим основные конструкции языка ORLANDO . Описание модуля. Модуль это спецификация подпрограммы-функции на языке C или FORTRAN. Данная спецификация включает информацию о языке программирования и программных файлах, входных переменных и их формате, а также содержит инструкции компилятору. Целевые параллельные программы синтезируются на основе этой информации посредством процедур трансляции и компиляции. Для описания модуля служит конструкция Здесь имя модуля содержательный идентификатор модуля функция описание сигнатуры функции язык программирования язык, на котором написана функция. Кроме того, в состав конструкции входят директивы INCLUDE для указания заголовочного файла, в котором объявлена данная функция FILES для перечисления дополнительных файлов, необходимых при компиляции или исполнении программы LIBS для задания библиотек, требуемых при компиляции программы COMPILER для назначения дополнительных опций компилятора. Модули составляют функциональное наполнение пакета прикладных программ слой вычислительных знаний. На его основе формируются слои схемных и продукционных знаний о предметной области пакета. Описание параметра. Параметр может быть представлен скаляром, вектором или матрицей значений одного из допустимых типов данных, которыми являются byte, bool, int, long, float, double. Для описания параметра служит конструкция Здесь тип один из допустимых типов параметра имя параметра содержательный идентификатор параметра, отражающий его назначение в конкретной предметной области BOUNDS ключевое слово, предназначенное для задания верхних границ изменения индексов элементов векторов и матриц. Описание операции. Операция это объект предметной области, определяющий отношение вычислимости между двумя подмножествами параметров предметной области возможность вычисления искомых значений параметров первого подмножества, когда известны значения параметров второго подмножества, с помощью указанной прикладной программы . Принадлежность параметра к подмножеству заданных параметров уточняется с помощью ключевого слова IN . На основе описаний параметров, операций и модулей планировщик ИК ORLANDO Tools формирует информационно-логические связи между ними и тем самым определяет возможные сочетания и правила параллельного применения модулей в процессе решения задачи. Предполагается, что в общем случае описание предметной области избыточно одни и те же параметры могут быть вычислены путем применения разных операций. Приведем пример описания схемных знаний на языке ORLANDO. На рисунке изображены двудольный ориентированный граф, отражающий информационно-логические связи параметров и операций приведенного фрагмента описания предметной области, а также отношения между операциями и модулями, реализующими эти операции. Отметим, что в данном примере операции f и f реализованы одним и тем же модулем m. Такая возможность позволяет отразить семантику используемых данных, необходимую при планировании вычислений . Описание параметра-списка. С целью обеспечения возможности реализации в модели предметной области пакета параллелизма по данным в языке ORLANDO введен структурный тип данных параметр-список, создаваемый на основе параметра любого допустимого типа и включающий множество вариантов значений этого параметра. Такая параллельная структура данных реализует способ организации данных, позволяющий выполнять независимую параллельную обработку элементов этой структуры в рамках конкретной вычислительной системы. Число элементов параметрасписка задается параметром-скаляром целого типа. Основное отличие параметра-списка от параметра-массива заключается в способе обработки их элементов. Параметр-массив целиком передается в модуль, реализующий операцию, выполняемую над этим параметром, в то время как параметр-список может обрабатываться поэлементно, в общем случае одновременно, множеством экземпляров модуля в разных узлах параллельной вычислительной системы. Под поэлементной обработкой параметров-списков подразумевается следующее пусть x и y параметры-списки, созданные на основе параметров x и y IPN и OUTP соответственно множества входных и выходных параметров модуля m, предназначенного для поэлементной обработки этих параметров-списков, x INP, y OUTP. Интерпретация модуля m выполняется следующим образом 1 происходит параллельный запуск r экземпляров модуля m, j-му экземпляру модуля m передается j-й элемент списка x 2 результат присваивается j-му элементу списка y. В процессе вычислений параметры-списки могут обрабатываться и как неделимые структуры данных. В этом случае обработка параметра-списка осуществляется аналогично обработке параметра-массива. Для описания параметра-списка служит конструкция Здесь имя параметра-списка содержательный идентификатор параметра-списка имя параметра идентификатор исходного параметра, на основе которого создается параметр-список размерность идентификатор параметра, значение которого будет определять количество элементов параметра-списка. Описание постановки задачи. Постановка задачи это запрос к предметной области зная модель предметной области M, по заданным значениям параметров x, x, x вычислить значения параметров y, y, y. Для описания постановки задачи используется конструкция Здесь имя задачи содержательный идентификатор постановки задачи список параметров список имен параметров. Принадлежность параметра к подмножеству заданных параметров указывается с помощью ключевого слова IN . Модель M в постановке задачи явно не указывается. Пусть на модели предметной области, приведенной на рисунке, сформулирована следующая постановка задачи Для нее планировщиком ИК ORLANDO Tools будут найдены два плана решения задачи 1 f 2 f f. В приведенных планах решения задачи последовательное и параллельное выполнения операций обозначены символами и соответственно. Выбрать план решения задачи может либо непосредственно сам пользователель пакета, либо планировщик ИК в соответствии с заданными пользователем критериями оценки эффективности вычислений, такими как общее время решения задачи, длина плана, и другими характеристиками вычислительного процесса. Приведем конструкции языка ORLANDO, предназначенные для построения запросов на решение поставленной задачи. Описание базы расчетных данных. Вводвывод данных в ИК ORLANDO Tools осуществляется через базу расчетных данных. Специализированный табличный редактор инструментального комплекса поддерживает импортэкспорт данных виз MS Excel. Для описания базы расчетных данных пользователя служит конструкция Здесь имя базы данных содержательный идентификатор базы расчетных данных путь к базе данных полный путь к БД. По умолчанию базы расчетных данных создаются в специальной системной директории пакета прикладных программ. Инициализация параметров скаляров. Для инициализации можно использовать команду Описание задания. Задание это запрос на решение задачи по ее непроцедурной постановке с указанием используемой базы данных. Для описания задания служит конструкция Здесь имя задания содержательный идентификатор задания постановка задачи идентификатор постановки задачи, по которой следует провести расчеты имя базы данных и версия соответственно идентификатор БД и версия значений параметров в ней, которые будут использоваться для проведения расчетов. Все рассмотренные спецификации могут быть снабжены комментариями, содержащими информацию о назначении описываемого объекта, семантике значений его атрибутов и других дополнительных характеристиках. Комментарии оформляются по правилам языка С. Проверка корректности и целостности описания предметной области выполняется на этапах трансляции этого описания с языка ORLANDO на язык C и планирования вычислений. При разработке языка ORLANDO преследовалась цель создания компактного, но вместе с тем достаточно выразительного языка программирования, позволяющего пользователю лаконично, в декларативном стиле описывать предметные области сложной в том числе и переменной структуры, легко поддающиеся машинному анализу с целью выявления параллелизма в алгоритме решения задачи. Дальнейшее развитие языка ORLANDO связано с реализацией новых конструкций, которые позволили бы описывать для параллельной вычислительной системы знания продукционного слоя, а также автоматически строить циклические и ветвящиеся планы решения задачи для предметных областей с переменной структурой 2. 