АВТОМАТИЧЕСКАЯ РЕКОНСТРУКЦИЯ ТРЕХМЕРНЫХ ОБЪЕКТОВ  ПО ТЕХНИЧЕСКОМУ ЧЕРТЕЖУ 

Рассмотрены вопросы автоматической реконструкции трехмерных объектов по техническому чертежу. Разработан алгоритм реконструкции трехмерных моделей на основе граничного представления. Алгоритм использует шаблоны для распознавания типовых конструктивных элементов модели. Приведены практические результаты работы алгоритма.

 Модернизация во всех областях промышленности невозможна без широкого внедрения CALSтехнологий, основанных на электронной модели изделия, одной из составляющих которой является компьютерная трехмерная модель объекта, используемая для разработки управляющих программ, инженерного анализа изделий, визуализации и т.д. Современные CAD-системы имеют широкий набор средств для создания трехмерных моделей с чистого листа булевы операции, операции объектно-ориентированного моделирования, 2,5D-операции, операции модификации вершин, ребер и граней. Практически все они позволяют осуществлять генерацию чертежей по трехмерной модели, однако получение такой модели по чертежу вызывает у проектировщиков затруднения из-за отсутствия математического и программного обеспечения. В архивах предприятий накоплено большое количество технических чертежей как в бумажном, так и в электронном виде. Кроме того, разработка многих объектов часто начинается не с трехмерной модели, а с чертежа. Двухмерные чертежи часто сложны для понимания, неудобны для корректировки и не могут служить основой для дальнейших разработок с использованием компьютерных систем. Создание системы, выполняющей автоматическую реконструкцию трехмерных моделей по техническому чертежу, позволит во много раз сократить время проектирования объектов различного назначения. Этим обусловлена необходимость разработки математического и программного обеспечения системы автоматической реконструкции трехмерных моделей объектов по техническому чертежу. Все способы восстановления трехмерных моделей по чертежам можно условно разделить на две группы CSGи B-rep-подходы. CSG-ориентированный подход использует стратегию восстановления сверху вниз. Он основан на том, что каждый трехмерный объект может быть построен из определенного двухмерного примитива иерархическим способом 1. На чертеже отыскиваются шаблоны, которые будут служить базой и использоваться для перевода в трехмерную модель. После этого сконструированные примитивы собираются в результирующую трехмерную модель при помощи булевых операций. Недостатком CSG-ориентированного подхода является то, что с его помощью трудно распознать базовые примитивы на сложных чертежах. К тому же при использовании базовых примитивов затруднительно представить поверхности сложной формы. B-rep-ориентированный подход использует восходящую технологию. B-rep-ориентированные алгоритмы включают обычно следующие шаги генерирование возможных трехмерных вершин из чертежа синтез ребер по полученным координатам вершин конструирование граней из ребер, лежащих в одной плоскости формирование трехмерного объекта из граней 2. Граничное представление обеспечивает высокую точность моделирования геометрии объекта, чего нельзя достичь при использовании CSG-подхода. Однако при использовании B-rep-представления требуется больший объем памяти для хранения и обработки данных. Кроме того, создаваемая модель логически менее устойчива, то есть возможно построение неоднозначных конструкций. Существующие алгоритмы реконструкции по чертежам характеризуются следующими свойствами степень участия оператора в процессе реконструкции, обработка невидимых линий, восстановление пазов и отверстий, реконструкция сложных поверхностей, качество исходного чертежа 3. Представляемый алгоритм разработан на основе B-rep-представления, поскольку оно имеет большие возможности по описанию геометрии сложной формы. Основная идея алгоритма состоит в нахождении конструктивных элементов трехмерной модели с помощью заранее предопределенных шаблонов. Шаблоны описываются при помощи матриц. На основе шаблонов описываются такие элементы, как отверстия, пазы, фаски и другие. Разработанный алгоритм обрабатывает данные векторного чертежа, сохраненного в формате DXF и состоит из следующих шагов. Шаг 1. Чтение векторного файла чертежа. Шаг 2. Автоматическое разделение чертежа на виды спереди, сверху и слева. В этом случае проверяется расположение примитивов чертежа относительно горизонтально и вертикально перемещающихся прямых. При этом прямая не пересекает ни один из примитивов чертежа. В таком случае для каждой вершины примитива выполняется либо условие x A, либо условие x A. Аналогично происходит разделение чертежа на главный вид и вид сверху. Шаг 3. Нахождение координат вершин трехмерной модели на основе видов. Любая неточность в построении примитивов приводит к неоднозначной интерпретации изображения. Шаг 4. Определение и маркировка примитивов проволочной модели. Проволочная модель состоит из отрезков прямых, дуг, окружностей, сплайнов и т.д. Если хотя бы две проекции примитива на видах совпадают, находятся соответствующие ему вершины, координаты которых вычислены на шаге 3. Описание примитива в трехмерном пространстве заносится в память, после чего ему присваивается номер. Шаг 5. Определение и построение граней модели реконструируемого объекта. Грань строится на основе замкнутого контура примитивов, принадлежащих одной плоскости. Контур должен состоять из минимально возможного количества примитивов. Шаг 6. Определение и построение конструктивных элементов модели на основе шаблонов. Смежными будем считать примитивы, которые имеют общую вершину. Таким образом, каждый конструктивный элемент можно представить проволочной моделью. Взаимное расположение примитивов можно описать на основе матрицы смежности. Каждый столбец описывает дугу или окружность, а строка отрезок прямой. На пересечении строки и столбца находится цифра, определяющая смежность примитивов и их обозначение на чертеже. В системе заранее хранятся матрицы, определяющие шаблоны конструктивных элементов. Матрица смежности для отрезка прямой и окружности имеет вид Для элементов, представленных на рисунке 2, матрицы смежности будут иметь вид,. На основе извлеченной из чертежа информации строятся матрицы и сравниваются с шаблонами, хранящимися в системе. Если параметры шаблонов совпадают, делается вывод о присутствии на чертеже того или иного конструктивного элемента. Далее создается граничное представление формы элемента. Результат реконструкции видов представлен на рисунке 3. Разработанный алгоритм является полностью автоматическим и работает только с чертежами, представленными в векторной форме. Алгоритм предъявляет высокие требования к точности построения чертежей, обрабатывает невидимые линии и криволинейные поверхности. Чтобы система была полностью универсальна для различных геометрических форм, необходимо описать шаблоны всех примитивов, которые могут встречаться при моделировании. Опытные модули системы разработаны на языке AutoLISP для системы AutoCAD. 